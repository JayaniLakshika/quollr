// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// predict_emb_indices
IntegerVector predict_emb_indices(NumericMatrix test_data, NumericMatrix centroids);
RcppExport SEXP _quollr_predict_emb_indices(SEXP test_dataSEXP, SEXP centroidsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type centroids(centroidsSEXP);
    rcpp_result_gen = Rcpp::wrap(predict_emb_indices(test_data, centroids));
    return rcpp_result_gen;
END_RCPP
}
// compute_errors
List compute_errors(NumericMatrix true_data, NumericMatrix pred_data);
RcppExport SEXP _quollr_compute_errors(SEXP true_dataSEXP, SEXP pred_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type true_data(true_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pred_data(pred_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_errors(true_data, pred_data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_quollr_predict_emb_indices", (DL_FUNC) &_quollr_predict_emb_indices, 2},
    {"_quollr_compute_errors", (DL_FUNC) &_quollr_compute_errors, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_quollr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
