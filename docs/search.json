[{"path":"https://jayanilakshika.github.io/quollr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 quollr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"number-of-bins-along-the-x-axis","dir":"Articles","previous_headings":"Constructing the model in the 2D space > 1. Compute hexagonal grid configurations","what":"Number of bins along the x-axis","title":"1. Main steps","text":"begin algorithm, need determine number bins along x-axis creating regular hexagons hexagonal grid.","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,                                          x = \"UMAP1\", hex_size = 0.2) num_bins_x  #> [1] 5"},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"number-of-bins-along-the-y-axis","dir":"Articles","previous_headings":"Constructing the model in the 2D space > 1. Compute hexagonal grid configurations","what":"Number of bins along the y-axis","title":"1. Main steps","text":", need determine shape parameter, control shape size hexagons hexagonal grid.","code":"num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,                                          y = \"UMAP2\", hex_size = 0.2) num_bins_y  #> [1] 8"},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"obtain-hexagonal-bin-centroids","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"2. Obtain hexagonal bin centroids","title":"1. Main steps","text":"","code":"hb_obj <- generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled,                             x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x,                             num_bins_y = num_bins_y, x_start = NA,                             y_start = NA, buffer_x = NA,                             buffer_y = NA, hex_size = 0.2)  all_centroids_df <- as.data.frame(do.call(cbind, hb_obj$full_grid_hex_centroids)) counts_df <- as.data.frame(do.call(cbind, hb_obj$hex_id_with_std_counts))  df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df,                                               counts_df = counts_df) glimpse(df_bin_centroids)  #> Rows: 10 #> Columns: 4 #> $ hexID      <dbl> 2, 6, 7, 12, 13, 18, 24, 28, 29, 34 #> $ c_x        <dbl> 0.1732051, 0.0000000, 0.3464102, 0.1732051, 0.5196152, 0.69… #> $ c_y        <dbl> -0.15, 0.15, 0.15, 0.45, 0.45, 0.75, 1.05, 1.35, 1.35, 1.65 #> $ std_counts <dbl> 0.2352941, 0.5294118, 0.4117647, 0.1764706, 0.3529412, 0.70…"},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"remove-low-density-hexagons","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"3. Remove low-density hexagons","title":"1. Main steps","text":"","code":"## To identify low density hexagons df_bin_centroids_low <- df_bin_centroids |>   dplyr::filter(std_counts <= 0.25)  ## To identify low-density hexagons needed to remove by investigating neighbouring mean density identify_rm_bins <- find_low_density_hexagons(df_bin_centroids_all = df_bin_centroids,                                               num_bins_x = num_bins_x,                                               df_bin_centroids_low = df_bin_centroids_low)  ## To remove low-density hexagons df_bin_centroids <- df_bin_centroids |>   dplyr::filter(!(hexID %in% identify_rm_bins))"},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"triangulate-hexagonal-bin-centroids","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"4. Triangulate hexagonal bin centroids","title":"1. Main steps","text":"Next, need perform triangulation bin centroids construct triangular mesh. Triangulation involves connecting bin centroids triangular edges form mesh reveals local structure data.","code":"tr1_object <- triangulate_bin_centroids(hex_bin_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") str(tr1_object) #> List of 10 #>  $ n    : int 10 #>  $ x    : num [1:10] 0.173 0 0.346 0.173 0.52 ... #>  $ y    : num [1:10] -0.15 0.15 0.15 0.45 0.45 0.75 1.05 1.35 1.35 1.65 #>  $ tlist: int [1:48] 3 -2 1 3 2 1 -4 4 2 3 ... #>  $ tlptr: int [1:48] 2 24 4 7 6 12 3 5 10 11 ... #>  $ tlend: int [1:10] 2 7 6 29 16 20 28 37 36 40 #>  $ tlnew: int 41 #>  $ nc   : num 0 #>  $ lc   : num 0 #>  $ call : language tripack::tri.mesh(x = hex_bin_df[[rlang::as_string(rlang::sym(x))]], y = hex_bin_df[[rlang::as_string(rlang::sym(y))]]) #>  - attr(*, \"class\")= chr \"tri\"  tr_from_to_df <- generate_edge_info(triangular_object = tr1_object) tr_from_to_df #> # A tibble: 20 × 6 #>     from    to x_from y_from  x_to  y_to #>    <int> <int>  <dbl>  <dbl> <dbl> <dbl> #>  1     1     7  0.173  -0.15 0.866  1.05 #>  2     1     5  0.173  -0.15 0.520  0.45 #>  3     1     3  0.173  -0.15 0.346  0.15 #>  4     2     3  0       0.15 0.346  0.15 #>  5     3     5  0.346   0.15 0.520  0.45 #>  6     4     5  0.173   0.45 0.520  0.45 #>  7     4     6  0.173   0.45 0.693  0.75 #>  8     5     7  0.520   0.45 0.866  1.05 #>  9     6     7  0.693   0.75 0.866  1.05 #> 10     7     9  0.866   1.05 1.04   1.35 #> 11     8     9  0.693   1.35 1.04   1.35 #> 12     1     2  0.173  -0.15 0      0.15 #> 13     2     4  0       0.15 0.173  0.45 #> 14     3     4  0.346   0.15 0.173  0.45 #> 15     4     8  0.173   0.45 0.693  1.35 #> 16     5     6  0.520   0.45 0.693  0.75 #> 17     6     8  0.693   0.75 0.693  1.35 #> 18     7     8  0.866   1.05 0.693  1.35 #> 19     8    10  0.693   1.35 0.866  1.65 #> 20     9    10  1.04    1.35 0.866  1.65 ## To draw the traingular mesh  trimesh <- ggplot(df_bin_centroids, aes(x = c_x, y = c_y)) +   geom_trimesh() +   coord_equal() +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh"},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"remove-long-edges","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"5. Remove long edges","title":"1. Main steps","text":"","code":"## Compute 2D distances distance_df <- cal_2d_dist(tr_from_to_df_coord = tr_from_to_df, start_x = \"x_from\",                          start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\",                          select_col_vec = c(\"from\", \"to\", \"distance\"))  ## To find the benchmark value to remove long edges benchmark <- find_benchmark_value(distance_edges = distance_df, distance_col = \"distance\") benchmark #> [1] 0.6 ## To draw the traingular mesh after remove long edges in 2D  trimesh_removed <- remove_long_edges(distance_edges = distance_df,                                       benchmark_value = 0.75,                                       tr_from_to_df_coord = tr_from_to_df,                                       distance_col = \"distance\") +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh_removed"},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"lifting-the-model-into-high-dimensions","dir":"Articles","previous_headings":"","what":"Lifting the model into high dimensions","title":"1. Main steps","text":"extend model created 2D space higher dimensions, need take average high-dimensional coordinates within hexagonal bins.","code":"## Add hexbin Ids for the 2D embeddings umap_data_with_hb_id <- as.data.frame(do.call(cbind, hb_obj$nldr_data_with_hex_id)) umap_data_with_hb_id #>         UMAP1       UMAP2 hb_id #> 1  0.08044271 0.274498327     6 #> 2  0.73857864 0.859778569    18 #> 3  0.83992020 0.929412446    24 #> 4  0.16719939 0.037066861     2 #> 5  0.26292782 0.341734583    12 #> 6  0.83820653 1.720961652    34 #> 7  0.73364820 0.833935370    18 #> 8  0.62693057 0.618409921    18 #> 9  0.80998347 0.868291303    18 #> 10 0.90342138 1.600664528    34 #> 11 0.64241759 0.631646064    18 #> 12 0.05182936 0.320865388    12 #> 13 0.96228699 1.546732900    34 #> 14 0.07223295 0.218331864     6 #> 15 0.64916340 0.593427000    18 #> 16 0.80783543 1.374772146    28 #> 17 0.13518498 0.335559538    12 #> 18 0.80668446 1.381019256    28 #> 19 0.60311661 0.597381477    13 #> 20 0.16150976 0.009905107     2 #> 21 0.71326033 0.797282390    18 #> 22 0.09405763 0.058760856     6 #> 23 0.08900367 0.252258947     6 #> 24 0.77510396 1.730112607    34 #> 25 0.79296306 1.100876246    24 #> 26 0.28575187 0.202379969     7 #> 27 0.46806684 0.482713207    13 #> 28 0.57541142 0.708486670    18 #> 29 0.21053454 0.151933039     7 #> 30 0.62412077 0.712391079    18 #> 31 0.76738169 1.018811832    24 #> 32 0.76427076 1.552630670    34 #> 33 0.64842247 0.661926514    18 #> 34 0.03170275 0.303630086     6 #> 35 0.96450414 1.665355817    34 #> 36 0.10117880 0.050909321     6 #> 37 0.71265285 1.539719959    34 #> 38 0.82904448 1.722765733    34 #> 39 0.81275032 1.732050808    34 #> 40 0.00000000 0.271778584     6 #> 41 0.38392618 0.390190144    13 #> 42 0.82638316 1.011632238    24 #> 43 0.29256853 0.138015108     7 #> 44 0.84482412 0.983163036    24 #> 45 0.79995094 0.964486583    24 #> 46 0.69339205 1.448210796    28 #> 47 0.13459287 0.000000000     2 #> 48 0.04209521 0.257916294     6 #> 49 0.94245034 1.680924200    34 #> 50 0.05349536 0.187982579     6 #> 51 0.68677026 0.778563498    18 #> 52 0.77828853 0.839937252    18 #> 53 0.75504949 1.670893354    34 #> 54 0.23125328 0.061042472     7 #> 55 0.76831122 1.497157149    28 #> 56 0.69843891 1.621642749    34 #> 57 0.72681720 0.931757885    24 #> 58 0.99318862 1.521102615    29 #> 59 0.96227596 1.546125959    34 #> 60 0.39315580 0.328235991    13 #> 61 0.74175661 1.681926517    34 #> 62 0.94650462 1.524113512    34 #> 63 0.50932690 0.617404710    13 #> 64 1.00000000 1.625538768    34 #> 65 0.33548077 0.278688714     7 #> 66 0.25450458 0.063074584     7 #> 67 0.88588122 1.408512652    29 #> 68 0.72192354 0.952956061    24 #> 69 0.68029522 1.508729997    28 #> 70 0.92537063 1.455380663    29 #> 71 0.80964667 1.529334517    34 #> 72 0.49582819 0.604985028    13 #> 73 0.16301062 0.030266486     2 #> 74 0.29499615 0.117297635     7 #> 75 0.91053035 1.445460921    29          ## To generate a data set with high-dimensional training data and 2D embeddings with hexagonal IDs df_all <- dplyr::bind_cols(s_curve_noise_training |> dplyr::select(-ID), umap_data_with_hb_id) df_all #> # A tibble: 75 × 10 #>         x1     x2        x3       x4        x5       x6        x7  UMAP1  UMAP2 #>      <dbl>  <dbl>     <dbl>    <dbl>     <dbl>    <dbl>     <dbl>  <dbl>  <dbl> #>  1 -0.120  0.114  -1.99     -0.00246 -0.0178   -0.0181  -0.00317  0.0804 0.274  #>  2 -0.0492 0.822   0.00121   0.0161   0.00968  -0.0834   0.00230  0.739  0.860  #>  3 -0.774  0.243   0.367    -0.0198   0.00408  -0.0349  -0.00911  0.840  0.929  #>  4 -0.606  1.96   -1.80      0.0132  -0.000479 -0.00478 -0.00843  0.167  0.0371 #>  5  0.818  0.0388 -1.58      0.00253  0.00167   0.0781  -0.00771  0.263  0.342  #>  6  0.910  1.55    1.42      0.0124   0.0160   -0.00248 -0.00832  0.838  1.72   #>  7 -0.0691 0.978   0.00239   0.0115   0.00350   0.0898   0.00359  0.734  0.834  #>  8  0.859  1.55   -0.488    -0.00753 -0.0123    0.0336  -0.00665  0.627  0.618  #>  9 -0.0400 0.286   0.000801  0.0123   0.00613  -0.0121  -0.000347 0.810  0.868  #> 10  0.765  0.898   1.64     -0.0178   0.0151   -0.0710  -0.00624  0.903  1.60   #> # ℹ 65 more rows #> # ℹ 1 more variable: hb_id <dbl>  df_bin <- avg_highD_data(.data = df_all) df_bin #> # A tibble: 10 × 8 #>    hb_id       x1     x2     x3        x4        x5       x6        x7 #>    <dbl>    <dbl>  <dbl>  <dbl>     <dbl>     <dbl>    <dbl>     <dbl> #>  1     2 -0.637   1.74   -1.76   0.00953  -0.00143  -0.0117  -0.00152  #>  2     6 -0.498   0.524  -1.73  -0.000237  0.00234  -0.0297  -0.000242 #>  3     7  0.294   1.40   -1.88   0.00890  -0.00803  -0.0123  -0.00120  #>  4    12  0.309   0.0421 -1.83   0.00656   0.00823   0.00489 -0.00389  #>  5    13  0.868   0.747  -0.781 -0.00408   0.000857  0.0248   0.00170  #>  6    18  0.357   1.27   -0.169  0.00607   0.00124   0.0152   0.00204  #>  7    24 -0.792   1.25    0.514 -0.000777  0.000464  0.00602  0.000371 #>  8    28 -0.597   1.19    1.77   0.000240 -0.00417  -0.0185  -0.000786 #>  9    29 -0.00544 0.211   1.92   0.00116   0.00266   0.00949 -0.00209  #> 10    34  0.622   1.21    1.64  -0.000560  0.00540  -0.00741 -0.000886"},{"path":"https://jayanilakshika.github.io/quollr/articles/algomain.html","id":"visualize-the-model-and-high-dimensional-data-in-the-high-dimensional-space","dir":"Articles","previous_headings":"","what":"Visualize the model and high-dimensional data in the high-dimensional space","title":"1. Main steps","text":"visualize model high-dimensional data, tour technique used.","code":"tour1 <- show_langevitour(df = df_all, df_b = df_bin,                            df_b_with_center_data = df_bin_centroids,                            benchmark_value = 0.75,                            distance_df = distance_df, distance_col = \"distance\",                            use_default_benchmark_val = FALSE, column_start_text = \"x\") tour1"},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algo.html","id":"compute-hexagonal-grid-configurations","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"1. Compute hexagonal grid configurations","title":"Algorithm for visualising the model overlaid with high-dimensional data","text":"begin algorithm, need determine number bins along x y axes regular hexagons hexagonal grid.","code":"num_bins_list <- calc_bins(data = s_curve_noise_umap_scaled, x = \"UMAP1\",                             y = \"UMAP2\", hex_size = NA, buffer_x = NA,                             buffer_y = NA) num_bins_x <- num_bins_list$num_x num_bins_y <- num_bins_list$num_y"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algo.html","id":"obtain-hexagonal-bin-centroids","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"2. Obtain hexagonal bin centroids","title":"Algorithm for visualising the model overlaid with high-dimensional data","text":"","code":"hb_obj <- hex_binning(data = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\",                        num_bins_x = num_bins_x, num_bins_y = num_bins_y,                        x_start = NA, y_start = NA, buffer_x = NA,                        buffer_y = NA, hex_size = NA, col_start = \"UMAP\")  all_centroids_df <- as.data.frame(do.call(cbind, hb_obj$centroids)) counts_df <- as.data.frame(do.call(cbind, hb_obj$std_cts)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df,                                              counts_df = counts_df) glimpse(df_bin_centroids)  #> Rows: 10 #> Columns: 4 #> $ hexID      <dbl> 2, 6, 7, 12, 13, 18, 24, 28, 29, 34 #> $ c_x        <dbl> 0.1732051, 0.0000000, 0.3464102, 0.1732051, 0.5196152, 0.69… #> $ c_y        <dbl> -0.15, 0.15, 0.15, 0.45, 0.45, 0.75, 1.05, 1.35, 1.35, 1.65 #> $ std_counts <dbl> 0.2352941, 0.5294118, 0.4117647, 0.1764706, 0.3529412, 0.70…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algo.html","id":"remove-low-density-hexagons","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"3. Remove low-density hexagons","title":"Algorithm for visualising the model overlaid with high-dimensional data","text":"","code":"## To identify low density hexagons df_bin_centroids_low <- df_bin_centroids |>   dplyr::filter(std_counts <= 0.25)  ## To identify low-density hexagons needed to remove by investigating neighbouring mean density identify_rm_bins <- find_low_dens_hex(df_bin_centroids_all = df_bin_centroids,                                               num_bins_x = num_bins_x,                                               df_bin_centroids_low = df_bin_centroids_low)  ## To remove low-density hexagons df_bin_centroids <- df_bin_centroids |>   dplyr::filter(!(hexID %in% identify_rm_bins))"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algo.html","id":"triangulate-hexagonal-bin-centroids","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"4. Triangulate hexagonal bin centroids","title":"Algorithm for visualising the model overlaid with high-dimensional data","text":"Next, need perform triangulation bin centroids construct triangular mesh.","code":"tr1_object <- tri_bin_centroids(hex_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") str(tr1_object) #> List of 11 #>  $ n     : int 10 #>  $ x     : num [1:10] 0.173 0 0.346 0.173 0.52 ... #>  $ y     : num [1:10] -0.15 0.15 0.15 0.45 0.45 0.75 1.05 1.35 1.35 1.65 #>  $ nt    : int 12 #>  $ trlist: int [1:12, 1:9] 1 4 5 5 6 6 7 7 8 6 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:9] \"i1\" \"i2\" \"i3\" \"j1\" ... #>  $ cclist: num [1:12, 1:5] 1.73e-01 1.73e-01 3.46e-01 2.59e+15 3.46e-01 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:5] \"x\" \"y\" \"r\" \"area\" ... #>  $ nchull: int 6 #>  $ chull : int [1:6] 2 1 7 9 10 8 #>  $ narcs : int 21 #>  $ arcs  : int [1:21, 1:2] 3 2 1 3 4 3 5 1 5 6 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:2] \"from\" \"to\" #>  $ call  : language interp::tri.mesh(x = hex_df[[rlang::as_string(rlang::sym(x))]], y = hex_df[[rlang::as_string(rlang::sym(y))]]) #>  - attr(*, \"class\")= chr \"triSht\"  tr_from_to_df <- gen_edges(tri_object = tr1_object) tr_from_to_df #> # A tibble: 21 × 6 #>     from    to x_from y_from  x_to  y_to #>    <int> <int>  <dbl>  <dbl> <dbl> <dbl> #>  1     1     3  0.173  -0.15 0.346  0.15 #>  2     2     4  0       0.15 0.173  0.45 #>  3     4     5  0.173   0.45 0.520  0.45 #>  4     3     5  0.346   0.15 0.520  0.45 #>  5     4     6  0.173   0.45 0.693  0.75 #>  6     6     7  0.693   0.75 0.866  1.05 #>  7     1     7  0.173  -0.15 0.866  1.05 #>  8     4     8  0.173   0.45 0.693  1.35 #>  9     6     8  0.693   0.75 0.693  1.35 #> 10     8     9  0.693   1.35 1.04   1.35 #> # ℹ 11 more rows ## To draw the traingular mesh  trimesh <- ggplot(df_bin_centroids, aes(x = c_x, y = c_y)) +   geom_trimesh() +   coord_equal() +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algo.html","id":"remove-long-edges","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"5. Remove long edges","title":"Algorithm for visualising the model overlaid with high-dimensional data","text":"","code":"## Compute 2D distances distance_df <- cal_2d_dist(tr_coord_df = tr_from_to_df, start_x = \"x_from\",                             start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\",                             select_vars = c(\"from\", \"to\", \"distance\"))  ## To find the benchmark value to remove long edges benchmark <- find_lg_benchmark(distance_edges = distance_df,                                    distance_col = \"distance\") benchmark #> [1] 0.6 ## To draw the traingular mesh after remove long edges in 2D  trimesh_removed <- vis_rmlg_mesh(distance_edges = distance_df,                                       benchmark_value = 0.75,                                       tr_coord_df = tr_from_to_df,                                       distance_col = \"distance\") +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh_removed"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algo.html","id":"lifting-the-model-into-high-dimensions","dir":"Articles","previous_headings":"","what":"Lifting the model into high dimensions","title":"Algorithm for visualising the model overlaid with high-dimensional data","text":"extend model created 2D space higher dimensions, need take average high-dimensional coordinates within hexagonal bins.","code":"## Add hexbin Ids for the 2D embeddings umap_data_with_hb_id <- as.data.frame(do.call(cbind, hb_obj$data_hb_id)) umap_data_with_hb_id #>         UMAP1       UMAP2 hb_id #> 1  0.08044271 0.274498327     6 #> 2  0.73857864 0.859778569    18 #> 3  0.83992020 0.929412446    24 #> 4  0.16719939 0.037066861     2 #> 5  0.26292782 0.341734583    12 #> 6  0.83820653 1.720961652    34 #> 7  0.73364820 0.833935370    18 #> 8  0.62693057 0.618409921    18 #> 9  0.80998347 0.868291303    18 #> 10 0.90342138 1.600664528    34 #> 11 0.64241759 0.631646064    18 #> 12 0.05182936 0.320865388    12 #> 13 0.96228699 1.546732900    34 #> 14 0.07223295 0.218331864     6 #> 15 0.64916340 0.593427000    18 #> 16 0.80783543 1.374772146    28 #> 17 0.13518498 0.335559538    12 #> 18 0.80668446 1.381019256    28 #> 19 0.60311661 0.597381477    13 #> 20 0.16150976 0.009905107     2 #> 21 0.71326033 0.797282390    18 #> 22 0.09405763 0.058760856     6 #> 23 0.08900367 0.252258947     6 #> 24 0.77510396 1.730112607    34 #> 25 0.79296306 1.100876246    24 #> 26 0.28575187 0.202379969     7 #> 27 0.46806684 0.482713207    13 #> 28 0.57541142 0.708486670    18 #> 29 0.21053454 0.151933039     7 #> 30 0.62412077 0.712391079    18 #> 31 0.76738169 1.018811832    24 #> 32 0.76427076 1.552630670    34 #> 33 0.64842247 0.661926514    18 #> 34 0.03170275 0.303630086     6 #> 35 0.96450414 1.665355817    34 #> 36 0.10117880 0.050909321     6 #> 37 0.71265285 1.539719959    34 #> 38 0.82904448 1.722765733    34 #> 39 0.81275032 1.732050808    34 #> 40 0.00000000 0.271778584     6 #> 41 0.38392618 0.390190144    13 #> 42 0.82638316 1.011632238    24 #> 43 0.29256853 0.138015108     7 #> 44 0.84482412 0.983163036    24 #> 45 0.79995094 0.964486583    24 #> 46 0.69339205 1.448210796    28 #> 47 0.13459287 0.000000000     2 #> 48 0.04209521 0.257916294     6 #> 49 0.94245034 1.680924200    34 #> 50 0.05349536 0.187982579     6 #> 51 0.68677026 0.778563498    18 #> 52 0.77828853 0.839937252    18 #> 53 0.75504949 1.670893354    34 #> 54 0.23125328 0.061042472     7 #> 55 0.76831122 1.497157149    28 #> 56 0.69843891 1.621642749    34 #> 57 0.72681720 0.931757885    24 #> 58 0.99318862 1.521102615    29 #> 59 0.96227596 1.546125959    34 #> 60 0.39315580 0.328235991    13 #> 61 0.74175661 1.681926517    34 #> 62 0.94650462 1.524113512    34 #> 63 0.50932690 0.617404710    13 #> 64 1.00000000 1.625538768    34 #> 65 0.33548077 0.278688714     7 #> 66 0.25450458 0.063074584     7 #> 67 0.88588122 1.408512652    29 #> 68 0.72192354 0.952956061    24 #> 69 0.68029522 1.508729997    28 #> 70 0.92537063 1.455380663    29 #> 71 0.80964667 1.529334517    34 #> 72 0.49582819 0.604985028    13 #> 73 0.16301062 0.030266486     2 #> 74 0.29499615 0.117297635     7 #> 75 0.91053035 1.445460921    29          ## To generate a data set with high-dimensional training data and 2D embeddings with hexagonal IDs df_all <- dplyr::bind_cols(s_curve_noise_training |> dplyr::select(-ID), umap_data_with_hb_id) df_all #> # A tibble: 75 × 10 #>         x1     x2        x3       x4        x5       x6        x7  UMAP1  UMAP2 #>      <dbl>  <dbl>     <dbl>    <dbl>     <dbl>    <dbl>     <dbl>  <dbl>  <dbl> #>  1 -0.120  0.114  -1.99     -0.00246 -0.0178   -0.0181  -0.00317  0.0804 0.274  #>  2 -0.0492 0.822   0.00121   0.0161   0.00968  -0.0834   0.00230  0.739  0.860  #>  3 -0.774  0.243   0.367    -0.0198   0.00408  -0.0349  -0.00911  0.840  0.929  #>  4 -0.606  1.96   -1.80      0.0132  -0.000479 -0.00478 -0.00843  0.167  0.0371 #>  5  0.818  0.0388 -1.58      0.00253  0.00167   0.0781  -0.00771  0.263  0.342  #>  6  0.910  1.55    1.42      0.0124   0.0160   -0.00248 -0.00832  0.838  1.72   #>  7 -0.0691 0.978   0.00239   0.0115   0.00350   0.0898   0.00359  0.734  0.834  #>  8  0.859  1.55   -0.488    -0.00753 -0.0123    0.0336  -0.00665  0.627  0.618  #>  9 -0.0400 0.286   0.000801  0.0123   0.00613  -0.0121  -0.000347 0.810  0.868  #> 10  0.765  0.898   1.64     -0.0178   0.0151   -0.0710  -0.00624  0.903  1.60   #> # ℹ 65 more rows #> # ℹ 1 more variable: hb_id <dbl>  df_bin <- avg_highd_data(data = df_all, col_start = \"x\") df_bin #> # A tibble: 10 × 8 #>    hb_id       x1     x2     x3        x4        x5       x6        x7 #>    <dbl>    <dbl>  <dbl>  <dbl>     <dbl>     <dbl>    <dbl>     <dbl> #>  1     2 -0.637   1.74   -1.76   0.00953  -0.00143  -0.0117  -0.00152  #>  2     6 -0.498   0.524  -1.73  -0.000237  0.00234  -0.0297  -0.000242 #>  3     7  0.294   1.40   -1.88   0.00890  -0.00803  -0.0123  -0.00120  #>  4    12  0.309   0.0421 -1.83   0.00656   0.00823   0.00489 -0.00389  #>  5    13  0.868   0.747  -0.781 -0.00408   0.000857  0.0248   0.00170  #>  6    18  0.357   1.27   -0.169  0.00607   0.00124   0.0152   0.00204  #>  7    24 -0.792   1.25    0.514 -0.000777  0.000464  0.00602  0.000371 #>  8    28 -0.597   1.19    1.77   0.000240 -0.00417  -0.0185  -0.000786 #>  9    29 -0.00544 0.211   1.92   0.00116   0.00266   0.00949 -0.00209  #> 10    34  0.622   1.21    1.64  -0.000560  0.00540  -0.00741 -0.000886"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algo.html","id":"visualize-the-model-and-high-dimensional-data-in-the-high-dimensional-space","dir":"Articles","previous_headings":"","what":"Visualize the model and high-dimensional data in the high-dimensional space","title":"Algorithm for visualising the model overlaid with high-dimensional data","text":"visualize model high-dimensional data, tour technique used.","code":"tour1 <- show_langevitour(df = df_all, df_b = df_bin,                            df_b_with_center_data = df_bin_centroids,                            benchmark_value = 0.75,                            distance_df = distance_df, distance_col = \"distance\",                            use_default_benchmark_val = FALSE, col_start = \"x\") tour1"},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algomain.html","id":"compute-hexagonal-grid-configurations","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"1. Compute hexagonal grid configurations","title":"1. Algorithm for binning data","text":"begin algorithm, need determine number bins along x y axes regular hexagons hexagonal grid.","code":"num_bins_list <- calc_bins(data = s_curve_noise_umap_scaled, x = \"UMAP1\",                             y = \"UMAP2\", hex_size = NA, buffer_x = NA,                             buffer_y = NA) num_bins_x <- num_bins_list$num_x num_bins_y <- num_bins_list$num_y"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algomain.html","id":"obtain-hexagonal-bin-centroids","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"2. Obtain hexagonal bin centroids","title":"1. Algorithm for binning data","text":"","code":"hb_obj <- hex_binning(data = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\",                        num_bins_x = num_bins_x, num_bins_y = num_bins_y,                        x_start = NA, y_start = NA, buffer_x = NA,                        buffer_y = NA, hex_size = NA, col_start = \"UMAP\")  all_centroids_df <- as.data.frame(do.call(cbind, hb_obj$centroids)) counts_df <- as.data.frame(do.call(cbind, hb_obj$std_cts)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df,                                              counts_df = counts_df) glimpse(df_bin_centroids)  #> Rows: 10 #> Columns: 4 #> $ hexID      <dbl> 2, 6, 7, 12, 13, 18, 24, 28, 29, 34 #> $ c_x        <dbl> 0.1732051, 0.0000000, 0.3464102, 0.1732051, 0.5196152, 0.69… #> $ c_y        <dbl> -0.15, 0.15, 0.15, 0.45, 0.45, 0.75, 1.05, 1.35, 1.35, 1.65 #> $ std_counts <dbl> 0.2352941, 0.5294118, 0.4117647, 0.1764706, 0.3529412, 0.70…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algomain.html","id":"remove-low-density-hexagons","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"3. Remove low-density hexagons","title":"1. Algorithm for binning data","text":"","code":"## To identify low density hexagons df_bin_centroids_low <- df_bin_centroids |>   dplyr::filter(std_counts <= 0.25)  ## To identify low-density hexagons needed to remove by investigating neighbouring mean density identify_rm_bins <- find_low_dens_hex(df_bin_centroids_all = df_bin_centroids,                                               num_bins_x = num_bins_x,                                               df_bin_centroids_low = df_bin_centroids_low)  ## To remove low-density hexagons df_bin_centroids <- df_bin_centroids |>   dplyr::filter(!(hexID %in% identify_rm_bins))"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algomain.html","id":"triangulate-hexagonal-bin-centroids","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"4. Triangulate hexagonal bin centroids","title":"1. Algorithm for binning data","text":"Next, need perform triangulation bin centroids construct triangular mesh.","code":"tr1_object <- tri_bin_centroids(hex_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") str(tr1_object) #> List of 11 #>  $ n     : int 10 #>  $ x     : num [1:10] 0.173 0 0.346 0.173 0.52 ... #>  $ y     : num [1:10] -0.15 0.15 0.15 0.45 0.45 0.75 1.05 1.35 1.35 1.65 #>  $ nt    : int 12 #>  $ trlist: int [1:12, 1:9] 1 4 5 5 6 6 7 7 8 6 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:9] \"i1\" \"i2\" \"i3\" \"j1\" ... #>  $ cclist: num [1:12, 1:5] 1.73e-01 1.73e-01 3.46e-01 2.59e+15 3.46e-01 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:5] \"x\" \"y\" \"r\" \"area\" ... #>  $ nchull: int 6 #>  $ chull : int [1:6] 2 1 7 9 10 8 #>  $ narcs : int 21 #>  $ arcs  : int [1:21, 1:2] 3 2 1 3 4 3 5 1 5 6 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:2] \"from\" \"to\" #>  $ call  : language interp::tri.mesh(x = hex_df[[rlang::as_string(rlang::sym(x))]], y = hex_df[[rlang::as_string(rlang::sym(y))]]) #>  - attr(*, \"class\")= chr \"triSht\"  tr_from_to_df <- gen_edges(tri_object = tr1_object) tr_from_to_df #> # A tibble: 21 × 6 #>     from    to x_from y_from  x_to  y_to #>    <int> <int>  <dbl>  <dbl> <dbl> <dbl> #>  1     1     3  0.173  -0.15 0.346  0.15 #>  2     2     4  0       0.15 0.173  0.45 #>  3     4     5  0.173   0.45 0.520  0.45 #>  4     3     5  0.346   0.15 0.520  0.45 #>  5     4     6  0.173   0.45 0.693  0.75 #>  6     6     7  0.693   0.75 0.866  1.05 #>  7     1     7  0.173  -0.15 0.866  1.05 #>  8     4     8  0.173   0.45 0.693  1.35 #>  9     6     8  0.693   0.75 0.693  1.35 #> 10     8     9  0.693   1.35 1.04   1.35 #> # ℹ 11 more rows ## To draw the traingular mesh  trimesh <- ggplot(df_bin_centroids, aes(x = c_x, y = c_y)) +   geom_trimesh() +   coord_equal() +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algomain.html","id":"remove-long-edges","dir":"Articles","previous_headings":"Constructing the model in the 2D space","what":"5. Remove long edges","title":"1. Algorithm for binning data","text":"","code":"## Compute 2D distances distance_df <- cal_2d_dist(tr_coord_df = tr_from_to_df, start_x = \"x_from\",                             start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\",                             select_vars = c(\"from\", \"to\", \"distance\"))  ## To find the benchmark value to remove long edges benchmark <- find_lg_benchmark(distance_edges = distance_df,                                    distance_col = \"distance\") benchmark #> [1] 0.6 ## To draw the traingular mesh after remove long edges in 2D  trimesh_removed <- vis_rmlg_mesh(distance_edges = distance_df,                                       benchmark_value = 0.75,                                       tr_coord_df = tr_from_to_df,                                       distance_col = \"distance\") +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh_removed"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algomain.html","id":"lifting-the-model-into-high-dimensions","dir":"Articles","previous_headings":"","what":"Lifting the model into high dimensions","title":"1. Algorithm for binning data","text":"extend model created 2D space higher dimensions, need take average high-dimensional coordinates within hexagonal bins.","code":"## Add hexbin Ids for the 2D embeddings umap_data_with_hb_id <- as.data.frame(do.call(cbind, hb_obj$data_hb_id)) umap_data_with_hb_id #>         UMAP1       UMAP2 hb_id #> 1  0.08044271 0.274498327     6 #> 2  0.73857864 0.859778569    18 #> 3  0.83992020 0.929412446    24 #> 4  0.16719939 0.037066861     2 #> 5  0.26292782 0.341734583    12 #> 6  0.83820653 1.720961652    34 #> 7  0.73364820 0.833935370    18 #> 8  0.62693057 0.618409921    18 #> 9  0.80998347 0.868291303    18 #> 10 0.90342138 1.600664528    34 #> 11 0.64241759 0.631646064    18 #> 12 0.05182936 0.320865388    12 #> 13 0.96228699 1.546732900    34 #> 14 0.07223295 0.218331864     6 #> 15 0.64916340 0.593427000    18 #> 16 0.80783543 1.374772146    28 #> 17 0.13518498 0.335559538    12 #> 18 0.80668446 1.381019256    28 #> 19 0.60311661 0.597381477    13 #> 20 0.16150976 0.009905107     2 #> 21 0.71326033 0.797282390    18 #> 22 0.09405763 0.058760856     6 #> 23 0.08900367 0.252258947     6 #> 24 0.77510396 1.730112607    34 #> 25 0.79296306 1.100876246    24 #> 26 0.28575187 0.202379969     7 #> 27 0.46806684 0.482713207    13 #> 28 0.57541142 0.708486670    18 #> 29 0.21053454 0.151933039     7 #> 30 0.62412077 0.712391079    18 #> 31 0.76738169 1.018811832    24 #> 32 0.76427076 1.552630670    34 #> 33 0.64842247 0.661926514    18 #> 34 0.03170275 0.303630086     6 #> 35 0.96450414 1.665355817    34 #> 36 0.10117880 0.050909321     6 #> 37 0.71265285 1.539719959    34 #> 38 0.82904448 1.722765733    34 #> 39 0.81275032 1.732050808    34 #> 40 0.00000000 0.271778584     6 #> 41 0.38392618 0.390190144    13 #> 42 0.82638316 1.011632238    24 #> 43 0.29256853 0.138015108     7 #> 44 0.84482412 0.983163036    24 #> 45 0.79995094 0.964486583    24 #> 46 0.69339205 1.448210796    28 #> 47 0.13459287 0.000000000     2 #> 48 0.04209521 0.257916294     6 #> 49 0.94245034 1.680924200    34 #> 50 0.05349536 0.187982579     6 #> 51 0.68677026 0.778563498    18 #> 52 0.77828853 0.839937252    18 #> 53 0.75504949 1.670893354    34 #> 54 0.23125328 0.061042472     7 #> 55 0.76831122 1.497157149    28 #> 56 0.69843891 1.621642749    34 #> 57 0.72681720 0.931757885    24 #> 58 0.99318862 1.521102615    29 #> 59 0.96227596 1.546125959    34 #> 60 0.39315580 0.328235991    13 #> 61 0.74175661 1.681926517    34 #> 62 0.94650462 1.524113512    34 #> 63 0.50932690 0.617404710    13 #> 64 1.00000000 1.625538768    34 #> 65 0.33548077 0.278688714     7 #> 66 0.25450458 0.063074584     7 #> 67 0.88588122 1.408512652    29 #> 68 0.72192354 0.952956061    24 #> 69 0.68029522 1.508729997    28 #> 70 0.92537063 1.455380663    29 #> 71 0.80964667 1.529334517    34 #> 72 0.49582819 0.604985028    13 #> 73 0.16301062 0.030266486     2 #> 74 0.29499615 0.117297635     7 #> 75 0.91053035 1.445460921    29          ## To generate a data set with high-dimensional training data and 2D embeddings with hexagonal IDs df_all <- dplyr::bind_cols(s_curve_noise_training |> dplyr::select(-ID), umap_data_with_hb_id) df_all #> # A tibble: 75 × 10 #>         x1     x2        x3       x4        x5       x6        x7  UMAP1  UMAP2 #>      <dbl>  <dbl>     <dbl>    <dbl>     <dbl>    <dbl>     <dbl>  <dbl>  <dbl> #>  1 -0.120  0.114  -1.99     -0.00246 -0.0178   -0.0181  -0.00317  0.0804 0.274  #>  2 -0.0492 0.822   0.00121   0.0161   0.00968  -0.0834   0.00230  0.739  0.860  #>  3 -0.774  0.243   0.367    -0.0198   0.00408  -0.0349  -0.00911  0.840  0.929  #>  4 -0.606  1.96   -1.80      0.0132  -0.000479 -0.00478 -0.00843  0.167  0.0371 #>  5  0.818  0.0388 -1.58      0.00253  0.00167   0.0781  -0.00771  0.263  0.342  #>  6  0.910  1.55    1.42      0.0124   0.0160   -0.00248 -0.00832  0.838  1.72   #>  7 -0.0691 0.978   0.00239   0.0115   0.00350   0.0898   0.00359  0.734  0.834  #>  8  0.859  1.55   -0.488    -0.00753 -0.0123    0.0336  -0.00665  0.627  0.618  #>  9 -0.0400 0.286   0.000801  0.0123   0.00613  -0.0121  -0.000347 0.810  0.868  #> 10  0.765  0.898   1.64     -0.0178   0.0151   -0.0710  -0.00624  0.903  1.60   #> # ℹ 65 more rows #> # ℹ 1 more variable: hb_id <dbl>  df_bin <- avg_highd_data(data = df_all, col_start = \"x\") df_bin #> # A tibble: 10 × 8 #>    hb_id       x1     x2     x3        x4        x5       x6        x7 #>    <dbl>    <dbl>  <dbl>  <dbl>     <dbl>     <dbl>    <dbl>     <dbl> #>  1     2 -0.637   1.74   -1.76   0.00953  -0.00143  -0.0117  -0.00152  #>  2     6 -0.498   0.524  -1.73  -0.000237  0.00234  -0.0297  -0.000242 #>  3     7  0.294   1.40   -1.88   0.00890  -0.00803  -0.0123  -0.00120  #>  4    12  0.309   0.0421 -1.83   0.00656   0.00823   0.00489 -0.00389  #>  5    13  0.868   0.747  -0.781 -0.00408   0.000857  0.0248   0.00170  #>  6    18  0.357   1.27   -0.169  0.00607   0.00124   0.0152   0.00204  #>  7    24 -0.792   1.25    0.514 -0.000777  0.000464  0.00602  0.000371 #>  8    28 -0.597   1.19    1.77   0.000240 -0.00417  -0.0185  -0.000786 #>  9    29 -0.00544 0.211   1.92   0.00116   0.00266   0.00949 -0.00209  #> 10    34  0.622   1.21    1.64  -0.000560  0.00540  -0.00741 -0.000886"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr1algomain.html","id":"visualize-the-model-and-high-dimensional-data-in-the-high-dimensional-space","dir":"Articles","previous_headings":"","what":"Visualize the model and high-dimensional data in the high-dimensional space","title":"1. Algorithm for binning data","text":"visualize model high-dimensional data, tour technique used.","code":"tour1 <- show_langevitour(df = df_all, df_b = df_bin,                            df_b_with_center_data = df_bin_centroids,                            benchmark_value = 0.75,                            distance_df = distance_df, distance_col = \"distance\",                            use_default_benchmark_val = FALSE, col_start = \"x\") tour1"},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"binning-the-data","dir":"Articles","previous_headings":"Construct the 2D model","what":"Binning the data","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":"construct model 2D space, first need hexagonally bins 2D layout. Discussed details 3. Algorithm binning data.","code":"r2 <- diff(range(s_curve_noise_umap$UMAP2))/diff(range(s_curve_noise_umap$UMAP1)) hb_obj <- hex_binning(data = s_curve_noise_umap_scaled, bin1 = 6, r2 = r2)  all_centroids_df <- hb_obj$centroids counts_df <- hb_obj$std_cts"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"obtain-bin-centroids","dir":"Articles","previous_headings":"Construct the 2D model","what":"Obtain bin centroids","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":"Nest step obtain hexagonal bin centroid coordinates (all_centroids_df) standard number points within hexagon (counts_df). , can generate tibble gives hexagonal ID, centroid coordinates standard counts data exists.","code":"df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df,                                              counts_df = counts_df) |>       filter(drop_empty == FALSE)  glimpse(df_bin_centroids)  #> Rows: 24 #> Columns: 6 #> $ hexID      <int> 2, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 26, 27, 28, 29,… #> $ c_x        <dbl> 0.117873476, 0.008936738, 0.226810215, 0.444683691, 0.66255… #> $ c_y        <dbl> -0.09382762, 0.09485635, 0.09485635, 0.09485635, 0.09485635… #> $ bin_counts <int> 49, 203, 288, 182, 198, 161, 90, 215, 216, 153, 36, 140, 15… #> $ std_counts <dbl> 0.16896552, 0.70000000, 0.99310345, 0.62758621, 0.68275862,… #> $ drop_empty <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FAL…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"remove-low-density-hexagons","dir":"Articles","previous_headings":"Construct the 2D model","what":"Remove low density hexagons","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":"One parameters need control benchmark value remove low density hexagons. default value first quartile standardise counts. two ways can follow . First, can remove low density hexagons df_bin_centroids proceed. Second, can check whether actually reliable remove identified low density hexagons looking neighboring bins remove proceed. , let’s second option. , need obtain low density hexagons. Next, check neighboring bins low-density hexagons decide actually need remove. seen, even though low density hexagons, ’s good decision remove . Therefore, let’s use df_bin_centroids .","code":"benchmark_value_rm_lwd <- quantile(df_bin_centroids$std_counts,                  probs = c(0,0.25,0.5,0.75,1), names = FALSE)[2]  benchmark_value_rm_lwd #> [1] 0.275 df_bin_centroids_low <- df_bin_centroids |>   filter(std_counts <= benchmark_value_rm_lwd)  glimpse(df_bin_centroids_low) #> Rows: 6 #> Columns: 6 #> $ hexID      <int> 2, 22, 35, 38, 39, 40 #> $ c_x        <dbl> 0.1178735, 0.6625572, 0.8804306, 0.1178735, 0.3357470, 0.55… #> $ c_y        <dbl> -0.09382762, 0.47222428, 0.84959221, 1.03827617, 1.03827617… #> $ bin_counts <int> 49, 36, 25, 21, 8, 21 #> $ std_counts <dbl> 0.16896552, 0.12413793, 0.08620690, 0.07241379, 0.02758621,… #> $ drop_empty <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE identify_rm_bins <- find_low_dens_hex(df_bin_centroids_all = df_bin_centroids,                                        bin1 = 6,                                        df_bin_centroids_low = df_bin_centroids_low) identify_rm_bins #> [1] 39"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"triangulate-bin-centroids","dir":"Articles","previous_headings":"Construct the 2D model","what":"Triangulate bin centroids","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":", need triangulate bin centroids. visualize results, simply use geom_trimesh() provide hexagonal bin centroid coordinates. display triangular mesh examine.","code":"tr1_object <- tri_bin_centroids(hex_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") str(tr1_object) #> List of 11 #>  $ n     : int 24 #>  $ x     : num [1:24] 0.11787 0.00894 0.22681 0.44468 0.66256 ... #>  $ y     : num [1:24] -0.0938 0.0949 0.0949 0.0949 0.0949 ... #>  $ nt    : int 37 #>  $ trlist: int [1:37, 1:9] 1 6 7 4 4 8 5 5 13 13 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:9] \"i1\" \"i2\" \"i3\" \"j1\" ... #>  $ cclist: num [1:37, 1:5] 0.118 0.118 0.227 0.336 0.336 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:5] \"x\" \"y\" \"r\" \"area\" ... #>  $ nchull: int 9 #>  $ chull : int [1:9] 2 1 5 10 21 24 23 22 17 #>  $ narcs : int 60 #>  $ arcs  : int [1:60, 1:2] 3 2 1 3 6 3 7 3 4 1 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:2] \"from\" \"to\" #>  $ call  : language tri.mesh(x = hex_df[[rlang::as_string(rlang::sym(x))]], y = hex_df[[rlang::as_string(rlang::sym(y))]]) #>  - attr(*, \"class\")= chr \"triSht\" trimesh <- ggplot(df_bin_centroids, aes(x = c_x, y = c_y)) +   geom_trimesh() +   coord_equal() +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"create-the-wireframe-in-2d","dir":"Articles","previous_headings":"Construct the 2D model","what":"Create the wireframe in 2D","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":"build wireframe 2D, ’ll need identify vertices connected. can obtain passing triangular object gen_edges function, provide information existing edges connected vertices.","code":"tr_from_to_df <- gen_edges(tri_object = tr1_object) glimpse(tr_from_to_df) #> Rows: 60 #> Columns: 6 #> $ from   <int> 1, 2, 6, 4, 3, 7, 5, 4, 2, 6, 7, 8, 8, 8, 2, 17, 13, 14, 11, 11… #> $ to     <int> 3, 6, 7, 7, 4, 8, 8, 5, 13, 13, 14, 11, 9, 15, 17, 18, 18, 15, … #> $ x_from <dbl> 0.117873476, 0.008936738, 0.117873476, 0.444683691, 0.226810215… #> $ y_from <dbl> -0.09382762, 0.09485635, 0.28354031, 0.09485635, 0.09485635, 0.… #> $ x_to   <dbl> 0.226810215, 0.117873476, 0.335746953, 0.335746953, 0.444683691… #> $ y_to   <dbl> 0.09485635, 0.28354031, 0.28354031, 0.28354031, 0.09485635, 0.2…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"remove-long-edges","dir":"Articles","previous_headings":"Construct the 2D model","what":"Remove long edges","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":"Another important parameter algorithm benchmark value removing long edges. compute value, first need generate 2D Euclidean distance dataset edges. , can use find_lg_benchmark() function compute default benchmark value remove long edges. However, default value may need adjustment better representation. , used benchmark value 0.750.75. visualize results, can use vis_lg_mesh() vis_rmlg_mesh(). functions enable observe wireframe 2D obtained algorithm’s computations.","code":"distance_df <- cal_2d_dist(tr_coord_df = tr_from_to_df, start_x = \"x_from\",                             start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\",                             select_vars = c(\"from\", \"to\", \"distance\")) glimpse(distance_df) #> Rows: 60 #> Columns: 3 #> $ from     <int> 1, 2, 6, 4, 3, 7, 5, 4, 2, 6, 7, 8, 8, 8, 2, 17, 13, 14, 11, … #> $ to       <int> 3, 6, 7, 7, 4, 8, 8, 5, 13, 13, 14, 11, 9, 15, 17, 18, 18, 15… #> $ distance <dbl> 0.2178735, 0.2178735, 0.2178735, 0.2178735, 0.2178735, 0.2178… benchmark <- find_lg_benchmark(distance_edges = distance_df,                                    distance_col = \"distance\") benchmark #> [1] 0.377 trimesh_coloured <- vis_lg_mesh(distance_edges = distance_df,                                       benchmark_value = 0.75,                                       tr_coord_df = tr_from_to_df,                                       distance_col = \"distance\") +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7),         legend.position = \"bottom\",         legend.title = element_blank())  trimesh_coloured trimesh_removed <- vis_rmlg_mesh(distance_edges = distance_df,                                       benchmark_value = 0.75,                                       tr_coord_df = tr_from_to_df,                                       distance_col = \"distance\") +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh_removed"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"lift-the-model-into-high-dimensions","dir":"Articles","previous_headings":"","what":"Lift the model into high-dimensions","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":"lift constructed model high-dimensions, need map 2D hexagonal bin centroids high-dimensions. , first, need obtain data set 2D embedding corresponding hexagonal bin IDs. Next, need create data set high-dimensional data 2D embedding hexagonal bin IDs. , use avg_highd_data() obtain high-dimensional coordinates model.","code":"umap_data_with_hb_id <- hb_obj$data_hb_id glimpse(umap_data_with_hb_id) #> Rows: 3,750 #> Columns: 4 #> $ UMAP1 <dbl> 0.27573928, 0.92725180, 0.80951427, 0.13715412, 0.47647972, 0.04… #> $ UMAP2 <dbl> 0.914623840, 0.347295951, 0.241819232, 0.656780486, 0.799175361,… #> $ ID    <int> 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 24, 25, 26, 27,… #> $ hb_id <int> 32, 18, 17, 26, 33, 7, 34, 17, 23, 14, 32, 2, 32, 29, 32, 18, 31… df_all <- dplyr::bind_cols(s_curve_noise_training |> dplyr::select(-ID), umap_data_with_hb_id) glimpse(df_all) #> Rows: 3,750 #> Columns: 11 #> $ x1    <dbl> -0.11970232, -0.04921160, -0.77446658, -0.47814517, 0.81769684, … #> $ x2    <dbl> 1.6378934, 1.5091702, 1.3025775, 0.0176821, 0.9269894, 1.4012232… #> $ x3    <dbl> -1.9928098283, 0.0012116250, 0.3673851752, -1.8782808189, -1.575… #> $ x4    <dbl> 0.0104235802, -0.0177487701, -0.0017319658, 0.0084845242, -0.003… #> $ x5    <dbl> 1.247143e-02, 7.263505e-03, 1.558974e-02, 5.331790e-03, -9.79905… #> $ x6    <dbl> 0.092310860, -0.036199525, -0.096239517, 0.099753067, 0.09891648… #> $ x7    <dbl> -0.0012762884, -0.0053483078, 0.0033535915, 0.0006769539, 0.0069… #> $ UMAP1 <dbl> 0.27573928, 0.92725180, 0.80951427, 0.13715412, 0.47647972, 0.04… #> $ UMAP2 <dbl> 0.914623840, 0.347295951, 0.241819232, 0.656780486, 0.799175361,… #> $ ID    <int> 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 24, 25, 26, 27,… #> $ hb_id <int> 32, 18, 17, 26, 33, 7, 34, 17, 23, 14, 32, 2, 32, 29, 32, 18, 31… df_bin <- avg_highd_data(data = df_all, col_start = \"x\") glimpse(df_bin) #> Rows: 24 #> Columns: 8 #> $ hb_id <int> 2, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 26, 27, 28, 29, 31, … #> $ x1    <dbl> 0.60502895, 0.89506510, 0.15057032, -0.61992321, -0.96031558, 0.… #> $ x2    <dbl> 1.7979353, 1.2803295, 1.2721767, 1.1659372, 1.5043088, 0.3120879… #> $ x3    <dbl> 1.783629951, 1.379896396, 1.953298180, 1.757914643, 1.044983514,… #> $ x4    <dbl> -3.639940e-03, -3.839172e-04, -7.412989e-04, -4.615018e-05, 6.22… #> $ x5    <dbl> 2.986351e-04, -8.150889e-04, 1.088423e-03, 4.499042e-04, 5.26555… #> $ x6    <dbl> -0.0104338345, -0.0018955210, 0.0011397559, -0.0004884167, 0.002… #> $ x7    <dbl> 2.827596e-04, -9.927984e-05, 6.435293e-06, 3.529844e-04, 6.46460…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr2algo.html","id":"result","dir":"Articles","previous_headings":"","what":"Result","title":"2. Algorithm for visualising the model overlaid on high-dimensional data","text":"Finally, visualise model overlaid high-dimensional data, initially need pass data set high-dimensional data 2D embedding hexagonal bin IDs (df_all), high-dimensional mapping hexagonal bin centroids (df_bin), 2D hexagonal bin coordinates (df_bin_centroids), wireframe data (distance_df).","code":"tour1 <- show_langevitour(df = df_all, df_b = df_bin,                            df_b_with_center_data = df_bin_centroids,                            benchmark_value = 0.75,                            distance_df = distance_df, distance_col = \"distance\",                            use_default_benchmark_val = FALSE, col_start = \"x\")  tour1"},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"hexagonal-binning","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Hexagonal Binning","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"begin, preprocess 2-D embedding create hexagonal bins layout.","code":"## To pre-process the data nldr_obj <- gen_scaled_data(nldr_data = scurve_umap)  ## Obtain the hexbin object hb_obj <- hex_binning(nldr_obj = nldr_obj, b1 = 15, q = 0.1)  all_centroids_df <- hb_obj$centroids counts_df <- hb_obj$std_cts"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"extract-bin-centroids","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Extract bin centroids","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"Next, extract centroid coordinates standardised bin counts. used identify densely populated regions 2-D space.","code":"## To extract all bin centroids with bin counts df_bin_centroids <- extract_hexbin_centroids(centroids_data = all_centroids_df,                                              counts_data = counts_df)  benchmark_highdens <- 5  ## To extract high-densed bins model_2d <- df_bin_centroids |>   dplyr::filter(n_h > benchmark_highdens)  glimpse(model_2d)  #> Rows: 130 #> Columns: 5 #> $ h   <int> 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51… #> $ c_x <dbl> 0.3579375, 0.4411988, 0.5244602, 0.6077215, 0.6909829, 0.7742443, … #> $ c_y <dbl> -0.01712962, -0.01712962, -0.01712962, -0.01712962, -0.01712962, -… #> $ n_h <dbl> 12, 17, 22, 10, 7, 12, 42, 42, 44, 39, 52, 38, 52, 36, 27, 65, 47,… #> $ w_h <dbl> 0.0024, 0.0034, 0.0044, 0.0020, 0.0014, 0.0024, 0.0084, 0.0084, 0.…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"triangulate-the-bin-centroids","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Triangulate the bin centroids","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"triangulate hexagon centroids build wireframe neighborhood relationships.","code":"## Wireframe tr_object <- tri_bin_centroids(centroids_data = df_bin_centroids) str(tr_object) #> List of 2 #>  $ trimesh_object:List of 11 #>   ..$ n     : int 240 #>   ..$ x     : num [1:240] -0.1 -0.0167 0.0665 0.1498 0.233 ... #>   ..$ y     : num [1:240] -0.0892 -0.0892 -0.0892 -0.0892 -0.0892 ... #>   ..$ nt    : int 431 #>   ..$ trlist: int [1:431, 1:9] 1 17 31 16 16 3 17 18 17 46 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:9] \"i1\" \"i2\" \"i3\" \"j1\" ... #>   ..$ cclist: num [1:431, 1:5] -0.0584 -0.0167 -0.1416 -0.0584 -0.0167 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:5] \"x\" \"y\" \"r\" \"area\" ... #>   ..$ nchull: int 47 #>   ..$ chull : int [1:47] 1 2 3 4 5 6 7 8 38 52 ... #>   ..$ narcs : int 670 #>   ..$ arcs  : int [1:670, 1:2] 2 16 1 2 17 16 31 32 16 17 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:2] \"from\" \"to\" #>   ..$ call  : language tri.mesh(x = centroids_data[[\"c_x\"]], y = centroids_data[[\"c_y\"]]) #>   ..- attr(*, \"class\")= chr \"triSht\" #>  $ n_h           : num [1:240] 0 0 0 0 0 0 0 0 0 0 ..."},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"generate-edges-from-triangulation","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Generate edges from triangulation","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"Using triangulation object, generate edges centroids. retain edges connecting densely populated bins.","code":"trimesh_data <- gen_edges(tri_object = tr_object, a1 = hb_obj$a1) |>   dplyr::filter(from_count > benchmark_highdens,                 to_count > benchmark_highdens)  ## Update the edge indexes to start from 1 trimesh_data <- update_trimesh_index(trimesh_data) glimpse(trimesh_data) #> Rows: 322 #> Columns: 8 #> $ from       <int> 16, 25, 25, 36, 36, 1, 48, 37, 26, 27, 7, 16, 8, 1, 27, 7, … #> $ to         <int> 26, 26, 37, 49, 37, 7, 49, 38, 27, 38, 16, 17, 17, 2, 28, 8… #> $ x_from     <dbl> 0.27467611, 0.14978407, 0.14978407, 0.10815339, 0.10815339,… #> $ y_from     <dbl> 0.12708328, 0.19918973, 0.19918973, 0.27129618, 0.27129618,… #> $ x_to       <dbl> 0.23304543, 0.23304543, 0.19141475, 0.14978407, 0.19141475,… #> $ y_to       <dbl> 0.19918973, 0.19918973, 0.27129618, 0.34340263, 0.27129618,… #> $ from_count <dbl> 65, 39, 39, 62, 62, 12, 45, 62, 67, 56, 42, 65, 42, 12, 56,… #> $ to_count   <dbl> 67, 67, 62, 34, 62, 42, 34, 68, 56, 68, 65, 47, 47, 17, 38,…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"visualise-the-triangular-mesh","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Visualise the triangular mesh","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"","code":"trimesh <- ggplot(model_2d, aes(x = c_x, y = c_y)) +   geom_trimesh() +   coord_equal() +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh"},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"map-bins-to-high-dimensional-observations","dir":"Articles","previous_headings":"Step 2: Lift the model into high dimensions","what":"Map bins to high-dimensional observations","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"begin extracting original data assigned hexagonal bin IDs.","code":"nldr_df_with_hex_id <- hb_obj$data_hb_id glimpse(nldr_df_with_hex_id) #> Rows: 5,000 #> Columns: 4 #> $ emb1 <dbl> 0.7066472, 0.2310437, 0.2317572, 0.7897575, 0.7612658, 0.4445289,… #> $ emb2 <dbl> 0.83877384, 0.40078460, 0.21512301, 0.56425294, 0.55071856, 0.720… #> $ ID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19… #> $ h    <int> 205, 109, 65, 146, 146, 172, 58, 110, 141, 80, 109, 102, 72, 169,…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"compute-high-dimensional-coordinates-for-bins","dir":"Articles","previous_headings":"Step 2: Lift the model into high dimensions","what":"Compute high-dimensional coordinates for bins","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"calculate average high-dimensional coordinates bin retain ones matching 2-D model bins.","code":"model_highd <- avg_highd_data(highd_data = scurve, scaled_nldr_hexid = nldr_df_with_hex_id)  model_highd <- model_highd |>   dplyr::filter(h %in% model_2d$h)  glimpse(model_highd) #> Rows: 130 #> Columns: 8 #> $ h  <int> 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51,… #> $ x1 <dbl> -0.99177515, -0.90610823, -0.68039636, -0.27233690, 0.07595360, 0.4… #> $ x2 <dbl> 1.9144578, 1.9297375, 1.9327118, 1.9301472, 1.9285235, 1.9308755, 1… #> $ x3 <dbl> 1.1144758, 1.4122003, 1.7247636, 1.9585367, 1.9953411, 1.8851445, 0… #> $ x4 <dbl> -4.274718e-04, -1.828833e-05, -8.098659e-04, 2.512547e-03, 8.763913… #> $ x5 <dbl> 0.0006244810, 0.0033144792, -0.0025895767, 0.0066812678, 0.00446645… #> $ x6 <dbl> 0.007488568, -0.020430827, -0.004485358, -0.045987489, 0.008507020,… #> $ x7 <dbl> 1.051068e-03, -3.631264e-04, 1.532865e-03, 1.275372e-03, -1.946201e…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"step-3-visualise-the-high-dimensional-model","dir":"Articles","previous_headings":"","what":"Step 3: Visualise the high-dimensional model","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"now combine components—high-dimensional data, 2-D model, lifted high-dimensional centroids, triangulation—render model using interactive tour.","code":""},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"prepare-data-for-visualisation","dir":"Articles","previous_headings":"Step 3: Visualise the high-dimensional model","what":"Prepare data for visualisation","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"","code":"df_exe <- comb_data_model(highd_data = scurve,                            model_highd = model_highd,                            model_2d = model_2d)"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr3algo.html","id":"interactive-tour-of-model-overlay","dir":"Articles","previous_headings":"Step 3: Visualise the high-dimensional model","what":"Interactive tour of model overlay","title":"3. Algorithm for visualising the model overlaid on high-dimensional data","text":"","code":"tour1 <- show_langevitour(point_data = df_exe, edge_data = trimesh_data)  tour1"},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"hexagonal-binning","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Hexagonal Binning","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"begin, preprocess 2-D embedding create hexagonal bins layout.","code":"## To pre-process the data nldr_obj <- gen_scaled_data(nldr_data = scurve_umap)  ## Obtain the hexbin object hb_obj <- hex_binning(   nldr_scaled_obj = scurve_model_obj$nldr_scaled_obj,    b1 = 21, q = 0.1)  all_centroids_df <- hb_obj$centroids counts_df <- hb_obj$std_cts"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"extract-bin-centroids","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Extract bin centroids","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"Next, extract centroid coordinates standardised bin counts. used identify densely populated regions 2-D space.","code":"## To extract all bin centroids with bin counts df_bin_centroids <- merge_hexbin_centroids(centroids_data = all_centroids_df,                                              counts_data = counts_df)  benchmark_highdens <- 0  ## To extract high-densed bins model_2d <- df_bin_centroids |>   dplyr::filter(n_h > benchmark_highdens)  glimpse(model_2d)  #> Rows: 251 #> Columns: 5 #> $ h   <int> 58, 68, 69, 70, 71, 72, 73, 78, 79, 90, 91, 92, 93, 94, 95, 96, 98… #> $ c_x <dbl> 0.7804473, 0.1641342, 0.2228307, 0.2815272, 0.3402237, 0.3989202, … #> $ c_y <dbl> -0.01401484, 0.03681781, 0.03681781, 0.03681781, 0.03681781, 0.036… #> $ n_h <dbl> 4, 1, 5, 6, 9, 5, 3, 3, 6, 7, 5, 2, 1, 5, 9, 1, 1, 5, 6, 10, 1, 4,… #> $ w_h <dbl> 0.004, 0.001, 0.005, 0.006, 0.009, 0.005, 0.003, 0.003, 0.006, 0.0…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"triangulate-the-bin-centroids","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Triangulate the bin centroids","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"triangulate hexagon centroids build wireframe neighborhood relationships.","code":"## Wireframe tr_object <- tri_bin_centroids(centroids_data = df_bin_centroids) str(tr_object) #> List of 2 #>  $ trimesh_object:List of 11 #>   ..$ n     : int 588 #>   ..$ x     : num [1:588] -0.1 -0.0413 0.0174 0.0761 0.1348 ... #>   ..$ y     : num [1:588] -0.116 -0.116 -0.116 -0.116 -0.116 ... #>   ..$ nt    : int 1106 #>   ..$ trlist: int [1:1106, 1:9] 1 23 43 22 22 3 45 23 23 64 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:9] \"i1\" \"i2\" \"i3\" \"j1\" ... #>   ..$ cclist: num [1:1106, 1:5] -0.0707 -0.0413 -0.1293 -0.0707 -0.0413 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:5] \"x\" \"y\" \"r\" \"area\" ... #>   ..$ nchull: int 68 #>   ..$ chull : int [1:68] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ narcs : int 1693 #>   ..$ arcs  : int [1:1693, 1:2] 2 22 1 2 23 22 43 44 22 23 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:2] \"from\" \"to\" #>   ..$ call  : language tri.mesh(x = centroids_data[[\"c_x\"]], y = centroids_data[[\"c_y\"]]) #>   ..- attr(*, \"class\")= chr \"triSht\" #>  $ n_h           : num [1:588] 0 0 0 0 0 0 0 0 0 0 ..."},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"generate-edges-from-triangulation","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Generate edges from triangulation","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"Using triangulation object, generate edges centroids. retain edges connecting densely populated bins.","code":"trimesh_data <- gen_edges(tri_object = tr_object, a1 = hb_obj$a1) |>   dplyr::filter(from_count > benchmark_highdens,                 to_count > benchmark_highdens)  ## Update the edge indexes to start from 1 trimesh_data <- update_trimesh_index(trimesh_data) glimpse(trimesh_data) #> Rows: 655 #> Columns: 10 #> $ from           <int> 69, 68, 70, 69, 90, 90, 110, 131, 131, 111, 91, 91, 111… #> $ to             <int> 90, 69, 91, 70, 111, 91, 132, 152, 132, 112, 92, 112, 1… #> $ x_from         <dbl> 0.2228307, 0.1641342, 0.2815272, 0.2228307, 0.1934824, … #> $ y_from         <dbl> 0.03681781, 0.03681781, 0.03681781, 0.03681781, 0.08765… #> $ x_to           <dbl> 0.1934824, 0.2228307, 0.2521789, 0.2815272, 0.2228307, … #> $ y_to           <dbl> 0.08765046, 0.03681781, 0.08765046, 0.03681781, 0.13848… #> $ from_count     <dbl> 5, 1, 6, 5, 7, 7, 4, 1, 1, 6, 5, 5, 6, 6, 6, 7, 3, 3, 5… #> $ to_count       <dbl> 7, 5, 5, 6, 6, 5, 7, 3, 7, 6, 2, 6, 3, 1, 9, 3, 7, 3, 1… #> $ from_reindexed <int> 3, 2, 4, 3, 10, 10, 22, 35, 35, 23, 11, 11, 23, 24, 4, … #> $ to_reindexed   <int> 10, 3, 11, 4, 23, 11, 36, 49, 36, 24, 12, 24, 37, 25, 5…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"visualise-the-triangular-mesh","dir":"Articles","previous_headings":"Step 1: Construct the 2-D model","what":"Visualise the triangular mesh","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"","code":"trimesh <- ggplot(model_2d, aes(x = c_x, y = c_y)) +   geom_trimesh() +   coord_equal() +   xlab(expression(C[x]^{(2)})) + ylab(expression(C[y]^{(2)})) +   theme(axis.text = element_text(size = 5),         axis.title = element_text(size = 7))  trimesh"},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"map-bins-to-high-dimensional-observations","dir":"Articles","previous_headings":"Step 2: Lift the model into high dimensions","what":"Map bins to high-dimensional observations","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"begin extracting original data assigned hexagonal bin IDs.","code":"nldr_df_with_hex_id <- hb_obj$data_hb_id glimpse(nldr_df_with_hex_id) #> Rows: 1,000 #> Columns: 4 #> $ emb1 <dbl> 0.27708147, 0.69717161, 0.77934921, 0.17323121, 0.21793445, 0.593… #> $ emb2 <dbl> 0.91343544, 0.53767948, 0.39861033, 0.95285002, 0.98320848, 1.048… #> $ ID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19… #> $ h    <int> 427, 287, 226, 446, 468, 495, 132, 292, 415, 229, 289, 91, 155, 4…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"compute-high-dimensional-coordinates-for-bins","dir":"Articles","previous_headings":"Step 2: Lift the model into high dimensions","what":"Compute high-dimensional coordinates for bins","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"calculate average high-dimensional coordinates bin retain ones matching 2-D model bins.","code":"model_highd <- avg_highd_data(highd_data = scurve, scaled_nldr_hexid = nldr_df_with_hex_id)  model_highd <- model_highd |>   dplyr::filter(h %in% model_2d$h)  glimpse(model_highd) #> Rows: 251 #> Columns: 8 #> $ h  <int> 58, 68, 69, 70, 71, 72, 73, 78, 79, 90, 91, 92, 93, 94, 95, 96, 98,… #> $ x1 <dbl> -0.37105188, 0.95812568, 0.85450337, 0.73126005, 0.47416208, 0.2648… #> $ x2 <dbl> 1.90644261, 0.08539250, 0.09171102, 0.12907776, 0.10794141, 0.12362… #> $ x3 <dbl> 1.922623, 1.286348, 1.507735, 1.676232, 1.877526, 1.962058, 1.99642… #> $ x4 <dbl> -0.0082718681, 0.0026502232, 0.0051225053, -0.0043335180, -0.002598… #> $ x5 <dbl> 0.0018876029, 0.0170739819, 0.0003245598, 0.0021079776, 0.000127695… #> $ x6 <dbl> 0.016977853, 0.087550004, -0.013016748, -0.035630709, 0.007849772, … #> $ x7 <dbl> 0.0028050043, -0.0024864689, -0.0039496434, -0.0024049571, 0.001697…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"step-3-visualise-the-high-dimensional-model","dir":"Articles","previous_headings":"","what":"Step 3: Visualise the high-dimensional model","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"now combine components—high-dimensional data, 2-D model, lifted high-dimensional centroids, triangulation—render model using interactive tour.","code":""},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"prepare-data-for-visualisation","dir":"Articles","previous_headings":"Step 3: Visualise the high-dimensional model","what":"Prepare data for visualisation","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"","code":"df_exe <- comb_data_model(highd_data = scurve,                            model_highd = model_highd,                            model_2d = model_2d)"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4algo.html","id":"interactive-tour-of-model-overlay","dir":"Articles","previous_headings":"Step 3: Visualise the high-dimensional model","what":"Interactive tour of model overlay","title":"4. Algorithm for visualising the model overlaid on high-dimensional data","text":"","code":"tour1 <- show_langevitour(point_data = df_exe, edge_data = trimesh_data)  tour1"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4summary.html","id":"step-1-fitting-the-model","dir":"Articles","previous_headings":"","what":"Step 1: Fitting the model","title":"4. Generating model summaries","text":"Begin fitting high-dimensional model corresponding 2-D model using fit_highd_model() function. generates 2-D bin centroids (2-D model) corresponding coordinates high-dimensional space (lifted model).","code":"model <- fit_highd_model(   highd_data = scurve,    nldr_data = scurve_umap,    b1 = 4,    q = 0.1,    benchmark_highdens = 5 )  df_bin_centroids <- model$model_2d df_bin <- model$model_highd"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4summary.html","id":"step-2-predicting-2-d-embedding-for-data","dir":"Articles","previous_headings":"","what":"Step 2: Predicting 2-D embedding for data","title":"4. Generating model summaries","text":"evaluate model fit, can predict 2-D embedding observation original high-dimensional dataset.","code":"pred_df_training <- predict_emb(   highd_data = scurve,    model_highd = scurve_model_obj$model_highd,   model_2d = scurve_model_obj$model_2d )  glimpse(pred_df_training) #> Rows: 5,000 #> Columns: 4 #> $ pred_emb_1 <dbl> 0.6909829, 0.1914148, 0.3163068, 0.7742443, 0.7742443, 0.44… #> $ pred_emb_2 <dbl> 0.84814779, 0.41550908, 0.19918973, 0.55972199, 0.55972199,… #> $ ID         <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, … #> $ pred_h     <int> 205, 109, 66, 146, 146, 172, 58, 110, 141, 96, 109, 102, 72…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4summary.html","id":"visualising-predictions","dir":"Articles","previous_headings":"Step 2: Predicting 2-D embedding for data","what":"Visualising predictions","title":"4. Generating model summaries","text":"plot shows original UMAP embedding training data grey, overlaid predicted 2-D coordinates red.","code":"umap_scaled <- scurve_model_obj$nldr_obj$scaled_nldr  umap_scaled |>   ggplot(aes(x = emb1, y = emb2, label = ID)) +   geom_point(alpha = 0.5) +   geom_point(data = pred_df_training, aes(x = pred_emb_1, y = pred_emb_2),               color = \"red\", alpha = 0.5) +   coord_equal() +   theme(     plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),     axis.text = element_text(size = 5),     axis.title = element_text(size = 7)   )"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4summary.html","id":"step-3-computing-model-summaries","dir":"Articles","previous_headings":"","what":"Step 3: Computing model summaries","title":"4. Generating model summaries","text":"Use glance() function compute summary statistics describe well 2-D model captures structure high-dimensional space.","code":"glance(   highd_data = scurve,    model_highd = scurve_model_obj$model_highd,   model_2d = scurve_model_obj$model_2d ) #> # A tibble: 1 × 2 #>   Error  RMSE #>   <dbl> <dbl> #> 1 1554. 0.190"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr4summary.html","id":"step-4-augmenting-the-dataset","dir":"Articles","previous_headings":"","what":"Step 4: Augmenting the dataset","title":"4. Generating model summaries","text":"obtain detailed data frame includes high-dimensional observations, assigned bins, predicted embeddings, summary metrics, use augment() function:","code":"augment(   highd_data = scurve,    model_highd = scurve_model_obj$model_highd,   model_2d = scurve_model_obj$model_2d ) |>   head(5) #> # A tibble: 5 × 32 #>      ID      x1     x2       x3       x4       x5      x6        x7 pred_h #>   <int>   <dbl>  <dbl>    <dbl>    <dbl>    <dbl>   <dbl>     <dbl>  <int> #> 1     1 -0.120  1.64   -1.99     0.0104   0.0125   0.0923 -0.00128     205 #> 2     2 -0.0492 1.51    0.00121 -0.0177   0.00726 -0.0362 -0.00535     109 #> 3     3 -0.774  1.30    0.367   -0.00173  0.0156  -0.0962  0.00335      66 #> 4     4 -0.606  0.246  -1.80    -0.00897 -0.0187  -0.0716  0.00126     146 #> 5     5 -0.478  0.0177 -1.88     0.00848  0.00533  0.0998  0.000677    146 #> # ℹ 23 more variables: model_high_d_x1 <dbl>, model_high_d_x2 <dbl>, #> #   model_high_d_x3 <dbl>, model_high_d_x4 <dbl>, model_high_d_x5 <dbl>, #> #   model_high_d_x6 <dbl>, model_high_d_x7 <dbl>, error_square_x1 <dbl>, #> #   error_square_x2 <dbl>, error_square_x3 <dbl>, error_square_x4 <dbl>, #> #   error_square_x5 <dbl>, error_square_x6 <dbl>, error_square_x7 <dbl>, #> #   row_wise_total_error <dbl>, abs_error_x1 <dbl>, abs_error_x2 <dbl>, #> #   abs_error_x3 <dbl>, abs_error_x4 <dbl>, abs_error_x5 <dbl>, …"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr5summary.html","id":"step-1-fitting-the-model","dir":"Articles","previous_headings":"","what":"Step 1: Fitting the model","title":"5. Generating model summaries","text":"Begin fitting high-dimensional model corresponding 2-D model using fit_highd_model() function. generates 2-D bin centroids (2-D model) corresponding coordinates high-dimensional space (lifted model).","code":"model <- fit_highd_model(   highd_data = scurve,    nldr_data = scurve_umap,    b1 = 21,    q = 0.1,    hd_thresh = 0 )  df_bin_centroids <- model$model_2d df_bin <- model$model_highd"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr5summary.html","id":"step-2-predicting-2-d-embedding-for-data","dir":"Articles","previous_headings":"","what":"Step 2: Predicting 2-D embedding for data","title":"5. Generating model summaries","text":"evaluate model fit, can predict 2-D embedding observation original high-dimensional dataset.","code":"pred_df_training <- predict_emb(   highd_data = scurve,    model_highd = scurve_model_obj$model_highd,   model_2d = scurve_model_obj$model_2d )  glimpse(pred_df_training) #> Rows: 1,000 #> Columns: 4 #> $ pred_emb_1 <dbl> 0.2336432, 0.6924026, 0.7758134, 0.1919378, 0.1919378, 0.56… #> $ pred_emb_2 <dbl> 0.8956221, 0.5344427, 0.3899710, 0.9678579, 0.9678579, 1.04… #> $ ID         <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, … #> $ pred_h     <int> 215, 145, 116, 229, 229, 249, 79, 164, 206, 118, 162, 50, 8…"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr5summary.html","id":"visualising-predictions","dir":"Articles","previous_headings":"Step 2: Predicting 2-D embedding for data","what":"Visualising predictions","title":"5. Generating model summaries","text":"plot shows original UMAP embedding training data grey, overlaid predicted 2-D coordinates red.","code":"umap_scaled <- scurve_model_obj$nldr_scaled_obj$scaled_nldr  umap_scaled |>   ggplot(aes(x = emb1, y = emb2, label = ID)) +   geom_point(alpha = 0.5) +   geom_point(data = pred_df_training, aes(x = pred_emb_1, y = pred_emb_2),               color = \"red\", alpha = 0.5) +   coord_equal() +   theme(     plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),     axis.text = element_text(size = 5),     axis.title = element_text(size = 7)   )"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr5summary.html","id":"step-3-computing-model-summaries","dir":"Articles","previous_headings":"","what":"Step 3: Computing model summaries","title":"5. Generating model summaries","text":"Use glance() function compute summary statistics describe well 2-D model captures structure high-dimensional space.","code":"glance(   x = scurve_model_obj,   highd_data = scurve ) #> # A tibble: 1 × 2 #>   Error   HBE #>   <dbl> <dbl> #> 1  265. 0.157"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr5summary.html","id":"step-4-augmenting-the-dataset","dir":"Articles","previous_headings":"","what":"Step 4: Augmenting the dataset","title":"5. Generating model summaries","text":"obtain detailed data frame includes high-dimensional observations, assigned bins, predicted embeddings, summary metrics, use augment() function:","code":"augment(   x = scurve_model_obj,   highd_data = scurve ) |>   head(5) #> # A tibble: 5 × 32 #>      ID      x1    x2       x3       x4       x5      x6       x7 pred_h #>   <int>   <dbl> <dbl>    <dbl>    <dbl>    <dbl>   <dbl>    <dbl>  <int> #> 1     1 -0.120  0.819 -1.99     0.0114   0.00351  0.0334  0.00638    215 #> 2     2 -0.0492 0.166  0.00121  0.0115  -0.0166  -0.0297  0.00509    145 #> 3     3 -0.774  0.651  0.367   -0.0172   0.00600  0.0211  0.00303    116 #> 4     4 -0.606  0.952 -1.80     0.0157  -0.00978 -0.0590 -0.00754    229 #> 5     5 -0.478  1.10  -1.88    -0.00423  0.00495 -0.0482 -0.00982    229 #> # ℹ 23 more variables: model_high_d_x1 <dbl>, model_high_d_x2 <dbl>, #> #   model_high_d_x3 <dbl>, model_high_d_x4 <dbl>, model_high_d_x5 <dbl>, #> #   model_high_d_x6 <dbl>, model_high_d_x7 <dbl>, error_square_x1 <dbl>, #> #   error_square_x2 <dbl>, error_square_x3 <dbl>, error_square_x4 <dbl>, #> #   error_square_x5 <dbl>, error_square_x6 <dbl>, error_square_x7 <dbl>, #> #   row_wise_total_error <dbl>, abs_error_x1 <dbl>, abs_error_x2 <dbl>, #> #   abs_error_x3 <dbl>, abs_error_x4 <dbl>, abs_error_x5 <dbl>, …"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr7bestfit.html","id":"step-1-generate-design-for-2-d-nldr-layouts","dir":"Articles","previous_headings":"","what":"Step 1: Generate design for 2-D NLDR layouts","title":"7. Selecting the best fit","text":"begin specifying layout design arranging plots. design defines arrangement 2-D NLDR layouts.","code":"design <- gen_design(n_right = 4, ncol_right = 2)"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr7bestfit.html","id":"step-2-visualising-hbe-across-configurations","dir":"Articles","previous_headings":"","what":"Step 2: Visualising HBE across configurations","title":"7. Selecting the best fit","text":"visually compare multiple 2-D NLDR layouts, use plot_hbe_layouts() function. function plots HBE values different bin width configurations along 2-D NLDR layouts, making easier identify best-performing model visually.","code":"plot_hbe_layouts(plots = scurve_plts, design = design)"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr8interactivity.html","id":"step-1-augmenting-data-with-model-errors","dir":"Articles","previous_headings":"","what":"Step 1: Augmenting data with model errors","title":"8. Interactivity","text":"begin computing model errors using augment() function. step appends prediction errors high-dimensional 2-D models original dataset.","code":"model_error <- augment(   highd_data = scurve,    model_highd = scurve_model_obj$model_highd,    model_2d = scurve_model_obj$model_2d )"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr8interactivity.html","id":"step-2-combining-all-components","dir":"Articles","previous_headings":"","what":"Step 2: Combining all components","title":"8. Interactivity","text":"Next, prepare comprehensive data frame brings together high-dimensional data, 2-D embeddings, model predictions, error metrics. combined object serves foundation linked interactive plots. also extract edge data (e.g., triangulations) used define neighborhood relationships 2-D space.","code":"df_exe <- comb_all_data_model_error(   highd_data = scurve,    nldr_data = scurve_umap,    model_highd = scurve_model_obj$model_highd,    model_2d = scurve_model_obj$model_2d,    error_data = model_error ) edge_data <- scurve_model_obj$trimesh_data"},{"path":"https://jayanilakshika.github.io/quollr/articles/quollr8interactivity.html","id":"step-3-generating-linked-interactive-plots","dir":"Articles","previous_headings":"","what":"Step 3: Generating linked interactive plots","title":"8. Interactivity","text":"Finally, use show_error_link_plots() function produce interactive linked views. plots allow users examine prediction errors spatially, investigate neighborhood relationships via edge links, interactively select highlight points across plots. interactive visualisation bridges gap model diagnostics exploratory data analysis, enabling richer understanding model performance structural preservation dimension reduction.","code":"show_error_link_plots(point_data = df_exe, edge_data = edge_data)"},{"path":"https://jayanilakshika.github.io/quollr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jayani P. Gamage. Author, maintainer. Dianne Cook. Author. Paul Harrison. Author. Michael Lydeamore. Author. Thiyanga S. Talagala. Author.","code":""},{"path":"https://jayanilakshika.github.io/quollr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gamage J, Cook D, Harrison P, Lydeamore M, Talagala T (2025). quollr: Visualising Nonlinear Dimension Reduction Warps Data. R package version 0.3.15, https://jayanilakshika.github.io/quollr/.","code":"@Manual{,   title = {quollr: Visualising How Nonlinear Dimension Reduction Warps Your Data},   author = {Jayani P. Gamage and Dianne Cook and Paul Harrison and Michael Lydeamore and Thiyanga S. Talagala},   year = {2025},   note = {R package version 0.3.15},   url = {https://jayanilakshika.github.io/quollr/}, }"},{"path":"https://jayanilakshika.github.io/quollr/index.html","id":"quollr-","dir":"","previous_headings":"","what":"Visualising How Nonlinear Dimension Reduction Warps Your Data","title":"Visualising How Nonlinear Dimension Reduction Warps Your Data","text":"Nonlinear dimension reduction (NLDR) techniques provide low-dimensional representation high-dimensional data applying non-linear transformation. complexity transformations data structure can create wildly different representations depending method parameter choices. difficult determine whether accurate, best, whether missed structure. help assess NLDR decide , , best, developed algorithm create model used display wireframe high dimensions. quollr package provides functions implement algorithm. thorough background discussion work, please read paper https://arxiv.org/abs/2506.22051.","code":""},{"path":"https://jayanilakshika.github.io/quollr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualising How Nonlinear Dimension Reduction Warps Your Data","text":"can install released version quollr CRAN : development version GitHub :","code":"install.packages(\"quollr\") install.packages(\"pak\") pak::pak(\"JayaniLakshika/quollr\")"},{"path":"https://jayanilakshika.github.io/quollr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Visualising How Nonlinear Dimension Reduction Warps Your Data","text":"approach involves dividing high-dimensional data set two parts: training set construct model test set generate model summaries. implement approach, first use 2-D embedding data set initial point. output algorithm tour displays model overlaid high-dimensional data. algorithm comprises two main phases: (1) generate model 2-D space, (2) lift model high-dimensional space. methodology available package.","code":""},{"path":"https://jayanilakshika.github.io/quollr/index.html","id":"about-the-name","dir":"","previous_headings":"","what":"About the name","title":"Visualising How Nonlinear Dimension Reduction Warps Your Data","text":"questioning high-dimensional object looks low-dimensions using r","code":""},{"path":"https://jayanilakshika.github.io/quollr/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Visualising How Nonlinear Dimension Reduction Warps Your Data","text":"Quick start guide: 1. Quick start learn data preprocessing: 2. Data preprocessing create full hexagonal grid: 3. Algorithm binning data learn main steps algorithm: 4. Algorithm visualising model overlaid high-dimensional data generate model summaries: 5. Generating model summaries select optimal bin width: 6. Selecting best bin width select reasonable NLDR layout: 7. Selecting best fit","code":""},{"path":"https://jayanilakshika.github.io/quollr/index.html","id":"copyright","dir":"","previous_headings":"","what":"Copyright","title":"Visualising How Nonlinear Dimension Reduction Warps Your Data","text":"package licensed MIT license.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/GeomHexgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomHexgrid: A Custom ggplot2 Geom for Hexagonal Grid — GeomHexgrid","title":"GeomHexgrid: A Custom ggplot2 Geom for Hexagonal Grid — GeomHexgrid","text":"function defines custom ggplot2 Geom, GeomHexgrid, rendering hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/GeomHexgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeomHexgrid: A Custom ggplot2 Geom for Hexagonal Grid — GeomHexgrid","text":"","code":"GeomHexgrid"},{"path":"https://jayanilakshika.github.io/quollr/reference/GeomHexgrid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GeomHexgrid: A Custom ggplot2 Geom for Hexagonal Grid — GeomHexgrid","text":"ggproto object","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/GeomTrimesh.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomTrimesh: A Custom ggplot2 Geom for Triangular Meshes — GeomTrimesh","title":"GeomTrimesh: A Custom ggplot2 Geom for Triangular Meshes — GeomTrimesh","text":"function defines custom ggplot2 Geom, GeomTrimesh, rendering triangular meshes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/GeomTrimesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeomTrimesh: A Custom ggplot2 Geom for Triangular Meshes — GeomTrimesh","text":"","code":"GeomTrimesh"},{"path":"https://jayanilakshika.github.io/quollr/reference/GeomTrimesh.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GeomTrimesh: A Custom ggplot2 Geom for Triangular Meshes — GeomTrimesh","text":"ggproto object","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/GeomTrimesh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GeomTrimesh: A Custom ggplot2 Geom for Triangular Meshes — GeomTrimesh","text":"- required_aes: required aesthetics geometry \"x\", \"y\", \"xend\", \"yend\". - default_aes: default aesthetics geometry include shape = 19, linetype = 1, linewidth = 0.5,   size = 0.5, alpha = NA, colour = \"black\". - draw_key: function describing draw key glyph ggplot2::draw_key_point. - draw_panel: function describing draw panel takes data, panel_scales, coord.   creates tibble vertices tibble trimesh. final plot constructed using ggplot2::GeomPoint$draw_panel   vertices ggplot2::GeomSegment$draw_panel trimesh.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/assign_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign data to hexagons — assign_data","title":"Assign data to hexagons — assign_data","text":"function assigns data hexagons.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/assign_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign data to hexagons — assign_data","text":"","code":"assign_data(nldr_scaled_obj, centroids_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/assign_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign data to hexagons — assign_data","text":"nldr_scaled_obj list tibble contains scaled first second columns NLDR data, numeric vectors representing limits original NLDR data. centroids_data dataset centroid coordinates.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/assign_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign data to hexagons — assign_data","text":"tibble contains embedding components (emb1, emb2) corresponding hexagon ID (h).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/assign_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign data to hexagons — assign_data","text":"","code":"all_centroids_df <- scurve_model_obj$hb_obj$centroids assign_data(nldr_scaled_obj = scurve_model_obj$nldr_scaled_obj, centroids_data = all_centroids_df) #> # A tibble: 1,000 × 4 #>     emb1  emb2    ID     h #>    <dbl> <dbl> <int> <int> #>  1 0.277 0.913     1   216 #>  2 0.697 0.538     2   145 #>  3 0.779 0.399     3   116 #>  4 0.173 0.953     4   229 #>  5 0.218 0.983     5   229 #>  6 0.593 1.05      6   249 #>  7 0.180 0.210     7    79 #>  8 0.976 0.571     8   164 #>  9 0.803 0.829     9   206 #> 10 0.932 0.410    10   118 #> # ℹ 990 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.highd_vis_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Data with Predictions and Error Metrics for NLDR Models — augment.highd_vis_model","title":"Augment Data with Predictions and Error Metrics for NLDR Models — augment.highd_vis_model","text":"S3 method augments dataset predictions error metrics obtained nonlinear dimension reduction (NLDR) model stored highd_vis_model object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.highd_vis_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Data with Predictions and Error Metrics for NLDR Models — augment.highd_vis_model","text":"","code":"# S3 method for class 'highd_vis_model' augment(x, highd_data, ...)"},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.highd_vis_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Data with Predictions and Error Metrics for NLDR Models — augment.highd_vis_model","text":"x object class highd_vis_model containing model outputs. highd_data data frame tibble containing original high-dimensional coordinates ID column. ... Additional arguments (currently unused).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.highd_vis_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Data with Predictions and Error Metrics for NLDR Models — augment.highd_vis_model","text":"tibble containing augmented data predictions, error metrics, absolute error metrics.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.highd_vis_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Data with Predictions and Error Metrics for NLDR Models — augment.highd_vis_model","text":"","code":"# Assuming 'fit' is a highd_vis_model object and 'scurve' contains the original data: fit <- fit_highd_model(highd_data = scurve, nldr_data = scurve_umap, b1 = 30, q = 0.1, hd_thresh = 5) #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> ✔ Model generated successfully!!! augment(x = fit, highd_data = scurve) #> # A tibble: 1,000 × 32 #>       ID      x1    x2       x3       x4       x5       x6        x7 pred_h #>    <int>   <dbl> <dbl>    <dbl>    <dbl>    <dbl>    <dbl>     <dbl>  <int> #>  1     1 -0.120  0.819 -1.99     0.0114   0.00351  0.0334   0.00638     816 #>  2     2 -0.0492 0.166  0.00121  0.0115  -0.0166  -0.0297   0.00509     711 #>  3     3 -0.774  0.651  0.367   -0.0172   0.00600  0.0211   0.00303     287 #>  4     4 -0.606  0.952 -1.80     0.0157  -0.00978 -0.0590  -0.00754     816 #>  5     5 -0.478  1.10  -1.88    -0.00423  0.00495 -0.0482  -0.00982     816 #>  6     6  0.818  1.78  -1.58     0.0124   0.0198   0.0560  -0.000730    711 #>  7     7  0.910  0.975  1.42    -0.0111   0.0132   0.0299   0.00401     397 #>  8     8 -0.0691 1.90   0.00239  0.0125  -0.00463  0.0260   0.00590     711 #>  9     9  0.859  1.34  -0.488   -0.00195 -0.0145  -0.00950  0.00593     711 #> 10    10 -0.727  1.56   0.314    0.0189   0.0147  -0.0659   0.00617     711 #> # ℹ 990 more rows #> # ℹ 23 more variables: model_high_d_x1 <dbl>, model_high_d_x2 <dbl>, #> #   model_high_d_x3 <dbl>, model_high_d_x4 <dbl>, model_high_d_x5 <dbl>, #> #   model_high_d_x6 <dbl>, model_high_d_x7 <dbl>, error_square_x1 <dbl>, #> #   error_square_x2 <dbl>, error_square_x3 <dbl>, error_square_x4 <dbl>, #> #   error_square_x5 <dbl>, error_square_x6 <dbl>, error_square_x7 <dbl>, #> #   row_wise_total_error <dbl>, abs_error_x1 <dbl>, abs_error_x2 <dbl>, …"},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 generic for augment — augment","title":"S3 generic for augment — augment","text":"generic function augment datasets predictions error metrics different models, including NLDR models.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 generic for augment — augment","text":"","code":"augment(x, ...)"},{"path":"https://jayanilakshika.github.io/quollr/reference/augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 generic for augment — augment","text":"x object augment. ... Additional arguments passed methods (e.g., high-dimensional data).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/avg_highD_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tibble with averaged high-dimensional data — avg_highd_data","title":"Create a tibble with averaged high-dimensional data — avg_highd_data","text":"function calculates average values high-dimensional data within hexagonal bin.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/avg_highD_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tibble with averaged high-dimensional data — avg_highd_data","text":"","code":"avg_highd_data(highd_data, scaled_nldr_hexid)"},{"path":"https://jayanilakshika.github.io/quollr/reference/avg_highD_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tibble with averaged high-dimensional data — avg_highd_data","text":"highd_data tibble contains high-dimensional data. scaled_nldr_hexid tibble contains scaled embedding hexagonal bin IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/avg_highD_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tibble with averaged high-dimensional data — avg_highd_data","text":"tibble average values high-dimensional data within hexagonal bin.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/avg_highD_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tibble with averaged high-dimensional data — avg_highd_data","text":"","code":"umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id avg_highd_data(highd_data = scurve, scaled_nldr_hexid = umap_with_hb_id) #> # A tibble: 137 × 8 #>        h      x1     x2    x3         x4        x5       x6         x7 #>    <int>   <dbl>  <dbl> <dbl>      <dbl>     <dbl>    <dbl>      <dbl> #>  1    34  0.958  0.0854  1.29  0.00265    0.0171    0.0876  -0.00249   #>  2    35  0.818  0.116   1.56  0.00184    0.00361  -0.0318  -0.00377   #>  3    36  0.544  0.111   1.83 -0.00341   -0.000303  0.0196   0.0000704 #>  4    37  0.279  0.128   1.95  0.0000880  0.00104  -0.0276  -0.000227  #>  5    38  0.0567 0.119   2.00  0.00733    0.00238   0.0833  -0.00166   #>  6    41 -0.375  1.58    1.91 -0.0126     0.000689  0.0295   0.000936  #>  7    42 -0.529  1.84    1.83 -0.000870  -0.000312  0.00825  0.00162   #>  8    49  0.935  0.364   1.31 -0.00383   -0.00292  -0.00153  0.000860  #>  9    50  0.705  0.449   1.70  0.00218   -0.00679  -0.0149   0.00223   #> 10    51  0.387  0.371   1.92  0.00876    0.00420   0.0157   0.00230   #> # ℹ 127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/cal_2D_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 2D Euclidean distances between vertices — cal_2d_dist","title":"Calculate 2D Euclidean distances between vertices — cal_2d_dist","text":"function calculates 2D distances pairs points data frame.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/cal_2D_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 2D Euclidean distances between vertices — cal_2d_dist","text":"","code":"cal_2d_dist(tr_coord_df, start_x, start_y, end_x, end_y, select_vars)"},{"path":"https://jayanilakshika.github.io/quollr/reference/cal_2D_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 2D Euclidean distances between vertices — cal_2d_dist","text":"tr_coord_df tibble contains x y coordinates start end points. start_x Column name x-coordinate starting point. start_y Column name y-coordinate starting point. end_x Column name x-coordinate ending point. end_y Column name y-coordinate ending point. select_vars character vector specifying columns selected resulting data frame.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/cal_2D_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate 2D Euclidean distances between vertices — cal_2d_dist","text":"tibble columns starting point, ending point, calculated distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/cal_2D_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate 2D Euclidean distances between vertices — cal_2d_dist","text":"","code":"tr_from_to_df <- s_curve_obj$s_curve_umap_model_tr_from_to_df cal_2d_dist(tr_coord_df = tr_from_to_df, start_x = \"x_from\", start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\", select_vars = c(\"from\", \"to\", \"distance\")) #> # A tibble: 35 × 3 #>     from    to distance #>    <int> <int>    <dbl> #>  1     1     2    0.327 #>  2     4     5    0.327 #>  3     3     5    0.327 #>  4     5     6    0.327 #>  5     5    11    0.566 #>  6     5     8    0.327 #>  7     1    10    0.865 #>  8     5    10    0.654 #>  9    10    11    0.327 #> 10     8     9    0.327 #> # ℹ 25 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_2d_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 2-D Euclidean distances between vertices — calc_2d_dist","title":"Calculate 2-D Euclidean distances between vertices — calc_2d_dist","text":"function calculates 2-D distances pairs points data frame.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_2d_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 2-D Euclidean distances between vertices — calc_2d_dist","text":"","code":"calc_2d_dist(   trimesh_data,   select_vars = c(\"from\", \"to\", \"x_from\", \"y_from\", \"x_to\", \"y_to\", \"from_count\",     \"to_count\", \"distance\") )"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_2d_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 2-D Euclidean distances between vertices — calc_2d_dist","text":"trimesh_data tibble contains x y coordinates start end points. select_vars selected columns resulting data frame.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_2d_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate 2-D Euclidean distances between vertices — calc_2d_dist","text":"tibble columns starting point, ending point, calculated distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_2d_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate 2-D Euclidean distances between vertices — calc_2d_dist","text":"","code":"tr_from_to_df <- scurve_model_obj$trimesh_data calc_2d_dist(trimesh_data = tr_from_to_df) #> # A tibble: 346 × 9 #>     from    to x_from y_from  x_to   y_to from_count to_count distance #>    <int> <int>  <dbl>  <dbl> <dbl>  <dbl>      <dbl>    <dbl>    <dbl> #>  1    35    49  0.234 0.0288 0.192 0.101          10       11   0.0834 #>  2    34    35  0.150 0.0288 0.234 0.0288          1       10   0.0834 #>  3    49    65  0.192 0.101  0.234 0.173          11       10   0.0834 #>  4    35    36  0.234 0.0288 0.317 0.0288         10        8   0.0834 #>  5    64    65  0.150 0.173  0.234 0.173           5       10   0.0834 #>  6    35    50  0.234 0.0288 0.275 0.101          10        9   0.0834 #>  7    64    79  0.150 0.173  0.192 0.245           5       10   0.0834 #>  8    36    50  0.317 0.0288 0.275 0.101           8        9   0.0834 #>  9    78    94  0.109 0.245  0.150 0.318           1       11   0.0834 #> 10    78    79  0.109 0.245  0.192 0.245           1       10   0.0834 #> # ℹ 336 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the effective number of bins along x-axis and y-axis — calc_bins","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins","text":"function calculates effective number bins along x y axes hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins","text":"","code":"calc_bins(data, x, y, hex_size, buffer_x, buffer_y)"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins","text":"data tibble data frame. x name column contains values along x-axis. y name column contains values along y-axis. hex_size numeric value initializes radius outer circle surrounded hexagon. buffer_x buffer size along x-axis. buffer_y buffer size along y-axis.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins","text":"list numeric values represents effective number bins along x y axes hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins","text":"","code":"calc_bins(data = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", hex_size = 0.2, buffer_x = 0.346, buffer_y = 0.3) #> $num_x #> [1] 4 #>  #> $num_y #> [1] 7 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the effective number of bins along x-axis and y-axis — calc_bins_y","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins_y","text":"function calculates effective number bins along x y axes hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins_y","text":"","code":"calc_bins_y(nldr_scaled_obj, b1 = 30, q = 0.1)"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins_y","text":"nldr_scaled_obj list tibble contains scaled first second columns NLDR data, numeric vectors representing limits original NLDR data. b1 Number bins along x axis. q buffer amount proportion data range.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins_y","text":"list numeric values represents effective number bins along y axis, height , width hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_bins_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the effective number of bins along x-axis and y-axis — calc_bins_y","text":"","code":"calc_bins_y(nldr_scaled_obj = scurve_model_obj$nldr_scaled_obj, b1 = 30, q = 0.1) #> $b2 #> [1] 40 #>  #> $a1 #> [1] 0.04063603 #>  #> $a2 #> [1] 0.03519184 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_y_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute maximum value of y for scaling — calc_y_max","title":"Compute maximum value of y for scaling — calc_y_max","text":"function compute maximum y value need use scaling.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_y_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute maximum value of y for scaling — calc_y_max","text":"","code":"calc_y_max(aspect_ratio, hex_ratio)"},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_y_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute maximum value of y for scaling — calc_y_max","text":"aspect_ratio Numeric value representing aspect ratio plot area. hex_ratio Numeric value representing ratio hexagon size.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_y_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute maximum value of y for scaling — calc_y_max","text":"value used maximum value y scaling.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calc_y_max.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute maximum value of y for scaling — calc_y_max","text":"","code":"calc_y_max(aspect_ratio = 2.019414, hex_ratio = 0.2309401) #> [1] 2.078461"},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_shape_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate effective shape parameter value — calculate_effective_shape_value","title":"Calculate effective shape parameter value — calculate_effective_shape_value","text":"function calculates effective shape parameter value scatter plot based ranges x-axis y-axis.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_shape_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate effective shape parameter value — calculate_effective_shape_value","text":"","code":"calculate_effective_shape_value(.data, x = \"UMAP1\", y = \"UMAP2\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_shape_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate effective shape parameter value — calculate_effective_shape_value","text":".data data frame, data frame extension (e.g., tibble), lazy data frame (e.g., dbplyr dtplyr). x character variable name representing x-axis. y character variable name representing y-axis.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_shape_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate effective shape parameter value — calculate_effective_shape_value","text":"numeric value representing effective shape parameter.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_shape_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate effective shape parameter value — calculate_effective_shape_value","text":"","code":"calculate_effective_shape_value(.data = s_curve_noise_umap, x = \"UMAP1\", y = \"UMAP2\") #> [1] 2.019414"},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_x_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the effective number of bins along x-axis — calculate_effective_x_bins","title":"Calculate the effective number of bins along x-axis — calculate_effective_x_bins","text":"function calculates effective number bins along x-axis hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_x_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the effective number of bins along x-axis — calculate_effective_x_bins","text":"","code":"calculate_effective_x_bins(nldr_df, x = \"UMAP1\", hex_size = NA, buffer_x = NA)"},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_x_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the effective number of bins along x-axis — calculate_effective_x_bins","text":"nldr_df data frame containing 2D embeddings. x name column contains first 2D embeddings component. hex_size numeric value initializes radius outer circle surrounding hexagon. buffer_x buffer size along x-axis.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_x_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the effective number of bins along x-axis — calculate_effective_x_bins","text":"numeric value representing effective number bins along x-axis.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_x_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the effective number of bins along x-axis — calculate_effective_x_bins","text":"","code":"calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. #> [1] 5"},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_y_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the effective number of bins along y-axis — calculate_effective_y_bins","title":"Calculate the effective number of bins along y-axis — calculate_effective_y_bins","text":"function calculates effective number bins along y-axis hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_y_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the effective number of bins along y-axis — calculate_effective_y_bins","text":"","code":"calculate_effective_y_bins(nldr_df, y = \"UMAP2\", hex_size = NA, buffer_y = NA)"},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_y_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the effective number of bins along y-axis — calculate_effective_y_bins","text":"nldr_df data frame containing 2D embeddings. y name column contains second 2D embeddings component. hex_size numeric value initializes radius outer circle surrounding hexagon. buffer_y buffer size along y-axis.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_y_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the effective number of bins along y-axis — calculate_effective_y_bins","text":"numeric value representing effective number bins along x-axis.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/calculate_effective_y_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the effective number of bins along y-axis — calculate_effective_y_bins","text":"","code":"calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled, y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. #> [1] 8"},{"path":"https://jayanilakshika.github.io/quollr/reference/colour_long_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Long Edges — colour_long_edges","title":"Color Long Edges — colour_long_edges","text":"function colors long edges triangular mesh plot based benchmark value.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/colour_long_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Long Edges — colour_long_edges","text":"","code":"colour_long_edges(   distance_edges,   benchmark_value,   tr_from_to_df_coord,   distance_col )"},{"path":"https://jayanilakshika.github.io/quollr/reference/colour_long_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Long Edges — colour_long_edges","text":"distance_edges data frame containing edge information. benchmark_value threshold value determine long edges. tr_from_to_df_coord data frame containing columns x y coordinates start end points. distance_col column name `distance_edges` representing distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/colour_long_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color Long Edges — colour_long_edges","text":"ggplot object triangular mesh plot long edges colored differently.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/colour_long_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color Long Edges — colour_long_edges","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,                                         x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,                                         y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled,                                              x = \"UMAP1\", y = \"UMAP2\",                                              num_bins_x = num_bins_x,                                              num_bins_y = num_bins_y,                                              x_start = NA, y_start = NA,                                              buffer_x = NA,                                              buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. all_centroids_df <- as.data.frame(do.call(cbind, centroid_list)) s_curve_noise_umap_scaled_rm_id <- s_curve_noise_umap_scaled |> dplyr::select(-ID) nldr_with_hb_id_list <- assign_data(nldr_df = s_curve_noise_umap_scaled_rm_id, centroid_df = all_centroids_df) umap_with_hb_id <- as.data.frame(do.call(cbind, nldr_with_hb_id_list)) std_counts_list <- compute_std_counts(nldr_df_with_hex_id = umap_with_hb_id) counts_df <- as.data.frame(do.call(cbind, std_counts_list)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df, counts_df = counts_df) tr1_object <- triangulate_bin_centroids(hex_bin_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") #> Warning: triangle collapsed! #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> Warning: three points coincide or are collinear! tr_from_to_df <- generate_edge_info(triangular_object = tr1_object) distance_df <- cal_2d_dist(tr_from_to_df_coord = tr_from_to_df, start_x = \"x_from\", start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\", select_col_vec = c(\"from\", \"to\", \"distance\")) colour_long_edges(distance_edges = distance_df, benchmark_value = 0.75, tr_from_to_df_coord = tr_from_to_df, distance_col = \"distance\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data — comb_all_data_model","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data — comb_all_data_model","text":"function combine average values high-dimensional data within hexagonal bin high-dimensional data, non-linear dimension reduction data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data — comb_all_data_model","text":"","code":"comb_all_data_model(highd_data, nldr_data, model_highd, model_2d)"},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data — comb_all_data_model","text":"highd_data tibble contains high-dimensional data. nldr_data tibble contains non-linear dimension reduction data. model_highd tibble contains high-dimensional coordinates bin centroids. model_2d tibble contains hexagonal bin centroids 2-D.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data — comb_all_data_model","text":"tibble average values high-dimensional data within hexagonal bin high-dimensional data, non-linear dimension reduction data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data — comb_all_data_model","text":"","code":"comb_all_data_model(highd_data = scurve, nldr_data = scurve_umap, model_highd = scurve_model_obj$model_highd, model_2d = scurve_model_obj$model_2d) #> # A tibble: 1,137 × 10 #>         x1     x2    x3         x4        x5       x6       x7 type   emb1  emb2 #>      <dbl>  <dbl> <dbl>      <dbl>     <dbl>    <dbl>    <dbl> <chr> <dbl> <dbl> #>  1  0.958  0.0854  1.29  0.00265    0.0171    0.0876  -2.49e-3 model    NA    NA #>  2  0.818  0.116   1.56  0.00184    0.00361  -0.0318  -3.77e-3 model    NA    NA #>  3  0.544  0.111   1.83 -0.00341   -0.000303  0.0196   7.04e-5 model    NA    NA #>  4  0.279  0.128   1.95  0.0000880  0.00104  -0.0276  -2.27e-4 model    NA    NA #>  5  0.0567 0.119   2.00  0.00733    0.00238   0.0833  -1.66e-3 model    NA    NA #>  6 -0.375  1.58    1.91 -0.0126     0.000689  0.0295   9.36e-4 model    NA    NA #>  7 -0.529  1.84    1.83 -0.000870  -0.000312  0.00825  1.62e-3 model    NA    NA #>  8  0.935  0.364   1.31 -0.00383   -0.00292  -0.00153  8.60e-4 model    NA    NA #>  9  0.705  0.449   1.70  0.00218   -0.00679  -0.0149   2.23e-3 model    NA    NA #> 10  0.387  0.371   1.92  0.00876    0.00420   0.0157   2.30e-3 model    NA    NA #> # ℹ 1,127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data, model error data — comb_all_data_model_error","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data, model error data — comb_all_data_model_error","text":"function combine average values high-dimensional data within hexagonal bin high-dimensional data, non-linear dimension reduction data, model error data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data, model error data — comb_all_data_model_error","text":"","code":"comb_all_data_model_error(   highd_data,   nldr_data,   model_highd,   model_2d,   error_data )"},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data, model error data — comb_all_data_model_error","text":"highd_data tibble contains high-dimensional data. nldr_data tibble contains non-linear dimension reduction data. model_highd tibble contains high-dimensional coordinates bin centroids. model_2d tibble contains hexagonal bin centroids 2-D. error_data tibble contains high-dimensional model error.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data, model error data — comb_all_data_model_error","text":"tibble average values high-dimensional data within hexagonal bin high-dimensional data, non-linear dimension reduction data, model error.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_all_data_model_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tibble with averaged high-dimensional data and high-dimensional data, non-linear dimension reduction data, model error data — comb_all_data_model_error","text":"","code":"model_error <- augment(x = scurve_model_obj, highd_data = scurve) comb_all_data_model_error(highd_data = scurve, nldr_data = scurve_umap, model_highd = scurve_model_obj$model_highd, model_2d = scurve_model_obj$model_2d, error_data = model_error) #> # A tibble: 1,137 × 12 #>         x1     x2    x3         x4        x5       x6       x7 type   emb1  emb2 #>      <dbl>  <dbl> <dbl>      <dbl>     <dbl>    <dbl>    <dbl> <chr> <dbl> <dbl> #>  1  0.958  0.0854  1.29  0.00265    0.0171    0.0876  -2.49e-3 model    NA    NA #>  2  0.818  0.116   1.56  0.00184    0.00361  -0.0318  -3.77e-3 model    NA    NA #>  3  0.544  0.111   1.83 -0.00341   -0.000303  0.0196   7.04e-5 model    NA    NA #>  4  0.279  0.128   1.95  0.0000880  0.00104  -0.0276  -2.27e-4 model    NA    NA #>  5  0.0567 0.119   2.00  0.00733    0.00238   0.0833  -1.66e-3 model    NA    NA #>  6 -0.375  1.58    1.91 -0.0126     0.000689  0.0295   9.36e-4 model    NA    NA #>  7 -0.529  1.84    1.83 -0.000870  -0.000312  0.00825  1.62e-3 model    NA    NA #>  8  0.935  0.364   1.31 -0.00383   -0.00292  -0.00153  8.60e-4 model    NA    NA #>  9  0.705  0.449   1.70  0.00218   -0.00679  -0.0149   2.23e-3 model    NA    NA #> 10  0.387  0.371   1.92  0.00876    0.00420   0.0157   2.30e-3 model    NA    NA #> # ℹ 1,127 more rows #> # ℹ 2 more variables: sqrt_row_wise_total_error <dbl>, density <dbl>"},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tibble with averaged high-dimensional data and high-dimensional data — comb_data_model","title":"Create a tibble with averaged high-dimensional data and high-dimensional data — comb_data_model","text":"function combine average values high-dimensional data within hexagonal bin high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tibble with averaged high-dimensional data and high-dimensional data — comb_data_model","text":"","code":"comb_data_model(highd_data, model_highd, model_2d)"},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tibble with averaged high-dimensional data and high-dimensional data — comb_data_model","text":"highd_data tibble contains high-dimensional data. model_highd tibble contains high-dimensional coordinates bin centroids. model_2d tibble contains hexagonal bin centroids 2-D.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_data_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tibble with averaged high-dimensional data and high-dimensional data — comb_data_model","text":"tibble average values high-dimensional data within hexagonal bin high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/comb_data_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tibble with averaged high-dimensional data and high-dimensional data — comb_data_model","text":"","code":"comb_data_model(highd_data = scurve, model_highd = scurve_model_obj$model_highd, model_2d = scurve_model_obj$model_2d) #> # A tibble: 1,137 × 8 #>         x1     x2    x3         x4        x5       x6         x7 type  #>      <dbl>  <dbl> <dbl>      <dbl>     <dbl>    <dbl>      <dbl> <chr> #>  1  0.958  0.0854  1.29  0.00265    0.0171    0.0876  -0.00249   model #>  2  0.818  0.116   1.56  0.00184    0.00361  -0.0318  -0.00377   model #>  3  0.544  0.111   1.83 -0.00341   -0.000303  0.0196   0.0000704 model #>  4  0.279  0.128   1.95  0.0000880  0.00104  -0.0276  -0.000227  model #>  5  0.0567 0.119   2.00  0.00733    0.00238   0.0833  -0.00166   model #>  6 -0.375  1.58    1.91 -0.0126     0.000689  0.0295   0.000936  model #>  7 -0.529  1.84    1.83 -0.000870  -0.000312  0.00825  0.00162   model #>  8  0.935  0.364   1.31 -0.00383   -0.00292  -0.00153  0.000860  model #>  9  0.705  0.449   1.70  0.00218   -0.00679  -0.0149   0.00223   model #> 10  0.387  0.371   1.92  0.00876    0.00420   0.0157   0.00230   model #> # ℹ 1,127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Akaike Information Criterion (AIC) for a given model. — compute_aic","title":"Compute the Akaike Information Criterion (AIC) for a given model. — compute_aic","text":"Compute Akaike Information Criterion (AIC) given model.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_aic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Akaike Information Criterion (AIC) for a given model. — compute_aic","text":"","code":"compute_aic(p, mse, num_bins, num_obs)"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Akaike Information Criterion (AIC) for a given model. — compute_aic","text":"p Number dimensions data set. mse Mean squared error (MSE) model. num_bins Total number bins without empty bins used model. num_obs Total number observations training test set.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_aic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Akaike Information Criterion (AIC) for a given model. — compute_aic","text":"AIC value specified model.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_aic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Akaike Information Criterion (AIC) for a given model. — compute_aic","text":"","code":"# Example usage of compute_aic function p <- 5 mse <- 1500 num_bins <- 10 num_obs <- 100 aic_value <- compute_aic(p, mse, num_bins, num_obs) cat(\"AIC Value:\", aic_value, \"\\n\") #> AIC Value: 3756.61"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_mean_density_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mean density of hexagonal bins — compute_mean_density_hex","title":"Compute mean density of hexagonal bins — compute_mean_density_hex","text":"function calculates mean density hexagonal bins based neighboring bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_mean_density_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mean density of hexagonal bins — compute_mean_density_hex","text":"","code":"compute_mean_density_hex(model_2d, b1 = 30)"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_mean_density_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mean density of hexagonal bins — compute_mean_density_hex","text":"model_2d tibble contains information hexagonal bin centroids, including hexagon ID standardised counts (w_h). b1 number bins along x-axis hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_mean_density_hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mean density of hexagonal bins — compute_mean_density_hex","text":"tibble contains hexagonal IDs mean density hexagonal bin based neighboring bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_mean_density_hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute mean density of hexagonal bins — compute_mean_density_hex","text":"","code":"compute_mean_density_hex(model_2d = scurve_model_obj$model_2d, b1 = 30) #> # A tibble: 137 × 2 #>    hb_id mean_density #>    <int>        <dbl> #>  1    34      0.00833 #>  2    35      0.00725 #>  3    36      0.00975 #>  4    37      0.0065  #>  5    38      0.009   #>  6    41      0.009   #>  7    42      0.00467 #>  8    49      0.008   #>  9    50      0.007   #> 10    51      0.009   #> # ℹ 127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_std_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standardise counts in hexagons — compute_std_counts","title":"Compute standardise counts in hexagons — compute_std_counts","text":"function computes standardize number points within hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_std_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standardise counts in hexagons — compute_std_counts","text":"","code":"compute_std_counts(scaled_nldr_hexid)"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_std_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standardise counts in hexagons — compute_std_counts","text":"scaled_nldr_hexid tibble contains scaled embedding hexagonal bin IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_std_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standardise counts in hexagons — compute_std_counts","text":"tibble contains hexagon IDs (h), bin counts (n_h), standardize counts (w_h).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_std_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute standardise counts in hexagons — compute_std_counts","text":"","code":"umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id compute_std_counts(scaled_nldr_hexid = umap_with_hb_id) #> # A tibble: 137 × 3 #>        h   n_h   w_h #>    <int> <int> <dbl> #>  1    34     1 0.001 #>  2    35    10 0.01  #>  3    36     8 0.008 #>  4    37     8 0.008 #>  5    38     2 0.002 #>  6    41     2 0.002 #>  7    42    12 0.012 #>  8    49    11 0.011 #>  9    50     9 0.009 #> 10    51     4 0.004 #> # ℹ 127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weights for Hexagonal Binning — compute_weights","title":"Compute Weights for Hexagonal Binning — compute_weights","text":"function computes weights hexagonal binning based average values bin distances averages.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weights for Hexagonal Binning — compute_weights","text":"","code":"compute_weights(nldr_df_with_hex_id)"},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weights for Hexagonal Binning — compute_weights","text":"nldr_df_with_hex_id data frame 2D embeddings hexagonal bin IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Weights for Hexagonal Binning — compute_weights","text":"data frame weights calculated hexagonal bin.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/compute_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Weights for Hexagonal Binning — compute_weights","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. hex_bin_obj <- generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. UMAP_data_with_hb_id <- as.data.frame(do.call(cbind, hex_bin_obj$nldr_data_with_hex_id)) compute_weights(nldr_df_with_hex_id = UMAP_data_with_hb_id) #> $hb_id #>   [1]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #>  [26] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #>  [51] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #>  [76]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [101] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [126] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [151]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [176] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [201] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [226]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [251] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [276] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [301]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [326] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [351] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [376]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [401] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [426] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [451]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [476] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [501] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [526]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [551] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [576] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [601]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [626] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [651] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #> [676]  2  2  2  2  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7 12 12 12 13 13 #> [701] 13 13 13 13 18 18 18 18 18 18 18 18 18 18 18 18 24 24 24 24 24 24 24 24 28 #> [726] 28 28 28 28 29 29 29 29 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 #>  #> $UMAP1 #>   [1] 0.16719939 0.16150976 0.13459287 0.16301062 0.08044271 0.07223295 #>   [7] 0.09405763 0.08900367 0.03170275 0.10117880 0.00000000 0.04209521 #>  [13] 0.05349536 0.28575187 0.21053454 0.29256853 0.23125328 0.33548077 #>  [19] 0.25450458 0.29499615 0.26292782 0.05182936 0.13518498 0.60311661 #>  [25] 0.46806684 0.38392618 0.39315580 0.50932690 0.49582819 0.73857864 #>  [31] 0.73364820 0.62693057 0.80998347 0.64241759 0.64916340 0.71326033 #>  [37] 0.57541142 0.62412077 0.64842247 0.68677026 0.77828853 0.83992020 #>  [43] 0.79296306 0.76738169 0.82638316 0.84482412 0.79995094 0.72681720 #>  [49] 0.72192354 0.80783543 0.80668446 0.69339205 0.76831122 0.68029522 #>  [55] 0.99318862 0.88588122 0.92537063 0.91053035 0.83820653 0.90342138 #>  [61] 0.96228699 0.77510396 0.76427076 0.96450414 0.71265285 0.82904448 #>  [67] 0.81275032 0.94245034 0.75504949 0.69843891 0.96227596 0.74175661 #>  [73] 0.94650462 1.00000000 0.80964667 0.16719939 0.16150976 0.13459287 #>  [79] 0.16301062 0.08044271 0.07223295 0.09405763 0.08900367 0.03170275 #>  [85] 0.10117880 0.00000000 0.04209521 0.05349536 0.28575187 0.21053454 #>  [91] 0.29256853 0.23125328 0.33548077 0.25450458 0.29499615 0.26292782 #>  [97] 0.05182936 0.13518498 0.60311661 0.46806684 0.38392618 0.39315580 #> [103] 0.50932690 0.49582819 0.73857864 0.73364820 0.62693057 0.80998347 #> [109] 0.64241759 0.64916340 0.71326033 0.57541142 0.62412077 0.64842247 #> [115] 0.68677026 0.77828853 0.83992020 0.79296306 0.76738169 0.82638316 #> [121] 0.84482412 0.79995094 0.72681720 0.72192354 0.80783543 0.80668446 #> [127] 0.69339205 0.76831122 0.68029522 0.99318862 0.88588122 0.92537063 #> [133] 0.91053035 0.83820653 0.90342138 0.96228699 0.77510396 0.76427076 #> [139] 0.96450414 0.71265285 0.82904448 0.81275032 0.94245034 0.75504949 #> [145] 0.69843891 0.96227596 0.74175661 0.94650462 1.00000000 0.80964667 #> [151] 0.16719939 0.16150976 0.13459287 0.16301062 0.08044271 0.07223295 #> [157] 0.09405763 0.08900367 0.03170275 0.10117880 0.00000000 0.04209521 #> [163] 0.05349536 0.28575187 0.21053454 0.29256853 0.23125328 0.33548077 #> [169] 0.25450458 0.29499615 0.26292782 0.05182936 0.13518498 0.60311661 #> [175] 0.46806684 0.38392618 0.39315580 0.50932690 0.49582819 0.73857864 #> [181] 0.73364820 0.62693057 0.80998347 0.64241759 0.64916340 0.71326033 #> [187] 0.57541142 0.62412077 0.64842247 0.68677026 0.77828853 0.83992020 #> [193] 0.79296306 0.76738169 0.82638316 0.84482412 0.79995094 0.72681720 #> [199] 0.72192354 0.80783543 0.80668446 0.69339205 0.76831122 0.68029522 #> [205] 0.99318862 0.88588122 0.92537063 0.91053035 0.83820653 0.90342138 #> [211] 0.96228699 0.77510396 0.76427076 0.96450414 0.71265285 0.82904448 #> [217] 0.81275032 0.94245034 0.75504949 0.69843891 0.96227596 0.74175661 #> [223] 0.94650462 1.00000000 0.80964667 0.16719939 0.16150976 0.13459287 #> [229] 0.16301062 0.08044271 0.07223295 0.09405763 0.08900367 0.03170275 #> [235] 0.10117880 0.00000000 0.04209521 0.05349536 0.28575187 0.21053454 #> [241] 0.29256853 0.23125328 0.33548077 0.25450458 0.29499615 0.26292782 #> [247] 0.05182936 0.13518498 0.60311661 0.46806684 0.38392618 0.39315580 #> [253] 0.50932690 0.49582819 0.73857864 0.73364820 0.62693057 0.80998347 #> [259] 0.64241759 0.64916340 0.71326033 0.57541142 0.62412077 0.64842247 #> [265] 0.68677026 0.77828853 0.83992020 0.79296306 0.76738169 0.82638316 #> [271] 0.84482412 0.79995094 0.72681720 0.72192354 0.80783543 0.80668446 #> [277] 0.69339205 0.76831122 0.68029522 0.99318862 0.88588122 0.92537063 #> [283] 0.91053035 0.83820653 0.90342138 0.96228699 0.77510396 0.76427076 #> [289] 0.96450414 0.71265285 0.82904448 0.81275032 0.94245034 0.75504949 #> [295] 0.69843891 0.96227596 0.74175661 0.94650462 1.00000000 0.80964667 #> [301] 0.16719939 0.16150976 0.13459287 0.16301062 0.08044271 0.07223295 #> [307] 0.09405763 0.08900367 0.03170275 0.10117880 0.00000000 0.04209521 #> [313] 0.05349536 0.28575187 0.21053454 0.29256853 0.23125328 0.33548077 #> [319] 0.25450458 0.29499615 0.26292782 0.05182936 0.13518498 0.60311661 #> [325] 0.46806684 0.38392618 0.39315580 0.50932690 0.49582819 0.73857864 #> [331] 0.73364820 0.62693057 0.80998347 0.64241759 0.64916340 0.71326033 #> [337] 0.57541142 0.62412077 0.64842247 0.68677026 0.77828853 0.83992020 #> [343] 0.79296306 0.76738169 0.82638316 0.84482412 0.79995094 0.72681720 #> [349] 0.72192354 0.80783543 0.80668446 0.69339205 0.76831122 0.68029522 #> [355] 0.99318862 0.88588122 0.92537063 0.91053035 0.83820653 0.90342138 #> [361] 0.96228699 0.77510396 0.76427076 0.96450414 0.71265285 0.82904448 #> [367] 0.81275032 0.94245034 0.75504949 0.69843891 0.96227596 0.74175661 #> [373] 0.94650462 1.00000000 0.80964667 0.16719939 0.16150976 0.13459287 #> [379] 0.16301062 0.08044271 0.07223295 0.09405763 0.08900367 0.03170275 #> [385] 0.10117880 0.00000000 0.04209521 0.05349536 0.28575187 0.21053454 #> [391] 0.29256853 0.23125328 0.33548077 0.25450458 0.29499615 0.26292782 #> [397] 0.05182936 0.13518498 0.60311661 0.46806684 0.38392618 0.39315580 #> [403] 0.50932690 0.49582819 0.73857864 0.73364820 0.62693057 0.80998347 #> [409] 0.64241759 0.64916340 0.71326033 0.57541142 0.62412077 0.64842247 #> [415] 0.68677026 0.77828853 0.83992020 0.79296306 0.76738169 0.82638316 #> [421] 0.84482412 0.79995094 0.72681720 0.72192354 0.80783543 0.80668446 #> [427] 0.69339205 0.76831122 0.68029522 0.99318862 0.88588122 0.92537063 #> [433] 0.91053035 0.83820653 0.90342138 0.96228699 0.77510396 0.76427076 #> [439] 0.96450414 0.71265285 0.82904448 0.81275032 0.94245034 0.75504949 #> [445] 0.69843891 0.96227596 0.74175661 0.94650462 1.00000000 0.80964667 #> [451] 0.16719939 0.16150976 0.13459287 0.16301062 0.08044271 0.07223295 #> [457] 0.09405763 0.08900367 0.03170275 0.10117880 0.00000000 0.04209521 #> [463] 0.05349536 0.28575187 0.21053454 0.29256853 0.23125328 0.33548077 #> [469] 0.25450458 0.29499615 0.26292782 0.05182936 0.13518498 0.60311661 #> [475] 0.46806684 0.38392618 0.39315580 0.50932690 0.49582819 0.73857864 #> [481] 0.73364820 0.62693057 0.80998347 0.64241759 0.64916340 0.71326033 #> [487] 0.57541142 0.62412077 0.64842247 0.68677026 0.77828853 0.83992020 #> [493] 0.79296306 0.76738169 0.82638316 0.84482412 0.79995094 0.72681720 #> [499] 0.72192354 0.80783543 0.80668446 0.69339205 0.76831122 0.68029522 #> [505] 0.99318862 0.88588122 0.92537063 0.91053035 0.83820653 0.90342138 #> [511] 0.96228699 0.77510396 0.76427076 0.96450414 0.71265285 0.82904448 #> [517] 0.81275032 0.94245034 0.75504949 0.69843891 0.96227596 0.74175661 #> [523] 0.94650462 1.00000000 0.80964667 0.16719939 0.16150976 0.13459287 #> [529] 0.16301062 0.08044271 0.07223295 0.09405763 0.08900367 0.03170275 #> [535] 0.10117880 0.00000000 0.04209521 0.05349536 0.28575187 0.21053454 #> [541] 0.29256853 0.23125328 0.33548077 0.25450458 0.29499615 0.26292782 #> [547] 0.05182936 0.13518498 0.60311661 0.46806684 0.38392618 0.39315580 #> [553] 0.50932690 0.49582819 0.73857864 0.73364820 0.62693057 0.80998347 #> [559] 0.64241759 0.64916340 0.71326033 0.57541142 0.62412077 0.64842247 #> [565] 0.68677026 0.77828853 0.83992020 0.79296306 0.76738169 0.82638316 #> [571] 0.84482412 0.79995094 0.72681720 0.72192354 0.80783543 0.80668446 #> [577] 0.69339205 0.76831122 0.68029522 0.99318862 0.88588122 0.92537063 #> [583] 0.91053035 0.83820653 0.90342138 0.96228699 0.77510396 0.76427076 #> [589] 0.96450414 0.71265285 0.82904448 0.81275032 0.94245034 0.75504949 #> [595] 0.69843891 0.96227596 0.74175661 0.94650462 1.00000000 0.80964667 #> [601] 0.16719939 0.16150976 0.13459287 0.16301062 0.08044271 0.07223295 #> [607] 0.09405763 0.08900367 0.03170275 0.10117880 0.00000000 0.04209521 #> [613] 0.05349536 0.28575187 0.21053454 0.29256853 0.23125328 0.33548077 #> [619] 0.25450458 0.29499615 0.26292782 0.05182936 0.13518498 0.60311661 #> [625] 0.46806684 0.38392618 0.39315580 0.50932690 0.49582819 0.73857864 #> [631] 0.73364820 0.62693057 0.80998347 0.64241759 0.64916340 0.71326033 #> [637] 0.57541142 0.62412077 0.64842247 0.68677026 0.77828853 0.83992020 #> [643] 0.79296306 0.76738169 0.82638316 0.84482412 0.79995094 0.72681720 #> [649] 0.72192354 0.80783543 0.80668446 0.69339205 0.76831122 0.68029522 #> [655] 0.99318862 0.88588122 0.92537063 0.91053035 0.83820653 0.90342138 #> [661] 0.96228699 0.77510396 0.76427076 0.96450414 0.71265285 0.82904448 #> [667] 0.81275032 0.94245034 0.75504949 0.69843891 0.96227596 0.74175661 #> [673] 0.94650462 1.00000000 0.80964667 0.16719939 0.16150976 0.13459287 #> [679] 0.16301062 0.08044271 0.07223295 0.09405763 0.08900367 0.03170275 #> [685] 0.10117880 0.00000000 0.04209521 0.05349536 0.28575187 0.21053454 #> [691] 0.29256853 0.23125328 0.33548077 0.25450458 0.29499615 0.26292782 #> [697] 0.05182936 0.13518498 0.60311661 0.46806684 0.38392618 0.39315580 #> [703] 0.50932690 0.49582819 0.73857864 0.73364820 0.62693057 0.80998347 #> [709] 0.64241759 0.64916340 0.71326033 0.57541142 0.62412077 0.64842247 #> [715] 0.68677026 0.77828853 0.83992020 0.79296306 0.76738169 0.82638316 #> [721] 0.84482412 0.79995094 0.72681720 0.72192354 0.80783543 0.80668446 #> [727] 0.69339205 0.76831122 0.68029522 0.99318862 0.88588122 0.92537063 #> [733] 0.91053035 0.83820653 0.90342138 0.96228699 0.77510396 0.76427076 #> [739] 0.96450414 0.71265285 0.82904448 0.81275032 0.94245034 0.75504949 #> [745] 0.69843891 0.96227596 0.74175661 0.94650462 1.00000000 0.80964667 #>  #> $UMAP2 #>   [1] 0.037066861 0.009905107 0.000000000 0.030266486 0.274498327 0.218331864 #>   [7] 0.058760856 0.252258947 0.303630086 0.050909321 0.271778584 0.257916294 #>  [13] 0.187982579 0.202379969 0.151933039 0.138015108 0.061042472 0.278688714 #>  [19] 0.063074584 0.117297635 0.341734583 0.320865388 0.335559538 0.597381477 #>  [25] 0.482713207 0.390190144 0.328235991 0.617404710 0.604985028 0.859778569 #>  [31] 0.833935370 0.618409921 0.868291303 0.631646064 0.593427000 0.797282390 #>  [37] 0.708486670 0.712391079 0.661926514 0.778563498 0.839937252 0.929412446 #>  [43] 1.100876246 1.018811832 1.011632238 0.983163036 0.964486583 0.931757885 #>  [49] 0.952956061 1.374772146 1.381019256 1.448210796 1.497157149 1.508729997 #>  [55] 1.521102615 1.408512652 1.455380663 1.445460921 1.720961652 1.600664528 #>  [61] 1.546732900 1.730112607 1.552630670 1.665355817 1.539719959 1.722765733 #>  [67] 1.732050808 1.680924200 1.670893354 1.621642749 1.546125959 1.681926517 #>  [73] 1.524113512 1.625538768 1.529334517 0.037066861 0.009905107 0.000000000 #>  [79] 0.030266486 0.274498327 0.218331864 0.058760856 0.252258947 0.303630086 #>  [85] 0.050909321 0.271778584 0.257916294 0.187982579 0.202379969 0.151933039 #>  [91] 0.138015108 0.061042472 0.278688714 0.063074584 0.117297635 0.341734583 #>  [97] 0.320865388 0.335559538 0.597381477 0.482713207 0.390190144 0.328235991 #> [103] 0.617404710 0.604985028 0.859778569 0.833935370 0.618409921 0.868291303 #> [109] 0.631646064 0.593427000 0.797282390 0.708486670 0.712391079 0.661926514 #> [115] 0.778563498 0.839937252 0.929412446 1.100876246 1.018811832 1.011632238 #> [121] 0.983163036 0.964486583 0.931757885 0.952956061 1.374772146 1.381019256 #> [127] 1.448210796 1.497157149 1.508729997 1.521102615 1.408512652 1.455380663 #> [133] 1.445460921 1.720961652 1.600664528 1.546732900 1.730112607 1.552630670 #> [139] 1.665355817 1.539719959 1.722765733 1.732050808 1.680924200 1.670893354 #> [145] 1.621642749 1.546125959 1.681926517 1.524113512 1.625538768 1.529334517 #> [151] 0.037066861 0.009905107 0.000000000 0.030266486 0.274498327 0.218331864 #> [157] 0.058760856 0.252258947 0.303630086 0.050909321 0.271778584 0.257916294 #> [163] 0.187982579 0.202379969 0.151933039 0.138015108 0.061042472 0.278688714 #> [169] 0.063074584 0.117297635 0.341734583 0.320865388 0.335559538 0.597381477 #> [175] 0.482713207 0.390190144 0.328235991 0.617404710 0.604985028 0.859778569 #> [181] 0.833935370 0.618409921 0.868291303 0.631646064 0.593427000 0.797282390 #> [187] 0.708486670 0.712391079 0.661926514 0.778563498 0.839937252 0.929412446 #> [193] 1.100876246 1.018811832 1.011632238 0.983163036 0.964486583 0.931757885 #> [199] 0.952956061 1.374772146 1.381019256 1.448210796 1.497157149 1.508729997 #> [205] 1.521102615 1.408512652 1.455380663 1.445460921 1.720961652 1.600664528 #> [211] 1.546732900 1.730112607 1.552630670 1.665355817 1.539719959 1.722765733 #> [217] 1.732050808 1.680924200 1.670893354 1.621642749 1.546125959 1.681926517 #> [223] 1.524113512 1.625538768 1.529334517 0.037066861 0.009905107 0.000000000 #> [229] 0.030266486 0.274498327 0.218331864 0.058760856 0.252258947 0.303630086 #> [235] 0.050909321 0.271778584 0.257916294 0.187982579 0.202379969 0.151933039 #> [241] 0.138015108 0.061042472 0.278688714 0.063074584 0.117297635 0.341734583 #> [247] 0.320865388 0.335559538 0.597381477 0.482713207 0.390190144 0.328235991 #> [253] 0.617404710 0.604985028 0.859778569 0.833935370 0.618409921 0.868291303 #> [259] 0.631646064 0.593427000 0.797282390 0.708486670 0.712391079 0.661926514 #> [265] 0.778563498 0.839937252 0.929412446 1.100876246 1.018811832 1.011632238 #> [271] 0.983163036 0.964486583 0.931757885 0.952956061 1.374772146 1.381019256 #> [277] 1.448210796 1.497157149 1.508729997 1.521102615 1.408512652 1.455380663 #> [283] 1.445460921 1.720961652 1.600664528 1.546732900 1.730112607 1.552630670 #> [289] 1.665355817 1.539719959 1.722765733 1.732050808 1.680924200 1.670893354 #> [295] 1.621642749 1.546125959 1.681926517 1.524113512 1.625538768 1.529334517 #> [301] 0.037066861 0.009905107 0.000000000 0.030266486 0.274498327 0.218331864 #> [307] 0.058760856 0.252258947 0.303630086 0.050909321 0.271778584 0.257916294 #> [313] 0.187982579 0.202379969 0.151933039 0.138015108 0.061042472 0.278688714 #> [319] 0.063074584 0.117297635 0.341734583 0.320865388 0.335559538 0.597381477 #> [325] 0.482713207 0.390190144 0.328235991 0.617404710 0.604985028 0.859778569 #> [331] 0.833935370 0.618409921 0.868291303 0.631646064 0.593427000 0.797282390 #> [337] 0.708486670 0.712391079 0.661926514 0.778563498 0.839937252 0.929412446 #> [343] 1.100876246 1.018811832 1.011632238 0.983163036 0.964486583 0.931757885 #> [349] 0.952956061 1.374772146 1.381019256 1.448210796 1.497157149 1.508729997 #> [355] 1.521102615 1.408512652 1.455380663 1.445460921 1.720961652 1.600664528 #> [361] 1.546732900 1.730112607 1.552630670 1.665355817 1.539719959 1.722765733 #> [367] 1.732050808 1.680924200 1.670893354 1.621642749 1.546125959 1.681926517 #> [373] 1.524113512 1.625538768 1.529334517 0.037066861 0.009905107 0.000000000 #> [379] 0.030266486 0.274498327 0.218331864 0.058760856 0.252258947 0.303630086 #> [385] 0.050909321 0.271778584 0.257916294 0.187982579 0.202379969 0.151933039 #> [391] 0.138015108 0.061042472 0.278688714 0.063074584 0.117297635 0.341734583 #> [397] 0.320865388 0.335559538 0.597381477 0.482713207 0.390190144 0.328235991 #> [403] 0.617404710 0.604985028 0.859778569 0.833935370 0.618409921 0.868291303 #> [409] 0.631646064 0.593427000 0.797282390 0.708486670 0.712391079 0.661926514 #> [415] 0.778563498 0.839937252 0.929412446 1.100876246 1.018811832 1.011632238 #> [421] 0.983163036 0.964486583 0.931757885 0.952956061 1.374772146 1.381019256 #> [427] 1.448210796 1.497157149 1.508729997 1.521102615 1.408512652 1.455380663 #> [433] 1.445460921 1.720961652 1.600664528 1.546732900 1.730112607 1.552630670 #> [439] 1.665355817 1.539719959 1.722765733 1.732050808 1.680924200 1.670893354 #> [445] 1.621642749 1.546125959 1.681926517 1.524113512 1.625538768 1.529334517 #> [451] 0.037066861 0.009905107 0.000000000 0.030266486 0.274498327 0.218331864 #> [457] 0.058760856 0.252258947 0.303630086 0.050909321 0.271778584 0.257916294 #> [463] 0.187982579 0.202379969 0.151933039 0.138015108 0.061042472 0.278688714 #> [469] 0.063074584 0.117297635 0.341734583 0.320865388 0.335559538 0.597381477 #> [475] 0.482713207 0.390190144 0.328235991 0.617404710 0.604985028 0.859778569 #> [481] 0.833935370 0.618409921 0.868291303 0.631646064 0.593427000 0.797282390 #> [487] 0.708486670 0.712391079 0.661926514 0.778563498 0.839937252 0.929412446 #> [493] 1.100876246 1.018811832 1.011632238 0.983163036 0.964486583 0.931757885 #> [499] 0.952956061 1.374772146 1.381019256 1.448210796 1.497157149 1.508729997 #> [505] 1.521102615 1.408512652 1.455380663 1.445460921 1.720961652 1.600664528 #> [511] 1.546732900 1.730112607 1.552630670 1.665355817 1.539719959 1.722765733 #> [517] 1.732050808 1.680924200 1.670893354 1.621642749 1.546125959 1.681926517 #> [523] 1.524113512 1.625538768 1.529334517 0.037066861 0.009905107 0.000000000 #> [529] 0.030266486 0.274498327 0.218331864 0.058760856 0.252258947 0.303630086 #> [535] 0.050909321 0.271778584 0.257916294 0.187982579 0.202379969 0.151933039 #> [541] 0.138015108 0.061042472 0.278688714 0.063074584 0.117297635 0.341734583 #> [547] 0.320865388 0.335559538 0.597381477 0.482713207 0.390190144 0.328235991 #> [553] 0.617404710 0.604985028 0.859778569 0.833935370 0.618409921 0.868291303 #> [559] 0.631646064 0.593427000 0.797282390 0.708486670 0.712391079 0.661926514 #> [565] 0.778563498 0.839937252 0.929412446 1.100876246 1.018811832 1.011632238 #> [571] 0.983163036 0.964486583 0.931757885 0.952956061 1.374772146 1.381019256 #> [577] 1.448210796 1.497157149 1.508729997 1.521102615 1.408512652 1.455380663 #> [583] 1.445460921 1.720961652 1.600664528 1.546732900 1.730112607 1.552630670 #> [589] 1.665355817 1.539719959 1.722765733 1.732050808 1.680924200 1.670893354 #> [595] 1.621642749 1.546125959 1.681926517 1.524113512 1.625538768 1.529334517 #> [601] 0.037066861 0.009905107 0.000000000 0.030266486 0.274498327 0.218331864 #> [607] 0.058760856 0.252258947 0.303630086 0.050909321 0.271778584 0.257916294 #> [613] 0.187982579 0.202379969 0.151933039 0.138015108 0.061042472 0.278688714 #> [619] 0.063074584 0.117297635 0.341734583 0.320865388 0.335559538 0.597381477 #> [625] 0.482713207 0.390190144 0.328235991 0.617404710 0.604985028 0.859778569 #> [631] 0.833935370 0.618409921 0.868291303 0.631646064 0.593427000 0.797282390 #> [637] 0.708486670 0.712391079 0.661926514 0.778563498 0.839937252 0.929412446 #> [643] 1.100876246 1.018811832 1.011632238 0.983163036 0.964486583 0.931757885 #> [649] 0.952956061 1.374772146 1.381019256 1.448210796 1.497157149 1.508729997 #> [655] 1.521102615 1.408512652 1.455380663 1.445460921 1.720961652 1.600664528 #> [661] 1.546732900 1.730112607 1.552630670 1.665355817 1.539719959 1.722765733 #> [667] 1.732050808 1.680924200 1.670893354 1.621642749 1.546125959 1.681926517 #> [673] 1.524113512 1.625538768 1.529334517 0.037066861 0.009905107 0.000000000 #> [679] 0.030266486 0.274498327 0.218331864 0.058760856 0.252258947 0.303630086 #> [685] 0.050909321 0.271778584 0.257916294 0.187982579 0.202379969 0.151933039 #> [691] 0.138015108 0.061042472 0.278688714 0.063074584 0.117297635 0.341734583 #> [697] 0.320865388 0.335559538 0.597381477 0.482713207 0.390190144 0.328235991 #> [703] 0.617404710 0.604985028 0.859778569 0.833935370 0.618409921 0.868291303 #> [709] 0.631646064 0.593427000 0.797282390 0.708486670 0.712391079 0.661926514 #> [715] 0.778563498 0.839937252 0.929412446 1.100876246 1.018811832 1.011632238 #> [721] 0.983163036 0.964486583 0.931757885 0.952956061 1.374772146 1.381019256 #> [727] 1.448210796 1.497157149 1.508729997 1.521102615 1.408512652 1.455380663 #> [733] 1.445460921 1.720961652 1.600664528 1.546732900 1.730112607 1.552630670 #> [739] 1.665355817 1.539719959 1.722765733 1.732050808 1.680924200 1.670893354 #> [745] 1.621642749 1.546125959 1.681926517 1.524113512 1.625538768 1.529334517 #>  #> $weights #>   [1] 14.146010 16.496449 12.616524 15.947565  8.446605 15.689663  4.927510 #>   [8]  9.890944  6.662428  4.713069  7.188642  9.654327 13.804622  9.146965 #>  [15]  8.924426 13.994068  6.990013  5.043886  7.493630 11.679267  6.123463 #>  [22]  6.717512 15.369061  4.798894 13.872413  5.109337  4.104072  5.923615 #>  [29]  6.514581  5.582020  6.504645  5.353117  4.400122  5.934661  4.926648 #>  [36]  8.943093  6.054813  8.458441  7.231610 11.550482  5.409763  7.941222 #>  [43]  6.087276 11.193041 10.624186  9.531650 13.463551  7.479202  7.938331 #>  [50]  7.255812  7.555217  9.238210  9.281528  6.781595  7.119173  8.682272 #>  [57] 18.503201 13.909167  7.013383  8.922137  5.245151  5.720724  6.121093 #>  [64]  5.816029  4.712344  6.859793  6.287659  6.341032  6.573830  5.003089 #>  [71]  5.235635  5.922047  5.161816  4.952987  6.379268 14.146010 16.496449 #>  [78] 12.616524 15.947565  8.446605 15.689663  4.927510  9.890944  6.662428 #>  [85]  4.713069  7.188642  9.654327 13.804622  9.146965  8.924426 13.994068 #>  [92]  6.990013  5.043886  7.493630 11.679267  6.123463  6.717512 15.369061 #>  [99]  4.798894 13.872413  5.109337  4.104072  5.923615  6.514581  5.582020 #> [106]  6.504645  5.353117  4.400122  5.934661  4.926648  8.943093  6.054813 #> [113]  8.458441  7.231610 11.550482  5.409763  7.941222  6.087276 11.193041 #> [120] 10.624186  9.531650 13.463551  7.479202  7.938331  7.255812  7.555217 #> [127]  9.238210  9.281528  6.781595  7.119173  8.682272 18.503201 13.909167 #> [134]  7.013383  8.922137  5.245151  5.720724  6.121093  5.816029  4.712344 #> [141]  6.859793  6.287659  6.341032  6.573830  5.003089  5.235635  5.922047 #> [148]  5.161816  4.952987  6.379268 14.146010 16.496449 12.616524 15.947565 #> [155]  8.446605 15.689663  4.927510  9.890944  6.662428  4.713069  7.188642 #> [162]  9.654327 13.804622  9.146965  8.924426 13.994068  6.990013  5.043886 #> [169]  7.493630 11.679267  6.123463  6.717512 15.369061  4.798894 13.872413 #> [176]  5.109337  4.104072  5.923615  6.514581  5.582020  6.504645  5.353117 #> [183]  4.400122  5.934661  4.926648  8.943093  6.054813  8.458441  7.231610 #> [190] 11.550482  5.409763  7.941222  6.087276 11.193041 10.624186  9.531650 #> [197] 13.463551  7.479202  7.938331  7.255812  7.555217  9.238210  9.281528 #> [204]  6.781595  7.119173  8.682272 18.503201 13.909167  7.013383  8.922137 #> [211]  5.245151  5.720724  6.121093  5.816029  4.712344  6.859793  6.287659 #> [218]  6.341032  6.573830  5.003089  5.235635  5.922047  5.161816  4.952987 #> [225]  6.379268 14.146010 16.496449 12.616524 15.947565  8.446605 15.689663 #> [232]  4.927510  9.890944  6.662428  4.713069  7.188642  9.654327 13.804622 #> [239]  9.146965  8.924426 13.994068  6.990013  5.043886  7.493630 11.679267 #> [246]  6.123463  6.717512 15.369061  4.798894 13.872413  5.109337  4.104072 #> [253]  5.923615  6.514581  5.582020  6.504645  5.353117  4.400122  5.934661 #> [260]  4.926648  8.943093  6.054813  8.458441  7.231610 11.550482  5.409763 #> [267]  7.941222  6.087276 11.193041 10.624186  9.531650 13.463551  7.479202 #> [274]  7.938331  7.255812  7.555217  9.238210  9.281528  6.781595  7.119173 #> [281]  8.682272 18.503201 13.909167  7.013383  8.922137  5.245151  5.720724 #> [288]  6.121093  5.816029  4.712344  6.859793  6.287659  6.341032  6.573830 #> [295]  5.003089  5.235635  5.922047  5.161816  4.952987  6.379268 14.146010 #> [302] 16.496449 12.616524 15.947565  8.446605 15.689663  4.927510  9.890944 #> [309]  6.662428  4.713069  7.188642  9.654327 13.804622  9.146965  8.924426 #> [316] 13.994068  6.990013  5.043886  7.493630 11.679267  6.123463  6.717512 #> [323] 15.369061  4.798894 13.872413  5.109337  4.104072  5.923615  6.514581 #> [330]  5.582020  6.504645  5.353117  4.400122  5.934661  4.926648  8.943093 #> [337]  6.054813  8.458441  7.231610 11.550482  5.409763  7.941222  6.087276 #> [344] 11.193041 10.624186  9.531650 13.463551  7.479202  7.938331  7.255812 #> [351]  7.555217  9.238210  9.281528  6.781595  7.119173  8.682272 18.503201 #> [358] 13.909167  7.013383  8.922137  5.245151  5.720724  6.121093  5.816029 #> [365]  4.712344  6.859793  6.287659  6.341032  6.573830  5.003089  5.235635 #> [372]  5.922047  5.161816  4.952987  6.379268 14.146010 16.496449 12.616524 #> [379] 15.947565  8.446605 15.689663  4.927510  9.890944  6.662428  4.713069 #> [386]  7.188642  9.654327 13.804622  9.146965  8.924426 13.994068  6.990013 #> [393]  5.043886  7.493630 11.679267  6.123463  6.717512 15.369061  4.798894 #> [400] 13.872413  5.109337  4.104072  5.923615  6.514581  5.582020  6.504645 #> [407]  5.353117  4.400122  5.934661  4.926648  8.943093  6.054813  8.458441 #> [414]  7.231610 11.550482  5.409763  7.941222  6.087276 11.193041 10.624186 #> [421]  9.531650 13.463551  7.479202  7.938331  7.255812  7.555217  9.238210 #> [428]  9.281528  6.781595  7.119173  8.682272 18.503201 13.909167  7.013383 #> [435]  8.922137  5.245151  5.720724  6.121093  5.816029  4.712344  6.859793 #> [442]  6.287659  6.341032  6.573830  5.003089  5.235635  5.922047  5.161816 #> [449]  4.952987  6.379268 14.146010 16.496449 12.616524 15.947565  8.446605 #> [456] 15.689663  4.927510  9.890944  6.662428  4.713069  7.188642  9.654327 #> [463] 13.804622  9.146965  8.924426 13.994068  6.990013  5.043886  7.493630 #> [470] 11.679267  6.123463  6.717512 15.369061  4.798894 13.872413  5.109337 #> [477]  4.104072  5.923615  6.514581  5.582020  6.504645  5.353117  4.400122 #> [484]  5.934661  4.926648  8.943093  6.054813  8.458441  7.231610 11.550482 #> [491]  5.409763  7.941222  6.087276 11.193041 10.624186  9.531650 13.463551 #> [498]  7.479202  7.938331  7.255812  7.555217  9.238210  9.281528  6.781595 #> [505]  7.119173  8.682272 18.503201 13.909167  7.013383  8.922137  5.245151 #> [512]  5.720724  6.121093  5.816029  4.712344  6.859793  6.287659  6.341032 #> [519]  6.573830  5.003089  5.235635  5.922047  5.161816  4.952987  6.379268 #> [526] 14.146010 16.496449 12.616524 15.947565  8.446605 15.689663  4.927510 #> [533]  9.890944  6.662428  4.713069  7.188642  9.654327 13.804622  9.146965 #> [540]  8.924426 13.994068  6.990013  5.043886  7.493630 11.679267  6.123463 #> [547]  6.717512 15.369061  4.798894 13.872413  5.109337  4.104072  5.923615 #> [554]  6.514581  5.582020  6.504645  5.353117  4.400122  5.934661  4.926648 #> [561]  8.943093  6.054813  8.458441  7.231610 11.550482  5.409763  7.941222 #> [568]  6.087276 11.193041 10.624186  9.531650 13.463551  7.479202  7.938331 #> [575]  7.255812  7.555217  9.238210  9.281528  6.781595  7.119173  8.682272 #> [582] 18.503201 13.909167  7.013383  8.922137  5.245151  5.720724  6.121093 #> [589]  5.816029  4.712344  6.859793  6.287659  6.341032  6.573830  5.003089 #> [596]  5.235635  5.922047  5.161816  4.952987  6.379268 14.146010 16.496449 #> [603] 12.616524 15.947565  8.446605 15.689663  4.927510  9.890944  6.662428 #> [610]  4.713069  7.188642  9.654327 13.804622  9.146965  8.924426 13.994068 #> [617]  6.990013  5.043886  7.493630 11.679267  6.123463  6.717512 15.369061 #> [624]  4.798894 13.872413  5.109337  4.104072  5.923615  6.514581  5.582020 #> [631]  6.504645  5.353117  4.400122  5.934661  4.926648  8.943093  6.054813 #> [638]  8.458441  7.231610 11.550482  5.409763  7.941222  6.087276 11.193041 #> [645] 10.624186  9.531650 13.463551  7.479202  7.938331  7.255812  7.555217 #> [652]  9.238210  9.281528  6.781595  7.119173  8.682272 18.503201 13.909167 #> [659]  7.013383  8.922137  5.245151  5.720724  6.121093  5.816029  4.712344 #> [666]  6.859793  6.287659  6.341032  6.573830  5.003089  5.235635  5.922047 #> [673]  5.161816  4.952987  6.379268 14.146010 16.496449 12.616524 15.947565 #> [680]  8.446605 15.689663  4.927510  9.890944  6.662428  4.713069  7.188642 #> [687]  9.654327 13.804622  9.146965  8.924426 13.994068  6.990013  5.043886 #> [694]  7.493630 11.679267  6.123463  6.717512 15.369061  4.798894 13.872413 #> [701]  5.109337  4.104072  5.923615  6.514581  5.582020  6.504645  5.353117 #> [708]  4.400122  5.934661  4.926648  8.943093  6.054813  8.458441  7.231610 #> [715] 11.550482  5.409763  7.941222  6.087276 11.193041 10.624186  9.531650 #> [722] 13.463551  7.479202  7.938331  7.255812  7.555217  9.238210  9.281528 #> [729]  6.781595  7.119173  8.682272 18.503201 13.909167  7.013383  8.922137 #> [736]  5.245151  5.720724  6.121093  5.816029  4.712344  6.859793  6.287659 #> [743]  6.341032  6.573830  5.003089  5.235635  5.922047  5.161816  4.952987 #> [750]  6.379268 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_coord_of_shifted_hex_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Coordinates of Shifted Hexagonal Grid — extract_coord_of_shifted_hex_grid","title":"Extract Coordinates of Shifted Hexagonal Grid — extract_coord_of_shifted_hex_grid","text":"function takes input data, includes hexbin ID, extracts coordinates hexagonal grid specified shift. resulting dataset includes hexagon centroids updated coordinates additional information counts within hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_coord_of_shifted_hex_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Coordinates of Shifted Hexagonal Grid — extract_coord_of_shifted_hex_grid","text":"","code":"extract_coord_of_shifted_hex_grid(   nldr_data_with_hb_id,   num_bins_x,   hex_full_count_df,   shift_x = NA,   shift_y = NA,   cell_area = 1 )"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_coord_of_shifted_hex_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Coordinates of Shifted Hexagonal Grid — extract_coord_of_shifted_hex_grid","text":"nldr_data_with_hb_id containing 2D embeddings hexbin ID. num_bins_x number bins along x-axis hexagonal grid. hex_full_count_df data frame information hexagonal grid cells. shift_x value centroids need shifted x-axis. shift negative direction along x-axis, set shift_x positive value (shift_x > 0); otherwise, shift positive direction, use negative value (shift_x < 0). provided, calculated half cell diameter hexagon. shift_y value centroids need shifted y-axis. shift negative direction along y-axis, set shift_y positive value (shift_y > 0); otherwise, shift positive direction, use negative value (shift_y < 0). provided, calculated half cell diameter hexagon. cell_area numeric value initialise area hexagon. default 1.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_coord_of_shifted_hex_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Coordinates of Shifted Hexagonal Grid — extract_coord_of_shifted_hex_grid","text":"data frame updated hexagon coordinates, hexagon IDs, counts within hexagon. list containing: hex_full_count_df_new Data frame updated hexagonal grid information, including counts standardized counts. nldr_df_with_new_hexID Data frame new hexagonal bin IDs assigned 2D embeddings.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_coord_of_shifted_hex_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Coordinates of Shifted Hexagonal Grid — extract_coord_of_shifted_hex_grid","text":"","code":"num_bins_x <- 4 shape_value <- 1.833091 hexbin_data_object <- extract_hexbin_centroids(nldr_df = s_curve_noise_umap, num_bins = num_bins_x, shape_val = shape_value) df_bin_centroids <- hexbin_data_object$hexdf_data hex_full_count_df <- generate_full_grid_info(df_bin_centroids) UMAP_data_with_hb_id <- s_curve_noise_umap |> dplyr::mutate(hb_id = hexbin_data_object$hb_data@cID) extract_coord_of_shifted_hex_grid(nldr_data_with_hb_id = UMAP_data_with_hb_id, num_bins_x = num_bins_x, hex_full_count_df) #> $hex_full_count_df_new #> # A tibble: 300 × 9 #>        x     y    id   c_x   c_y hexID polygon_id counts std_counts #>    <dbl> <dbl> <int> <dbl> <dbl> <int>      <int>  <int>      <dbl> #>  1 -3.09 -5.83     1 -3.81 -6.28     1          1     NA       NA   #>  2 -3.09 -6.73     1 -3.81 -6.28     1          1     NA       NA   #>  3 -3.81 -7.19     1 -3.81 -6.28     1          1     NA       NA   #>  4 -4.52 -6.73     1 -3.81 -6.28     1          1     NA       NA   #>  5 -4.52 -5.83     1 -3.81 -6.28     1          1     NA       NA   #>  6 -3.81 -5.37     1 -3.81 -6.28     1          1     NA       NA   #>  7 -1.66 -5.83     2 -2.38 -6.28     2          2      4        0.4 #>  8 -1.66 -6.73     2 -2.38 -6.28     2          2      4        0.4 #>  9 -2.38 -7.19     2 -2.38 -6.28     2          2      4        0.4 #> 10 -3.09 -6.73     2 -2.38 -6.28     2          2      4        0.4 #> # ℹ 290 more rows #>  #> $nldr_df_with_new_hexID #>         UMAP1        UMAP2 hb_id #> 1  -2.8097466 -3.910005483     6 #> 2   0.9587085 -0.002708352    29 #> 3   1.5389855  0.462163394    29 #> 4  -2.3129820 -5.495084256     2 #> 5  -1.7648455 -3.461140117    12 #> 6   1.5291731  5.746500231    49 #> 7   0.9304771 -0.175236058    29 #> 8   0.3194170 -1.614071523    18 #> 9   1.3675692  0.054122172    29 #> 10  1.9025902  4.943403570    45 #> 11  0.4080949 -1.525707795    18 #> 12 -2.9735853 -3.600461658    11 #> 13  2.2396519  4.583359135    45 #> 14 -2.8567553 -4.284969555     6 #> 15  0.4467211 -1.780856063    18 #> 16  1.3552697  3.435359060    39 #> 17 -2.4962950 -3.502364361    12 #> 18  1.3486792  3.477064406    39 #> 19  0.1830594 -1.754456198    18 #> 20 -2.3455605 -5.676414556     2 #> 21  0.8137371 -0.419929238    24 #> 22 -2.7317882 -5.350256398     6 #> 23 -2.7607269 -4.058474305     6 #> 24  1.1678508  5.807591478    49 #> 25  1.2701112  1.606845833    34 #> 26 -1.6341561 -4.391463483     7 #> 27 -0.5902292 -2.519974956    18 #> 28  0.0244208 -1.012724342    23 #> 29 -2.0648469 -4.728244274     6 #> 30  0.3033282 -0.986658735    23 #> 31  1.1236335  1.058988539    29 #> 32  1.1058204  4.622732304    44 #> 33  0.4424786 -1.323557255    18 #> 34 -3.0888293 -3.715523544    11 #> 35  2.2523472  5.375278885    50 #> 36 -2.6910127 -5.402672793     6 #> 37  0.8102587  4.536541146    44 #> 38  1.4767116  5.758544173    49 #> 39  1.3834120  5.820530794    49 #> 40 -3.2703577 -3.928162328    11 #> 41 -1.0720147 -3.137653586    13 #> 42  1.4614730  1.011057982    29 #> 43 -1.5951242 -4.821159579     7 #> 44  1.5670651  0.820999232    29 #> 45  1.3101234  0.696316310    29 #> 46  0.6999723  3.925631251    38 #> 47 -2.4996853 -5.742540480     2 #> 48 -3.0293226 -4.020706179     6 #> 49  2.1260682  5.479212510    50 #> 50 -2.9640458 -4.487579628     6 #> 51  0.6620562 -0.544895479    24 #> 52  1.1860855 -0.135167840    29 #> 53  1.0530198  5.412247159    49 #> 54 -1.9462124 -5.335024462     7 #> 55  1.1289559  4.252394278    44 #> 56  0.7288703  5.083452963    44 #> 57  0.8913631  0.477821407    29 #> 58  2.4165932  4.412252828    45 #> 59  2.2395888  4.579307233    45 #> 60 -1.0191663 -3.551255942    12 #> 61  0.9769054  5.485903919    49 #> 62  2.1492828  4.432353405    39 #> 63 -0.3539761 -1.620782255    18 #> 64  2.4555949  5.109462560    45 #> 65 -1.3494107 -3.882030702     7 #> 66 -1.8130766 -5.321458199     7 #> 67  1.8021561  3.660608734    39 #> 68  0.8633422  0.619339211    28 #> 69  0.6249804  4.329653948    38 #> 70  2.0282706  3.973496871    39 #> 71  1.3656407  4.467208531    44 #> 72 -0.4312690 -1.703695332    17 #> 73 -2.3369666 -5.540483168     2 #> 74 -1.5812238 -4.959468236     7 #> 75  1.9432959  3.907273242    39 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — extract_hexbin_centroids","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — extract_hexbin_centroids","text":"Extract hexagonal bin centroids coordinates corresponding standardise counts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — extract_hexbin_centroids","text":"","code":"extract_hexbin_centroids(centroids_data, counts_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — extract_hexbin_centroids","text":"centroids_data tibble contains hexagonal bin centroid coordinates hexagon IDs. counts_data tibble contains hexagon IDs standardise number points within hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — extract_hexbin_centroids","text":"tibble contains hexagon ID (h), centroid coordinates (c_x, c_y), bin counts (n_h), standardise counts (w_h).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — extract_hexbin_centroids","text":"","code":"all_centroids_df <- scurve_model_obj$hb_obj$centroids counts_data <- scurve_model_obj$hb_obj$std_cts extract_hexbin_centroids(centroids_data = all_centroids_df, counts_data = counts_data) #>       h        c_x         c_y n_h   w_h #> 1     1 -0.1000000 -0.11568014   0 0.000 #> 2     2 -0.0165892 -0.11568014   0 0.000 #> 3     3  0.0668216 -0.11568014   0 0.000 #> 4     4  0.1502324 -0.11568014   0 0.000 #> 5     5  0.2336432 -0.11568014   0 0.000 #> 6     6  0.3170540 -0.11568014   0 0.000 #> 7     7  0.4004648 -0.11568014   0 0.000 #> 8     8  0.4838756 -0.11568014   0 0.000 #> 9     9  0.5672864 -0.11568014   0 0.000 #> 10   10  0.6506972 -0.11568014   0 0.000 #> 11   11  0.7341080 -0.11568014   0 0.000 #> 12   12  0.8175188 -0.11568014   0 0.000 #> 13   13  0.9009296 -0.11568014   0 0.000 #> 14   14  0.9843404 -0.11568014   0 0.000 #> 15   15  1.0677512 -0.11568014   0 0.000 #> 16   16 -0.0582946 -0.04344427   0 0.000 #> 17   17  0.0251162 -0.04344427   0 0.000 #> 18   18  0.1085270 -0.04344427   0 0.000 #> 19   19  0.1919378 -0.04344427   0 0.000 #> 20   20  0.2753486 -0.04344427   0 0.000 #> 21   21  0.3587594 -0.04344427   0 0.000 #> 22   22  0.4421702 -0.04344427   0 0.000 #> 23   23  0.5255810 -0.04344427   0 0.000 #> 24   24  0.6089918 -0.04344427   0 0.000 #> 25   25  0.6924026 -0.04344427   0 0.000 #> 26   26  0.7758134 -0.04344427   0 0.000 #> 27   27  0.8592242 -0.04344427   0 0.000 #> 28   28  0.9426350 -0.04344427   0 0.000 #> 29   29  1.0260458 -0.04344427   0 0.000 #> 30   30  1.1094566 -0.04344427   0 0.000 #> 31   31 -0.1000000  0.02879160   0 0.000 #> 32   32 -0.0165892  0.02879160   0 0.000 #> 33   33  0.0668216  0.02879160   0 0.000 #> 34   34  0.1502324  0.02879160   1 0.001 #> 35   35  0.2336432  0.02879160  10 0.010 #> 36   36  0.3170540  0.02879160   8 0.008 #> 37   37  0.4004648  0.02879160   8 0.008 #> 38   38  0.4838756  0.02879160   2 0.002 #> 39   39  0.5672864  0.02879160   0 0.000 #> 40   40  0.6506972  0.02879160   0 0.000 #> 41   41  0.7341080  0.02879160   2 0.002 #> 42   42  0.8175188  0.02879160  12 0.012 #> 43   43  0.9009296  0.02879160   0 0.000 #> 44   44  0.9843404  0.02879160   0 0.000 #> 45   45  1.0677512  0.02879160   0 0.000 #> 46   46 -0.0582946  0.10102747   0 0.000 #> 47   47  0.0251162  0.10102747   0 0.000 #> 48   48  0.1085270  0.10102747   0 0.000 #> 49   49  0.1919378  0.10102747  11 0.011 #> 50   50  0.2753486  0.10102747   9 0.009 #> 51   51  0.3587594  0.10102747   4 0.004 #> 52   52  0.4421702  0.10102747  11 0.011 #> 53   53  0.5255810  0.10102747  12 0.012 #> 54   54  0.6089918  0.10102747   1 0.001 #> 55   55  0.6924026  0.10102747   6 0.006 #> 56   56  0.7758134  0.10102747  12 0.012 #> 57   57  0.8592242  0.10102747  12 0.012 #> 58   58  0.9426350  0.10102747   0 0.000 #> 59   59  1.0260458  0.10102747   0 0.000 #> 60   60  1.1094566  0.10102747   0 0.000 #> 61   61 -0.1000000  0.17326335   0 0.000 #> 62   62 -0.0165892  0.17326335   0 0.000 #> 63   63  0.0668216  0.17326335   0 0.000 #> 64   64  0.1502324  0.17326335   5 0.005 #> 65   65  0.2336432  0.17326335  10 0.010 #> 66   66  0.3170540  0.17326335  10 0.010 #> 67   67  0.4004648  0.17326335  11 0.011 #> 68   68  0.4838756  0.17326335   5 0.005 #> 69   69  0.5672864  0.17326335  14 0.014 #> 70   70  0.6506972  0.17326335  11 0.011 #> 71   71  0.7341080  0.17326335   9 0.009 #> 72   72  0.8175188  0.17326335   6 0.006 #> 73   73  0.9009296  0.17326335   6 0.006 #> 74   74  0.9843404  0.17326335   0 0.000 #> 75   75  1.0677512  0.17326335   0 0.000 #> 76   76 -0.0582946  0.24549922   0 0.000 #> 77   77  0.0251162  0.24549922   0 0.000 #> 78   78  0.1085270  0.24549922   1 0.001 #> 79   79  0.1919378  0.24549922  10 0.010 #> 80   80  0.2753486  0.24549922   5 0.005 #> 81   81  0.3587594  0.24549922   8 0.008 #> 82   82  0.4421702  0.24549922   8 0.008 #> 83   83  0.5255810  0.24549922   1 0.001 #> 84   84  0.6089918  0.24549922   9 0.009 #> 85   85  0.6924026  0.24549922   5 0.005 #> 86   86  0.7758134  0.24549922  11 0.011 #> 87   87  0.8592242  0.24549922   7 0.007 #> 88   88  0.9426350  0.24549922   9 0.009 #> 89   89  1.0260458  0.24549922   0 0.000 #> 90   90  1.1094566  0.24549922   0 0.000 #> 91   91 -0.1000000  0.31773509   0 0.000 #> 92   92 -0.0165892  0.31773509   0 0.000 #> 93   93  0.0668216  0.31773509   0 0.000 #> 94   94  0.1502324  0.31773509  11 0.011 #> 95   95  0.2336432  0.31773509   5 0.005 #> 96   96  0.3170540  0.31773509  10 0.010 #> 97   97  0.4004648  0.31773509   8 0.008 #> 98   98  0.4838756  0.31773509   0 0.000 #> 99   99  0.5672864  0.31773509   0 0.000 #> 100 100  0.6506972  0.31773509  10 0.010 #> 101 101  0.7341080  0.31773509  12 0.012 #> 102 102  0.8175188  0.31773509   2 0.002 #> 103 103  0.9009296  0.31773509  13 0.013 #> 104 104  0.9843404  0.31773509   1 0.001 #> 105 105  1.0677512  0.31773509   0 0.000 #> 106 106 -0.0582946  0.38997096   0 0.000 #> 107 107  0.0251162  0.38997096   0 0.000 #> 108 108  0.1085270  0.38997096   0 0.000 #> 109 109  0.1919378  0.38997096   9 0.009 #> 110 110  0.2753486  0.38997096   3 0.003 #> 111 111  0.3587594  0.38997096   2 0.002 #> 112 112  0.4421702  0.38997096   0 0.000 #> 113 113  0.5255810  0.38997096   0 0.000 #> 114 114  0.6089918  0.38997096   0 0.000 #> 115 115  0.6924026  0.38997096   6 0.006 #> 116 116  0.7758134  0.38997096   9 0.009 #> 117 117  0.8592242  0.38997096  10 0.010 #> 118 118  0.9426350  0.38997096   7 0.007 #> 119 119  1.0260458  0.38997096   0 0.000 #> 120 120  1.1094566  0.38997096   0 0.000 #> 121 121 -0.1000000  0.46220683   0 0.000 #> 122 122 -0.0165892  0.46220683   0 0.000 #> 123 123  0.0668216  0.46220683   0 0.000 #> 124 124  0.1502324  0.46220683   0 0.000 #> 125 125  0.2336432  0.46220683   0 0.000 #> 126 126  0.3170540  0.46220683   0 0.000 #> 127 127  0.4004648  0.46220683   0 0.000 #> 128 128  0.4838756  0.46220683   0 0.000 #> 129 129  0.5672864  0.46220683   0 0.000 #> 130 130  0.6506972  0.46220683   5 0.005 #> 131 131  0.7341080  0.46220683  12 0.012 #> 132 132  0.8175188  0.46220683   6 0.006 #> 133 133  0.9009296  0.46220683   6 0.006 #> 134 134  0.9843404  0.46220683   9 0.009 #> 135 135  1.0677512  0.46220683   0 0.000 #> 136 136 -0.0582946  0.53444270   0 0.000 #> 137 137  0.0251162  0.53444270   0 0.000 #> 138 138  0.1085270  0.53444270   0 0.000 #> 139 139  0.1919378  0.53444270   0 0.000 #> 140 140  0.2753486  0.53444270   0 0.000 #> 141 141  0.3587594  0.53444270   0 0.000 #> 142 142  0.4421702  0.53444270   0 0.000 #> 143 143  0.5255810  0.53444270   0 0.000 #> 144 144  0.6089918  0.53444270   0 0.000 #> 145 145  0.6924026  0.53444270   9 0.009 #> 146 146  0.7758134  0.53444270   9 0.009 #> 147 147  0.8592242  0.53444270   6 0.006 #> 148 148  0.9426350  0.53444270   6 0.006 #> 149 149  1.0260458  0.53444270   1 0.001 #> 150 150  1.1094566  0.53444270   0 0.000 #> 151 151 -0.1000000  0.60667858   0 0.000 #> 152 152 -0.0165892  0.60667858   0 0.000 #> 153 153  0.0668216  0.60667858   0 0.000 #> 154 154  0.1502324  0.60667858   0 0.000 #> 155 155  0.2336432  0.60667858   0 0.000 #> 156 156  0.3170540  0.60667858   0 0.000 #> 157 157  0.4004648  0.60667858   0 0.000 #> 158 158  0.4838756  0.60667858   0 0.000 #> 159 159  0.5672864  0.60667858   0 0.000 #> 160 160  0.6506972  0.60667858  10 0.010 #> 161 161  0.7341080  0.60667858   9 0.009 #> 162 162  0.8175188  0.60667858   5 0.005 #> 163 163  0.9009296  0.60667858   5 0.005 #> 164 164  0.9843404  0.60667858   8 0.008 #> 165 165  1.0677512  0.60667858   0 0.000 #> 166 166 -0.0582946  0.67891445   0 0.000 #> 167 167  0.0251162  0.67891445   0 0.000 #> 168 168  0.1085270  0.67891445   0 0.000 #> 169 169  0.1919378  0.67891445   0 0.000 #> 170 170  0.2753486  0.67891445   0 0.000 #> 171 171  0.3587594  0.67891445   0 0.000 #> 172 172  0.4421702  0.67891445   0 0.000 #> 173 173  0.5255810  0.67891445   1 0.001 #> 174 174  0.6089918  0.67891445  10 0.010 #> 175 175  0.6924026  0.67891445   9 0.009 #> 176 176  0.7758134  0.67891445   6 0.006 #> 177 177  0.8592242  0.67891445  11 0.011 #> 178 178  0.9426350  0.67891445   5 0.005 #> 179 179  1.0260458  0.67891445   0 0.000 #> 180 180  1.1094566  0.67891445   0 0.000 #> 181 181 -0.1000000  0.75115032   0 0.000 #> 182 182 -0.0165892  0.75115032   0 0.000 #> 183 183  0.0668216  0.75115032   0 0.000 #> 184 184  0.1502324  0.75115032   3 0.003 #> 185 185  0.2336432  0.75115032   5 0.005 #> 186 186  0.3170540  0.75115032   3 0.003 #> 187 187  0.4004648  0.75115032  11 0.011 #> 188 188  0.4838756  0.75115032   3 0.003 #> 189 189  0.5672864  0.75115032  12 0.012 #> 190 190  0.6506972  0.75115032   6 0.006 #> 191 191  0.7341080  0.75115032   5 0.005 #> 192 192  0.8175188  0.75115032   8 0.008 #> 193 193  0.9009296  0.75115032   9 0.009 #> 194 194  0.9843404  0.75115032   0 0.000 #> 195 195  1.0677512  0.75115032   0 0.000 #> 196 196 -0.0582946  0.82338619   0 0.000 #> 197 197  0.0251162  0.82338619  12 0.012 #> 198 198  0.1085270  0.82338619   9 0.009 #> 199 199  0.1919378  0.82338619  10 0.010 #> 200 200  0.2753486  0.82338619  11 0.011 #> 201 201  0.3587594  0.82338619   9 0.009 #> 202 202  0.4421702  0.82338619  12 0.012 #> 203 203  0.5255810  0.82338619   7 0.007 #> 204 204  0.6089918  0.82338619   8 0.008 #> 205 205  0.6924026  0.82338619  11 0.011 #> 206 206  0.7758134  0.82338619   5 0.005 #> 207 207  0.8592242  0.82338619   7 0.007 #> 208 208  0.9426350  0.82338619   0 0.000 #> 209 209  1.0260458  0.82338619   0 0.000 #> 210 210  1.1094566  0.82338619   0 0.000 #> 211 211 -0.1000000  0.89562206   0 0.000 #> 212 212 -0.0165892  0.89562206   4 0.004 #> 213 213  0.0668216  0.89562206   8 0.008 #> 214 214  0.1502324  0.89562206   5 0.005 #> 215 215  0.2336432  0.89562206   8 0.008 #> 216 216  0.3170540  0.89562206   8 0.008 #> 217 217  0.4004648  0.89562206   4 0.004 #> 218 218  0.4838756  0.89562206   9 0.009 #> 219 219  0.5672864  0.89562206   7 0.007 #> 220 220  0.6506972  0.89562206  10 0.010 #> 221 221  0.7341080  0.89562206   7 0.007 #> 222 222  0.8175188  0.89562206  15 0.015 #> 223 223  0.9009296  0.89562206   0 0.000 #> 224 224  0.9843404  0.89562206   0 0.000 #> 225 225  1.0677512  0.89562206   0 0.000 #> 226 226 -0.0582946  0.96785794   0 0.000 #> 227 227  0.0251162  0.96785794  12 0.012 #> 228 228  0.1085270  0.96785794   6 0.006 #> 229 229  0.1919378  0.96785794   5 0.005 #> 230 230  0.2753486  0.96785794   5 0.005 #> 231 231  0.3587594  0.96785794   7 0.007 #> 232 232  0.4421702  0.96785794  14 0.014 #> 233 233  0.5255810  0.96785794   3 0.003 #> 234 234  0.6089918  0.96785794   3 0.003 #> 235 235  0.6924026  0.96785794   8 0.008 #> 236 236  0.7758134  0.96785794   7 0.007 #> 237 237  0.8592242  0.96785794   0 0.000 #> 238 238  0.9426350  0.96785794   0 0.000 #> 239 239  1.0260458  0.96785794   0 0.000 #> 240 240  1.1094566  0.96785794   0 0.000 #> 241 241 -0.1000000  1.04009381   0 0.000 #> 242 242 -0.0165892  1.04009381   4 0.004 #> 243 243  0.0668216  1.04009381   9 0.009 #> 244 244  0.1502324  1.04009381   9 0.009 #> 245 245  0.2336432  1.04009381   5 0.005 #> 246 246  0.3170540  1.04009381   8 0.008 #> 247 247  0.4004648  1.04009381   8 0.008 #> 248 248  0.4838756  1.04009381   7 0.007 #> 249 249  0.5672864  1.04009381   5 0.005 #> 250 250  0.6506972  1.04009381   4 0.004 #> 251 251  0.7341080  1.04009381   0 0.000 #> 252 252  0.8175188  1.04009381   0 0.000 #> 253 253  0.9009296  1.04009381   0 0.000 #> 254 254  0.9843404  1.04009381   0 0.000 #> 255 255  1.0677512  1.04009381   0 0.000 #> 256 256 -0.0582946  1.11232968   0 0.000 #> 257 257  0.0251162  1.11232968   4 0.004 #> 258 258  0.1085270  1.11232968  13 0.013 #> 259 259  0.1919378  1.11232968  14 0.014 #> 260 260  0.2753486  1.11232968   6 0.006 #> 261 261  0.3587594  1.11232968   7 0.007 #> 262 262  0.4421702  1.11232968  10 0.010 #> 263 263  0.5255810  1.11232968  10 0.010 #> 264 264  0.6089918  1.11232968   0 0.000 #> 265 265  0.6924026  1.11232968   0 0.000 #> 266 266  0.7758134  1.11232968   0 0.000 #> 267 267  0.8592242  1.11232968   0 0.000 #> 268 268  0.9426350  1.11232968   0 0.000 #> 269 269  1.0260458  1.11232968   0 0.000 #> 270 270  1.1094566  1.11232968   0 0.000 #> 271 271 -0.1000000  1.18456555   0 0.000 #> 272 272 -0.0165892  1.18456555   0 0.000 #> 273 273  0.0668216  1.18456555   3 0.003 #> 274 274  0.1502324  1.18456555   1 0.001 #> 275 275  0.2336432  1.18456555   2 0.002 #> 276 276  0.3170540  1.18456555   1 0.001 #> 277 277  0.4004648  1.18456555   1 0.001 #> 278 278  0.4838756  1.18456555   0 0.000 #> 279 279  0.5672864  1.18456555   0 0.000 #> 280 280  0.6506972  1.18456555   0 0.000 #> 281 281  0.7341080  1.18456555   0 0.000 #> 282 282  0.8175188  1.18456555   0 0.000 #> 283 283  0.9009296  1.18456555   0 0.000 #> 284 284  0.9843404  1.18456555   0 0.000 #> 285 285  1.0677512  1.18456555   0 0.000 #> 286 286 -0.0582946  1.25680142   0 0.000 #> 287 287  0.0251162  1.25680142   0 0.000 #> 288 288  0.1085270  1.25680142   0 0.000 #> 289 289  0.1919378  1.25680142   0 0.000 #> 290 290  0.2753486  1.25680142   0 0.000 #> 291 291  0.3587594  1.25680142   0 0.000 #> 292 292  0.4421702  1.25680142   0 0.000 #> 293 293  0.5255810  1.25680142   0 0.000 #> 294 294  0.6089918  1.25680142   0 0.000 #> 295 295  0.6924026  1.25680142   0 0.000 #> 296 296  0.7758134  1.25680142   0 0.000 #> 297 297  0.8592242  1.25680142   0 0.000 #> 298 298  0.9426350  1.25680142   0 0.000 #> 299 299  1.0260458  1.25680142   0 0.000 #> 300 300  1.1094566  1.25680142   0 0.000"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — extract_hexbin_mean","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — extract_hexbin_mean","text":"Extract hexagonal bin mean coordinates corresponding standardize counts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — extract_hexbin_mean","text":"","code":"extract_hexbin_mean(data_hb, counts_data, centroids_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — extract_hexbin_mean","text":"data_hb tibble embedding components hexagonal bin IDs. counts_data tibble contains hexagon IDs standardise number points within hexagon. centroids_data tibble contains hexagonal bin centroid coordinates hexagon IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — extract_hexbin_mean","text":"tibble contains hexagon ID (h), bin means (c_x, c_y), bin counts (n_h), standardise counts (w_h).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_hexbin_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — extract_hexbin_mean","text":"","code":"all_centroids_df <- scurve_model_obj$hb_obj$centroids counts_data <- scurve_model_obj$hb_obj$std_cts umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id extract_hexbin_mean(data_hb = umap_with_hb_id, counts_data = counts_data, centroids_data = all_centroids_df) #> # A tibble: 137 × 5 #>        h   c_x    c_y   n_h   w_h #>    <int> <dbl>  <dbl> <dbl> <dbl> #>  1    34 0.192 0.0440     1 0.001 #>  2    35 0.241 0.0377    10 0.01  #>  3    36 0.325 0.0379     8 0.008 #>  4    37 0.396 0.0401     8 0.008 #>  5    38 0.451 0.0527     2 0.002 #>  6    41 0.757 0.0378     2 0.002 #>  7    42 0.808 0.0299    12 0.012 #>  8    49 0.195 0.0971    11 0.011 #>  9    50 0.269 0.101      9 0.009 #> 10    51 0.363 0.0901     4 0.004 #> # ℹ 127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_kmean_centers.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract k-mean center coordinates and the corresponding standardize counts. — extract_kmean_centers","title":"Extract k-mean center coordinates and the corresponding standardize counts. — extract_kmean_centers","text":"Extract k-mean center coordinates corresponding standardize counts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_kmean_centers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract k-mean center coordinates and the corresponding standardize counts. — extract_kmean_centers","text":"","code":"extract_kmean_centers(nldr_df, tot_bins)"},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_kmean_centers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract k-mean center coordinates and the corresponding standardize counts. — extract_kmean_centers","text":"nldr_df data frame 2D embeddings. tot_bins Total number bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_kmean_centers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract k-mean center coordinates and the corresponding standardize counts. — extract_kmean_centers","text":"tibble contains clustering ID, kmean center coordinates, standardize counts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/extract_kmean_centers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract k-mean center coordinates and the corresponding standardize counts. — extract_kmean_centers","text":"","code":"num_bins_list <- calc_bins(data = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", hex_size = 0.2, buffer_x = 0.346, buffer_y = 0.3) num_bins_x <- num_bins_list$num_x num_bins_y <- num_bins_list$num_y extract_kmean_centers(nldr_df = s_curve_noise_umap |> dplyr::select(-ID), tot_bins = num_bins_x * num_bins_y) #> # A tibble: 28 × 4 #>    hexID     c_x     c_y std_counts #>    <int>   <dbl>   <dbl>      <dbl> #>  1     1  1.42    0.579       0.333 #>  2     2 -3.03   -3.83        0.833 #>  3     3  0.0953 -1.67        1     #>  4     4 -2.42   -5.71        0.333 #>  5     5  1.12    1.06        0.167 #>  6     6  0.863   0.619       0.167 #>  7     7  0.662   4.13        0.333 #>  8     8 -0.590  -2.52        0.167 #>  9     9  1.17    5.81        0.167 #> 10    10  1.11   -0.0647      0.667 #> # ℹ 18 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_benchmark_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Benchmark Value To Remove Long Edges — find_benchmark_value","title":"Find Benchmark Value To Remove Long Edges — find_benchmark_value","text":"function finds benchmark value remove long edges based differences distance column.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_benchmark_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Benchmark Value To Remove Long Edges — find_benchmark_value","text":"","code":"find_benchmark_value(distance_edges, distance_col)"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_benchmark_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Benchmark Value To Remove Long Edges — find_benchmark_value","text":"distance_edges data frame containing distances. distance_col name column containing distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_benchmark_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Benchmark Value To Remove Long Edges — find_benchmark_value","text":"benchmark value, first largest difference distance column.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_benchmark_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Benchmark Value To Remove Long Edges — find_benchmark_value","text":"","code":"training_data <- s_curve_noise_training num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. hex_bin_obj <- generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. all_centroids_df <- as.data.frame(do.call(cbind, hex_bin_obj$full_grid_hex_centroids)) counts_df <- as.data.frame(do.call(cbind, hex_bin_obj$hex_id_with_std_counts)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df, counts_df = counts_df) UMAP_data_with_hb_id <- hex_bin_obj$nldr_data_with_hex_id df_all <- dplyr::bind_cols(training_data |> dplyr::select(-ID), UMAP_data_with_hb_id) df_bin <- avg_highD_data(df_all, column_start_text = \"x\") tr1_object <- triangulate_bin_centroids(hex_bin_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") #> Warning: triangle collapsed! #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> Warning: three points coincide or are collinear! tr_from_to_df <- generate_edge_info(triangular_object = tr1_object) distance_df <- cal_2d_dist(tr_from_to_df_coord = tr_from_to_df, start_x = \"x_from\", start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\", select_col_vec = c(\"from\", \"to\", \"distance\")) find_benchmark_value(distance_edges = distance_df, distance_col = \"distance\") #> [1] 0.6"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_lg_benchmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a benchmark value to remove long edges — find_lg_benchmark","title":"Compute a benchmark value to remove long edges — find_lg_benchmark","text":"function finds benchmark value remove long edges based differences distance column.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_lg_benchmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a benchmark value to remove long edges — find_lg_benchmark","text":"","code":"find_lg_benchmark(distance_edges, distance_col)"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_lg_benchmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a benchmark value to remove long edges — find_lg_benchmark","text":"distance_edges tibble contains distances. distance_col name column containing distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_lg_benchmark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a benchmark value to remove long edges — find_lg_benchmark","text":"benchmark value, first largest difference distance column.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_lg_benchmark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a benchmark value to remove long edges — find_lg_benchmark","text":"","code":"distance_df <- s_curve_obj$distance_df find_lg_benchmark(distance_edges = distance_df, distance_col = \"distance\") #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"NULL\""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_dens_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Find low-density Hexagons — find_low_dens_hex","title":"Find low-density Hexagons — find_low_dens_hex","text":"function identifies hexagons low density based mean density neighboring hexagons.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_dens_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find low-density Hexagons — find_low_dens_hex","text":"","code":"find_low_dens_hex(model_2d, b1 = 30, md_thresh = 0.05)"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_dens_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find low-density Hexagons — find_low_dens_hex","text":"model_2d tibble contains hexagonal bin centroids. b1 Number bins along x-axis hexagon binning. md_thresh numeric value contains threshold mean density.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_dens_hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find low-density Hexagons — find_low_dens_hex","text":"vector containing IDs hexagons removed investigating neighboring bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_dens_hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find low-density Hexagons — find_low_dens_hex","text":"","code":"find_low_dens_hex(model_2d = scurve_model_obj$model_2d, b1 = 30, md_thresh = 0.05) #>   [1]  34  35  36  37  38  41  42  49  50  51  52  53  54  55  56  57  64  65 #>  [19]  66  67  68  69  70  71  72  73  78  79  80  81  82  83  84  85  86  87 #>  [37]  88  94  95  96  97 100 101 102 103 104 109 110 111 115 116 117 118 130 #>  [55] 131 132 133 134 145 146 147 148 149 160 161 162 163 164 173 174 175 176 #>  [73] 177 178 184 185 186 187 188 189 190 191 192 193 197 198 199 200 201 202 #>  [91] 203 204 205 206 207 212 213 214 215 216 217 218 219 220 221 222 227 228 #> [109] 229 230 231 232 233 234 235 236 242 243 244 245 246 247 248 249 250 257 #> [127] 258 259 260 261 262 263 273 274 275 276 277"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_density_hexagons.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Low-Density Hexagons — find_low_density_hexagons","title":"Find Low-Density Hexagons — find_low_density_hexagons","text":"function identifies hexagons low density based mean density neighboring hexagons.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_density_hexagons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Low-Density Hexagons — find_low_density_hexagons","text":"","code":"find_low_density_hexagons(   df_bin_centroids_all,   num_bins_x,   df_bin_centroids_low )"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_density_hexagons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Low-Density Hexagons — find_low_density_hexagons","text":"df_bin_centroids_all data frame containing hexagonal bin centroids. num_bins_x Number bins along x-axis hexagon binning. df_bin_centroids_low data frame containing identified low-density hexagonal bin centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_density_hexagons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Low-Density Hexagons — find_low_density_hexagons","text":"vector containing IDs hexagons removed investigating neighboring bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_low_density_hexagons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Low-Density Hexagons — find_low_density_hexagons","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. hex_bin_obj <- generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. all_centroids_df <- as.data.frame(do.call(cbind, hex_bin_obj$full_grid_hex_centroids)) counts_df <- as.data.frame(do.call(cbind, hex_bin_obj$hex_id_with_std_counts)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df, counts_df = counts_df) df_bin_centroids_low <- df_bin_centroids |> dplyr::filter(std_counts <= 0.43) find_low_density_hexagons(df_bin_centroids_all = df_bin_centroids, num_bins_x = num_bins_x, df_bin_centroids_low = df_bin_centroids_low) #> [1] 7"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_non_empty_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the number of bins required to achieve required number of non-empty bins. — find_non_empty_bins","title":"Find the number of bins required to achieve required number of non-empty bins. — find_non_empty_bins","text":"function determines number bins along x y axes obtain specific number non-empty bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_non_empty_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the number of bins required to achieve required number of non-empty bins. — find_non_empty_bins","text":"","code":"find_non_empty_bins(nldr_scaled_obj, m = 2, q = 0.1)"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_non_empty_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the number of bins required to achieve required number of non-empty bins. — find_non_empty_bins","text":"nldr_scaled_obj list tibble contains scaled first second columns NLDR data, numeric vectors representing limits original NLDR data. m desired number non-empty bins. q buffer amount proportion data range.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_non_empty_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the number of bins required to achieve required number of non-empty bins. — find_non_empty_bins","text":"number bins along x y axes needed achieve specific number non-empty bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_non_empty_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the number of bins required to achieve required number of non-empty bins. — find_non_empty_bins","text":"","code":"find_non_empty_bins(nldr_scaled_obj = scurve_model_obj$nldr_scaled_obj, m = 5)"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts.html","id":null,"dir":"Reference","previous_headings":"","what":"Find points in hexagonal bins — find_pts","title":"Find points in hexagonal bins — find_pts","text":"function maps points corresponding hexagonal bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find points in hexagonal bins — find_pts","text":"","code":"find_pts(scaled_nldr_hexid)"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find points in hexagonal bins — find_pts","text":"scaled_nldr_hexid tibble contains scaled embedding hexagonal bin IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find points in hexagonal bins — find_pts","text":"tibble hexagonal bin IDs (h) corresponding points.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find points in hexagonal bins — find_pts","text":"","code":"umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id find_pts(scaled_nldr_hexid = umap_with_hb_id) #> # A tibble: 137 × 2 #>        h pts_list   #>    <int> <list>     #>  1    34 <int [1]>  #>  2    35 <int [10]> #>  3    36 <int [8]>  #>  4    37 <int [8]>  #>  5    38 <int [2]>  #>  6    41 <int [2]>  #>  7    42 <int [12]> #>  8    49 <int [11]> #>  9    50 <int [9]>  #> 10    51 <int [4]>  #> # ℹ 127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts_in_hexbins.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Points in Hexagonal Bins — find_pts_in_hexbins","title":"Find Points in Hexagonal Bins — find_pts_in_hexbins","text":"function maps points corresponding hexagonal bins based provided data frames.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts_in_hexbins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Points in Hexagonal Bins — find_pts_in_hexbins","text":"","code":"find_pts_in_hexbins(nldr_data_with_hb_id)"},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts_in_hexbins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Points in Hexagonal Bins — find_pts_in_hexbins","text":"nldr_data_with_hb_id data frame 2D embedding data, ID hexagonal bin IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts_in_hexbins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Points in Hexagonal Bins — find_pts_in_hexbins","text":"data frame hexagonal bin IDs corresponding points.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/find_pts_in_hexbins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Points in Hexagonal Bins — find_pts_in_hexbins","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,                                         x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,                                         y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled,                                              x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x,                                              num_bins_y = num_bins_y, x_start = NA,                                              y_start = NA, buffer_x = NA,                                              buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. all_centroids_df <- as.data.frame(do.call(cbind, centroid_list)) s_curve_noise_umap_scaled_rm_id <- s_curve_noise_umap_scaled |> dplyr::select(-ID) nldr_with_hb_id_list <- assign_data(nldr_df = s_curve_noise_umap_scaled_rm_id, centroid_df = all_centroids_df) umap_with_hb_id <- as.data.frame(do.call(cbind, nldr_with_hb_id_list)) umap_with_hb_id <- umap_with_hb_id |> dplyr::mutate(ID = s_curve_noise_umap_scaled$ID) find_pts_in_hexbins(nldr_data_with_hb_id = umap_with_hb_id) #> $hexID #>  [1]  6 18 24  2 12 34 28 13  7 29 #>  #> $pts_list #> $pts_list$`Points in hexID: 6` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 18` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 24` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 2` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 12` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 34` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 28` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 13` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 7` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pts_list$`Points in hexID: 29` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_high_d_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the 2D model and lift into high-D — fit_high_d_model","title":"Construct the 2D model and lift into high-D — fit_high_d_model","text":"function fits high-dimensional model using hexagonal bins provides options customize modeling process, including choice bin centroids bin means, removal low-density hexagons, averaging high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_high_d_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the 2D model and lift into high-D — fit_high_d_model","text":"","code":"fit_high_d_model(   training_data,   nldr_df_with_id,   x = \"UMAP1\",   y = \"UMAP2\",   num_bins_x = NA,   num_bins_y = NA,   x_start = NA,   y_start = NA,   buffer_x = NA,   buffer_y = NA,   hex_size = NA,   is_rm_lwd_hex = FALSE,   benchmark_to_rm_lwd_hex = NA,   column_start_text = \"x\" )"},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_high_d_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the 2D model and lift into high-D — fit_high_d_model","text":"training_data data frame containing training high-dimensional data. nldr_df_with_id data frame containing 2D embeddings unique identifier. x name column contains first 2D embeddings component. y name column contains second 2D embeddings component. num_bins_x Number bins along x-axis. num_bins_y Number bins along y-axis. x_start Starting point along x-axis hexagonal binning. y_start Starting point along y-axis hexagonal binning. buffer_x buffer size along x-axis. buffer_y buffer size along y-axis. hex_size numeric value initializes radius outer circle surrounding hexagon. is_rm_lwd_hex Logical, indicating whether remove low-density hexagons (default FALSE). benchmark_to_rm_lwd_hex benchmark value remove low-density hexagons. column_start_text text prefix columns high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_high_d_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the 2D model and lift into high-D — fit_high_d_model","text":"list containing data frame high-dimensional coordinates 2D bin centroids (df_bin) data frame containing information hexagonal bin centroids (df_bin_centroids) 2D.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_high_d_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct the 2D model and lift into high-D — fit_high_d_model","text":"","code":"fit_high_d_model(training_data = s_curve_noise_training, nldr_df_with_id = s_curve_noise_umap_scaled) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. #> $df_bin #> # A tibble: 10 × 8 #>    hb_id       x1     x2     x3        x4        x5       x6        x7 #>    <dbl>    <dbl>  <dbl>  <dbl>     <dbl>     <dbl>    <dbl>     <dbl> #>  1     2 -0.637   1.74   -1.76   0.00953  -0.00143  -0.0117  -0.00152  #>  2     6 -0.498   0.524  -1.73  -0.000237  0.00234  -0.0297  -0.000242 #>  3     7  0.294   1.40   -1.88   0.00890  -0.00803  -0.0123  -0.00120  #>  4    12  0.309   0.0421 -1.83   0.00656   0.00823   0.00489 -0.00389  #>  5    13  0.868   0.747  -0.781 -0.00408   0.000857  0.0248   0.00170  #>  6    18  0.357   1.27   -0.169  0.00607   0.00124   0.0152   0.00204  #>  7    24 -0.792   1.25    0.514 -0.000777  0.000464  0.00602  0.000371 #>  8    28 -0.597   1.19    1.77   0.000240 -0.00417  -0.0185  -0.000786 #>  9    29 -0.00544 0.211   1.92   0.00116   0.00266   0.00949 -0.00209  #> 10    34  0.622   1.21    1.64  -0.000560  0.00540  -0.00741 -0.000886 #>  #> $df_bin_centroids #>    hexID       c_x   c_y std_counts #> 1      2 0.1732051 -0.15  0.2352941 #> 2      6 0.0000000  0.15  0.5294118 #> 3      7 0.3464102  0.15  0.4117647 #> 4     12 0.1732051  0.45  0.1764706 #> 5     13 0.5196152  0.45  0.3529412 #> 6     18 0.6928203  0.75  0.7058824 #> 7     24 0.8660254  1.05  0.4705882 #> 8     28 0.6928203  1.35  0.2941176 #> 9     29 1.0392305  1.35  0.2352941 #> 10    34 0.8660254  1.65  1.0000000 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_highd_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the 2-D model and lift into high-dimensions — fit_highd_model","title":"Construct the 2-D model and lift into high-dimensions — fit_highd_model","text":"function fits high-dimensional model using hexagonal bins provides options customize modeling process, including choice bin centroids bin means, removal low-density hexagons, averaging high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_highd_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the 2-D model and lift into high-dimensions — fit_highd_model","text":"","code":"fit_highd_model(highd_data, nldr_data, b1 = 30, q = 0.1, hd_thresh = 0)"},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_highd_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the 2-D model and lift into high-dimensions — fit_highd_model","text":"highd_data tibble contains high-dimensional data unique identifier. nldr_data tibble contains embedding unique identifier. b1 (default: 4) numeric value representing number bins along x axis. q (default: 0.1) numeric value representing buffer amount proportion data range. hd_thresh (default: 0) numeric value using filter high-density hexagons.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_highd_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the 2-D model and lift into high-dimensions — fit_highd_model","text":"list containing list tibble contains scaled first second columns NLDR data, numeric vectors representing limits original NLDR data (nldr_scaled_obj), object contains hexagonal binning information (hb_obj), tibble high-dimensional model (model_highd) tibble containing hexagonal bin centroids 2-D (model_2d), tibble contains edge information (trimesh_data).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/fit_highd_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct the 2-D model and lift into high-dimensions — fit_highd_model","text":"","code":"fit_highd_model(highd_data = scurve, nldr_data = scurve_umap, b1 = 30, q = 0.1, hd_thresh = 0) #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> ✔ Model generated successfully!!! #> $nldr_scaled_obj #> $nldr_scaled_obj$scaled_nldr #> # A tibble: 1,000 × 3 #>     emb1  emb2    ID #>    <dbl> <dbl> <int> #>  1 0.277 0.913     1 #>  2 0.697 0.538     2 #>  3 0.779 0.399     3 #>  4 0.173 0.953     4 #>  5 0.218 0.983     5 #>  6 0.593 1.05      6 #>  7 0.180 0.210     7 #>  8 0.976 0.571     8 #>  9 0.803 0.829     9 #> 10 0.932 0.410    10 #> # ℹ 990 more rows #>  #> $nldr_scaled_obj$lim1 #> [1] -9.146398  8.552211 #>  #> $nldr_scaled_obj$lim2 #> [1] -10.36686  10.10691 #>  #>  #> $hb_obj #> $a1 #> [1] 0.04063603 #>  #> $a2 #> [1] 0.03519184 #>  #> $bins #> [1] 30 40 #>  #> $start_point #> [1] -0.1000000 -0.1156801 #>  #> $centroids #> # A tibble: 1,200 × 3 #>        h     c_x    c_y #>    <int>   <dbl>  <dbl> #>  1     1 -0.1    -0.116 #>  2     2 -0.0594 -0.116 #>  3     3 -0.0187 -0.116 #>  4     4  0.0219 -0.116 #>  5     5  0.0625 -0.116 #>  6     6  0.103  -0.116 #>  7     7  0.144  -0.116 #>  8     8  0.184  -0.116 #>  9     9  0.225  -0.116 #> 10    10  0.266  -0.116 #> # ℹ 1,190 more rows #>  #> $hex_poly #>         h            x            y #> 1       1 -0.100000000 -0.092218919 #> 2       1 -0.120318015 -0.103949531 #> 3       1 -0.120318015 -0.127410754 #> 4       1 -0.100000000 -0.139141366 #> 5       1 -0.079681985 -0.127410754 #> 6       1 -0.079681985 -0.103949531 #> 7       2 -0.059363969 -0.092218919 #> 8       2 -0.079681985 -0.103949531 #> 9       2 -0.079681985 -0.127410754 #> 10      2 -0.059363969 -0.139141366 #> 11      2 -0.039045954 -0.127410754 #> 12      2 -0.039045954 -0.103949531 #> 13      3 -0.018727938 -0.092218919 #> 14      3 -0.039045954 -0.103949531 #> 15      3 -0.039045954 -0.127410754 #> 16      3 -0.018727938 -0.139141366 #> 17      3  0.001590077 -0.127410754 #> 18      3  0.001590077 -0.103949531 #> 19      4  0.021908092 -0.092218919 #> 20      4  0.001590077 -0.103949531 #> 21      4  0.001590077 -0.127410754 #> 22      4  0.021908092 -0.139141366 #> 23      4  0.042226108 -0.127410754 #> 24      4  0.042226108 -0.103949531 #> 25      5  0.062544123 -0.092218919 #> 26      5  0.042226108 -0.103949531 #> 27      5  0.042226108 -0.127410754 #> 28      5  0.062544123 -0.139141366 #> 29      5  0.082862139 -0.127410754 #> 30      5  0.082862139 -0.103949531 #> 31      6  0.103180154 -0.092218919 #> 32      6  0.082862139 -0.103949531 #> 33      6  0.082862139 -0.127410754 #> 34      6  0.103180154 -0.139141366 #> 35      6  0.123498170 -0.127410754 #> 36      6  0.123498170 -0.103949531 #> 37      7  0.143816185 -0.092218919 #> 38      7  0.123498170 -0.103949531 #> 39      7  0.123498170 -0.127410754 #> 40      7  0.143816185 -0.139141366 #> 41      7  0.164134200 -0.127410754 #> 42      7  0.164134200 -0.103949531 #> 43      8  0.184452216 -0.092218919 #> 44      8  0.164134200 -0.103949531 #> 45      8  0.164134200 -0.127410754 #> 46      8  0.184452216 -0.139141366 #> 47      8  0.204770231 -0.127410754 #> 48      8  0.204770231 -0.103949531 #> 49      9  0.225088247 -0.092218919 #> 50      9  0.204770231 -0.103949531 #> 51      9  0.204770231 -0.127410754 #> 52      9  0.225088247 -0.139141366 #> 53      9  0.245406262 -0.127410754 #> 54      9  0.245406262 -0.103949531 #> 55     10  0.265724277 -0.092218919 #> 56     10  0.245406262 -0.103949531 #> 57     10  0.245406262 -0.127410754 #> 58     10  0.265724277 -0.139141366 #> 59     10  0.286042293 -0.127410754 #> 60     10  0.286042293 -0.103949531 #> 61     11  0.306360308 -0.092218919 #> 62     11  0.286042293 -0.103949531 #> 63     11  0.286042293 -0.127410754 #> 64     11  0.306360308 -0.139141366 #> 65     11  0.326678324 -0.127410754 #> 66     11  0.326678324 -0.103949531 #> 67     12  0.346996339 -0.092218919 #> 68     12  0.326678324 -0.103949531 #> 69     12  0.326678324 -0.127410754 #> 70     12  0.346996339 -0.139141366 #> 71     12  0.367314354 -0.127410754 #> 72     12  0.367314354 -0.103949531 #> 73     13  0.387632370 -0.092218919 #> 74     13  0.367314354 -0.103949531 #> 75     13  0.367314354 -0.127410754 #> 76     13  0.387632370 -0.139141366 #> 77     13  0.407950385 -0.127410754 #> 78     13  0.407950385 -0.103949531 #> 79     14  0.428268401 -0.092218919 #> 80     14  0.407950385 -0.103949531 #> 81     14  0.407950385 -0.127410754 #> 82     14  0.428268401 -0.139141366 #> 83     14  0.448586416 -0.127410754 #> 84     14  0.448586416 -0.103949531 #> 85     15  0.468904432 -0.092218919 #> 86     15  0.448586416 -0.103949531 #> 87     15  0.448586416 -0.127410754 #> 88     15  0.468904432 -0.139141366 #> 89     15  0.489222447 -0.127410754 #> 90     15  0.489222447 -0.103949531 #> 91     16  0.509540462 -0.092218919 #> 92     16  0.489222447 -0.103949531 #> 93     16  0.489222447 -0.127410754 #> 94     16  0.509540462 -0.139141366 #> 95     16  0.529858478 -0.127410754 #> 96     16  0.529858478 -0.103949531 #> 97     17  0.550176493 -0.092218919 #> 98     17  0.529858478 -0.103949531 #> 99     17  0.529858478 -0.127410754 #> 100    17  0.550176493 -0.139141366 #> 101    17  0.570494509 -0.127410754 #> 102    17  0.570494509 -0.103949531 #> 103    18  0.590812524 -0.092218919 #> 104    18  0.570494509 -0.103949531 #> 105    18  0.570494509 -0.127410754 #> 106    18  0.590812524 -0.139141366 #> 107    18  0.611130539 -0.127410754 #> 108    18  0.611130539 -0.103949531 #> 109    19  0.631448555 -0.092218919 #> 110    19  0.611130539 -0.103949531 #> 111    19  0.611130539 -0.127410754 #> 112    19  0.631448555 -0.139141366 #> 113    19  0.651766570 -0.127410754 #> 114    19  0.651766570 -0.103949531 #> 115    20  0.672084586 -0.092218919 #> 116    20  0.651766570 -0.103949531 #> 117    20  0.651766570 -0.127410754 #> 118    20  0.672084586 -0.139141366 #> 119    20  0.692402601 -0.127410754 #> 120    20  0.692402601 -0.103949531 #> 121    21  0.712720616 -0.092218919 #> 122    21  0.692402601 -0.103949531 #> 123    21  0.692402601 -0.127410754 #> 124    21  0.712720616 -0.139141366 #> 125    21  0.733038632 -0.127410754 #> 126    21  0.733038632 -0.103949531 #> 127    22  0.753356647 -0.092218919 #> 128    22  0.733038632 -0.103949531 #> 129    22  0.733038632 -0.127410754 #> 130    22  0.753356647 -0.139141366 #> 131    22  0.773674663 -0.127410754 #> 132    22  0.773674663 -0.103949531 #> 133    23  0.793992678 -0.092218919 #> 134    23  0.773674663 -0.103949531 #> 135    23  0.773674663 -0.127410754 #> 136    23  0.793992678 -0.139141366 #> 137    23  0.814310694 -0.127410754 #> 138    23  0.814310694 -0.103949531 #> 139    24  0.834628709 -0.092218919 #> 140    24  0.814310694 -0.103949531 #> 141    24  0.814310694 -0.127410754 #> 142    24  0.834628709 -0.139141366 #> 143    24  0.854946724 -0.127410754 #> 144    24  0.854946724 -0.103949531 #> 145    25  0.875264740 -0.092218919 #> 146    25  0.854946724 -0.103949531 #> 147    25  0.854946724 -0.127410754 #> 148    25  0.875264740 -0.139141366 #> 149    25  0.895582755 -0.127410754 #> 150    25  0.895582755 -0.103949531 #> 151    26  0.915900771 -0.092218919 #> 152    26  0.895582755 -0.103949531 #> 153    26  0.895582755 -0.127410754 #> 154    26  0.915900771 -0.139141366 #> 155    26  0.936218786 -0.127410754 #> 156    26  0.936218786 -0.103949531 #> 157    27  0.956536801 -0.092218919 #> 158    27  0.936218786 -0.103949531 #> 159    27  0.936218786 -0.127410754 #> 160    27  0.956536801 -0.139141366 #> 161    27  0.976854817 -0.127410754 #> 162    27  0.976854817 -0.103949531 #> 163    28  0.997172832 -0.092218919 #> 164    28  0.976854817 -0.103949531 #> 165    28  0.976854817 -0.127410754 #> 166    28  0.997172832 -0.139141366 #> 167    28  1.017490848 -0.127410754 #> 168    28  1.017490848 -0.103949531 #> 169    29  1.037808863 -0.092218919 #> 170    29  1.017490848 -0.103949531 #> 171    29  1.017490848 -0.127410754 #> 172    29  1.037808863 -0.139141366 #> 173    29  1.058126878 -0.127410754 #> 174    29  1.058126878 -0.103949531 #> 175    30  1.078444894 -0.092218919 #> 176    30  1.058126878 -0.103949531 #> 177    30  1.058126878 -0.127410754 #> 178    30  1.078444894 -0.139141366 #> 179    30  1.098762909 -0.127410754 #> 180    30  1.098762909 -0.103949531 #> 181    31 -0.079681985 -0.057027084 #> 182    31 -0.100000000 -0.068757696 #> 183    31 -0.100000000 -0.092218919 #> 184    31 -0.079681985 -0.103949531 #> 185    31 -0.059363969 -0.092218919 #> 186    31 -0.059363969 -0.068757696 #> 187    32 -0.039045954 -0.057027084 #> 188    32 -0.059363969 -0.068757696 #> 189    32 -0.059363969 -0.092218919 #> 190    32 -0.039045954 -0.103949531 #> 191    32 -0.018727938 -0.092218919 #> 192    32 -0.018727938 -0.068757696 #> 193    33  0.001590077 -0.057027084 #> 194    33 -0.018727938 -0.068757696 #> 195    33 -0.018727938 -0.092218919 #> 196    33  0.001590077 -0.103949531 #> 197    33  0.021908092 -0.092218919 #> 198    33  0.021908092 -0.068757696 #> 199    34  0.042226108 -0.057027084 #> 200    34  0.021908092 -0.068757696 #> 201    34  0.021908092 -0.092218919 #> 202    34  0.042226108 -0.103949531 #> 203    34  0.062544123 -0.092218919 #> 204    34  0.062544123 -0.068757696 #> 205    35  0.082862139 -0.057027084 #> 206    35  0.062544123 -0.068757696 #> 207    35  0.062544123 -0.092218919 #> 208    35  0.082862139 -0.103949531 #> 209    35  0.103180154 -0.092218919 #> 210    35  0.103180154 -0.068757696 #> 211    36  0.123498170 -0.057027084 #> 212    36  0.103180154 -0.068757696 #> 213    36  0.103180154 -0.092218919 #> 214    36  0.123498170 -0.103949531 #> 215    36  0.143816185 -0.092218919 #> 216    36  0.143816185 -0.068757696 #> 217    37  0.164134200 -0.057027084 #> 218    37  0.143816185 -0.068757696 #> 219    37  0.143816185 -0.092218919 #> 220    37  0.164134200 -0.103949531 #> 221    37  0.184452216 -0.092218919 #> 222    37  0.184452216 -0.068757696 #> 223    38  0.204770231 -0.057027084 #> 224    38  0.184452216 -0.068757696 #> 225    38  0.184452216 -0.092218919 #> 226    38  0.204770231 -0.103949531 #> 227    38  0.225088247 -0.092218919 #> 228    38  0.225088247 -0.068757696 #> 229    39  0.245406262 -0.057027084 #> 230    39  0.225088247 -0.068757696 #> 231    39  0.225088247 -0.092218919 #> 232    39  0.245406262 -0.103949531 #> 233    39  0.265724277 -0.092218919 #> 234    39  0.265724277 -0.068757696 #> 235    40  0.286042293 -0.057027084 #> 236    40  0.265724277 -0.068757696 #> 237    40  0.265724277 -0.092218919 #> 238    40  0.286042293 -0.103949531 #> 239    40  0.306360308 -0.092218919 #> 240    40  0.306360308 -0.068757696 #> 241    41  0.326678324 -0.057027084 #> 242    41  0.306360308 -0.068757696 #> 243    41  0.306360308 -0.092218919 #> 244    41  0.326678324 -0.103949531 #> 245    41  0.346996339 -0.092218919 #> 246    41  0.346996339 -0.068757696 #> 247    42  0.367314354 -0.057027084 #> 248    42  0.346996339 -0.068757696 #> 249    42  0.346996339 -0.092218919 #> 250    42  0.367314354 -0.103949531 #> 251    42  0.387632370 -0.092218919 #> 252    42  0.387632370 -0.068757696 #> 253    43  0.407950385 -0.057027084 #> 254    43  0.387632370 -0.068757696 #> 255    43  0.387632370 -0.092218919 #> 256    43  0.407950385 -0.103949531 #> 257    43  0.428268401 -0.092218919 #> 258    43  0.428268401 -0.068757696 #> 259    44  0.448586416 -0.057027084 #> 260    44  0.428268401 -0.068757696 #> 261    44  0.428268401 -0.092218919 #> 262    44  0.448586416 -0.103949531 #> 263    44  0.468904432 -0.092218919 #> 264    44  0.468904432 -0.068757696 #> 265    45  0.489222447 -0.057027084 #> 266    45  0.468904432 -0.068757696 #> 267    45  0.468904432 -0.092218919 #> 268    45  0.489222447 -0.103949531 #> 269    45  0.509540462 -0.092218919 #> 270    45  0.509540462 -0.068757696 #> 271    46  0.529858478 -0.057027084 #> 272    46  0.509540462 -0.068757696 #> 273    46  0.509540462 -0.092218919 #> 274    46  0.529858478 -0.103949531 #> 275    46  0.550176493 -0.092218919 #> 276    46  0.550176493 -0.068757696 #> 277    47  0.570494509 -0.057027084 #> 278    47  0.550176493 -0.068757696 #> 279    47  0.550176493 -0.092218919 #> 280    47  0.570494509 -0.103949531 #> 281    47  0.590812524 -0.092218919 #> 282    47  0.590812524 -0.068757696 #> 283    48  0.611130539 -0.057027084 #> 284    48  0.590812524 -0.068757696 #> 285    48  0.590812524 -0.092218919 #> 286    48  0.611130539 -0.103949531 #> 287    48  0.631448555 -0.092218919 #> 288    48  0.631448555 -0.068757696 #> 289    49  0.651766570 -0.057027084 #> 290    49  0.631448555 -0.068757696 #> 291    49  0.631448555 -0.092218919 #> 292    49  0.651766570 -0.103949531 #> 293    49  0.672084586 -0.092218919 #> 294    49  0.672084586 -0.068757696 #> 295    50  0.692402601 -0.057027084 #> 296    50  0.672084586 -0.068757696 #> 297    50  0.672084586 -0.092218919 #> 298    50  0.692402601 -0.103949531 #> 299    50  0.712720616 -0.092218919 #> 300    50  0.712720616 -0.068757696 #> 301    51  0.733038632 -0.057027084 #> 302    51  0.712720616 -0.068757696 #> 303    51  0.712720616 -0.092218919 #> 304    51  0.733038632 -0.103949531 #> 305    51  0.753356647 -0.092218919 #> 306    51  0.753356647 -0.068757696 #> 307    52  0.773674663 -0.057027084 #> 308    52  0.753356647 -0.068757696 #> 309    52  0.753356647 -0.092218919 #> 310    52  0.773674663 -0.103949531 #> 311    52  0.793992678 -0.092218919 #> 312    52  0.793992678 -0.068757696 #> 313    53  0.814310694 -0.057027084 #> 314    53  0.793992678 -0.068757696 #> 315    53  0.793992678 -0.092218919 #> 316    53  0.814310694 -0.103949531 #> 317    53  0.834628709 -0.092218919 #> 318    53  0.834628709 -0.068757696 #> 319    54  0.854946724 -0.057027084 #> 320    54  0.834628709 -0.068757696 #> 321    54  0.834628709 -0.092218919 #> 322    54  0.854946724 -0.103949531 #> 323    54  0.875264740 -0.092218919 #> 324    54  0.875264740 -0.068757696 #> 325    55  0.895582755 -0.057027084 #> 326    55  0.875264740 -0.068757696 #> 327    55  0.875264740 -0.092218919 #> 328    55  0.895582755 -0.103949531 #> 329    55  0.915900771 -0.092218919 #> 330    55  0.915900771 -0.068757696 #> 331    56  0.936218786 -0.057027084 #> 332    56  0.915900771 -0.068757696 #> 333    56  0.915900771 -0.092218919 #> 334    56  0.936218786 -0.103949531 #> 335    56  0.956536801 -0.092218919 #> 336    56  0.956536801 -0.068757696 #> 337    57  0.976854817 -0.057027084 #> 338    57  0.956536801 -0.068757696 #> 339    57  0.956536801 -0.092218919 #> 340    57  0.976854817 -0.103949531 #> 341    57  0.997172832 -0.092218919 #> 342    57  0.997172832 -0.068757696 #> 343    58  1.017490848 -0.057027084 #> 344    58  0.997172832 -0.068757696 #> 345    58  0.997172832 -0.092218919 #> 346    58  1.017490848 -0.103949531 #> 347    58  1.037808863 -0.092218919 #> 348    58  1.037808863 -0.068757696 #> 349    59  1.058126878 -0.057027084 #> 350    59  1.037808863 -0.068757696 #> 351    59  1.037808863 -0.092218919 #> 352    59  1.058126878 -0.103949531 #> 353    59  1.078444894 -0.092218919 #> 354    59  1.078444894 -0.068757696 #> 355    60  1.098762909 -0.057027084 #> 356    60  1.078444894 -0.068757696 #> 357    60  1.078444894 -0.092218919 #> 358    60  1.098762909 -0.103949531 #> 359    60  1.119080925 -0.092218919 #> 360    60  1.119080925 -0.068757696 #> 361    61 -0.100000000 -0.021835249 #> 362    61 -0.120318015 -0.033565861 #> 363    61 -0.120318015 -0.057027084 #> 364    61 -0.100000000 -0.068757696 #> 365    61 -0.079681985 -0.057027084 #> 366    61 -0.079681985 -0.033565861 #> 367    62 -0.059363969 -0.021835249 #> 368    62 -0.079681985 -0.033565861 #> 369    62 -0.079681985 -0.057027084 #> 370    62 -0.059363969 -0.068757696 #> 371    62 -0.039045954 -0.057027084 #> 372    62 -0.039045954 -0.033565861 #> 373    63 -0.018727938 -0.021835249 #> 374    63 -0.039045954 -0.033565861 #> 375    63 -0.039045954 -0.057027084 #> 376    63 -0.018727938 -0.068757696 #> 377    63  0.001590077 -0.057027084 #> 378    63  0.001590077 -0.033565861 #> 379    64  0.021908092 -0.021835249 #> 380    64  0.001590077 -0.033565861 #> 381    64  0.001590077 -0.057027084 #> 382    64  0.021908092 -0.068757696 #> 383    64  0.042226108 -0.057027084 #> 384    64  0.042226108 -0.033565861 #> 385    65  0.062544123 -0.021835249 #> 386    65  0.042226108 -0.033565861 #> 387    65  0.042226108 -0.057027084 #> 388    65  0.062544123 -0.068757696 #> 389    65  0.082862139 -0.057027084 #> 390    65  0.082862139 -0.033565861 #> 391    66  0.103180154 -0.021835249 #> 392    66  0.082862139 -0.033565861 #> 393    66  0.082862139 -0.057027084 #> 394    66  0.103180154 -0.068757696 #> 395    66  0.123498170 -0.057027084 #> 396    66  0.123498170 -0.033565861 #> 397    67  0.143816185 -0.021835249 #> 398    67  0.123498170 -0.033565861 #> 399    67  0.123498170 -0.057027084 #> 400    67  0.143816185 -0.068757696 #> 401    67  0.164134200 -0.057027084 #> 402    67  0.164134200 -0.033565861 #> 403    68  0.184452216 -0.021835249 #> 404    68  0.164134200 -0.033565861 #> 405    68  0.164134200 -0.057027084 #> 406    68  0.184452216 -0.068757696 #> 407    68  0.204770231 -0.057027084 #> 408    68  0.204770231 -0.033565861 #> 409    69  0.225088247 -0.021835249 #> 410    69  0.204770231 -0.033565861 #> 411    69  0.204770231 -0.057027084 #> 412    69  0.225088247 -0.068757696 #> 413    69  0.245406262 -0.057027084 #> 414    69  0.245406262 -0.033565861 #> 415    70  0.265724277 -0.021835249 #> 416    70  0.245406262 -0.033565861 #> 417    70  0.245406262 -0.057027084 #> 418    70  0.265724277 -0.068757696 #> 419    70  0.286042293 -0.057027084 #> 420    70  0.286042293 -0.033565861 #> 421    71  0.306360308 -0.021835249 #> 422    71  0.286042293 -0.033565861 #> 423    71  0.286042293 -0.057027084 #> 424    71  0.306360308 -0.068757696 #> 425    71  0.326678324 -0.057027084 #> 426    71  0.326678324 -0.033565861 #> 427    72  0.346996339 -0.021835249 #> 428    72  0.326678324 -0.033565861 #> 429    72  0.326678324 -0.057027084 #> 430    72  0.346996339 -0.068757696 #> 431    72  0.367314354 -0.057027084 #> 432    72  0.367314354 -0.033565861 #> 433    73  0.387632370 -0.021835249 #> 434    73  0.367314354 -0.033565861 #> 435    73  0.367314354 -0.057027084 #> 436    73  0.387632370 -0.068757696 #> 437    73  0.407950385 -0.057027084 #> 438    73  0.407950385 -0.033565861 #> 439    74  0.428268401 -0.021835249 #> 440    74  0.407950385 -0.033565861 #> 441    74  0.407950385 -0.057027084 #> 442    74  0.428268401 -0.068757696 #> 443    74  0.448586416 -0.057027084 #> 444    74  0.448586416 -0.033565861 #> 445    75  0.468904432 -0.021835249 #> 446    75  0.448586416 -0.033565861 #> 447    75  0.448586416 -0.057027084 #> 448    75  0.468904432 -0.068757696 #> 449    75  0.489222447 -0.057027084 #> 450    75  0.489222447 -0.033565861 #> 451    76  0.509540462 -0.021835249 #> 452    76  0.489222447 -0.033565861 #> 453    76  0.489222447 -0.057027084 #> 454    76  0.509540462 -0.068757696 #> 455    76  0.529858478 -0.057027084 #> 456    76  0.529858478 -0.033565861 #> 457    77  0.550176493 -0.021835249 #> 458    77  0.529858478 -0.033565861 #> 459    77  0.529858478 -0.057027084 #> 460    77  0.550176493 -0.068757696 #> 461    77  0.570494509 -0.057027084 #> 462    77  0.570494509 -0.033565861 #> 463    78  0.590812524 -0.021835249 #> 464    78  0.570494509 -0.033565861 #> 465    78  0.570494509 -0.057027084 #> 466    78  0.590812524 -0.068757696 #> 467    78  0.611130539 -0.057027084 #> 468    78  0.611130539 -0.033565861 #> 469    79  0.631448555 -0.021835249 #> 470    79  0.611130539 -0.033565861 #> 471    79  0.611130539 -0.057027084 #> 472    79  0.631448555 -0.068757696 #> 473    79  0.651766570 -0.057027084 #> 474    79  0.651766570 -0.033565861 #> 475    80  0.672084586 -0.021835249 #> 476    80  0.651766570 -0.033565861 #> 477    80  0.651766570 -0.057027084 #> 478    80  0.672084586 -0.068757696 #> 479    80  0.692402601 -0.057027084 #> 480    80  0.692402601 -0.033565861 #> 481    81  0.712720616 -0.021835249 #> 482    81  0.692402601 -0.033565861 #> 483    81  0.692402601 -0.057027084 #> 484    81  0.712720616 -0.068757696 #> 485    81  0.733038632 -0.057027084 #> 486    81  0.733038632 -0.033565861 #> 487    82  0.753356647 -0.021835249 #> 488    82  0.733038632 -0.033565861 #> 489    82  0.733038632 -0.057027084 #> 490    82  0.753356647 -0.068757696 #> 491    82  0.773674663 -0.057027084 #> 492    82  0.773674663 -0.033565861 #> 493    83  0.793992678 -0.021835249 #> 494    83  0.773674663 -0.033565861 #> 495    83  0.773674663 -0.057027084 #> 496    83  0.793992678 -0.068757696 #> 497    83  0.814310694 -0.057027084 #> 498    83  0.814310694 -0.033565861 #> 499    84  0.834628709 -0.021835249 #> 500    84  0.814310694 -0.033565861 #> 501    84  0.814310694 -0.057027084 #> 502    84  0.834628709 -0.068757696 #> 503    84  0.854946724 -0.057027084 #> 504    84  0.854946724 -0.033565861 #> 505    85  0.875264740 -0.021835249 #> 506    85  0.854946724 -0.033565861 #> 507    85  0.854946724 -0.057027084 #> 508    85  0.875264740 -0.068757696 #> 509    85  0.895582755 -0.057027084 #> 510    85  0.895582755 -0.033565861 #> 511    86  0.915900771 -0.021835249 #> 512    86  0.895582755 -0.033565861 #> 513    86  0.895582755 -0.057027084 #> 514    86  0.915900771 -0.068757696 #> 515    86  0.936218786 -0.057027084 #> 516    86  0.936218786 -0.033565861 #> 517    87  0.956536801 -0.021835249 #> 518    87  0.936218786 -0.033565861 #> 519    87  0.936218786 -0.057027084 #> 520    87  0.956536801 -0.068757696 #> 521    87  0.976854817 -0.057027084 #> 522    87  0.976854817 -0.033565861 #> 523    88  0.997172832 -0.021835249 #> 524    88  0.976854817 -0.033565861 #> 525    88  0.976854817 -0.057027084 #> 526    88  0.997172832 -0.068757696 #> 527    88  1.017490848 -0.057027084 #> 528    88  1.017490848 -0.033565861 #> 529    89  1.037808863 -0.021835249 #> 530    89  1.017490848 -0.033565861 #> 531    89  1.017490848 -0.057027084 #> 532    89  1.037808863 -0.068757696 #> 533    89  1.058126878 -0.057027084 #> 534    89  1.058126878 -0.033565861 #> 535    90  1.078444894 -0.021835249 #> 536    90  1.058126878 -0.033565861 #> 537    90  1.058126878 -0.057027084 #> 538    90  1.078444894 -0.068757696 #> 539    90  1.098762909 -0.057027084 #> 540    90  1.098762909 -0.033565861 #> 541    91 -0.079681985  0.013356586 #> 542    91 -0.100000000  0.001625974 #> 543    91 -0.100000000 -0.021835249 #> 544    91 -0.079681985 -0.033565861 #> 545    91 -0.059363969 -0.021835249 #> 546    91 -0.059363969  0.001625974 #> 547    92 -0.039045954  0.013356586 #> 548    92 -0.059363969  0.001625974 #> 549    92 -0.059363969 -0.021835249 #> 550    92 -0.039045954 -0.033565861 #> 551    92 -0.018727938 -0.021835249 #> 552    92 -0.018727938  0.001625974 #> 553    93  0.001590077  0.013356586 #> 554    93 -0.018727938  0.001625974 #> 555    93 -0.018727938 -0.021835249 #> 556    93  0.001590077 -0.033565861 #> 557    93  0.021908092 -0.021835249 #> 558    93  0.021908092  0.001625974 #> 559    94  0.042226108  0.013356586 #> 560    94  0.021908092  0.001625974 #> 561    94  0.021908092 -0.021835249 #> 562    94  0.042226108 -0.033565861 #> 563    94  0.062544123 -0.021835249 #> 564    94  0.062544123  0.001625974 #> 565    95  0.082862139  0.013356586 #> 566    95  0.062544123  0.001625974 #> 567    95  0.062544123 -0.021835249 #> 568    95  0.082862139 -0.033565861 #> 569    95  0.103180154 -0.021835249 #> 570    95  0.103180154  0.001625974 #> 571    96  0.123498170  0.013356586 #> 572    96  0.103180154  0.001625974 #> 573    96  0.103180154 -0.021835249 #> 574    96  0.123498170 -0.033565861 #> 575    96  0.143816185 -0.021835249 #> 576    96  0.143816185  0.001625974 #> 577    97  0.164134200  0.013356586 #> 578    97  0.143816185  0.001625974 #> 579    97  0.143816185 -0.021835249 #> 580    97  0.164134200 -0.033565861 #> 581    97  0.184452216 -0.021835249 #> 582    97  0.184452216  0.001625974 #> 583    98  0.204770231  0.013356586 #> 584    98  0.184452216  0.001625974 #> 585    98  0.184452216 -0.021835249 #> 586    98  0.204770231 -0.033565861 #> 587    98  0.225088247 -0.021835249 #> 588    98  0.225088247  0.001625974 #> 589    99  0.245406262  0.013356586 #> 590    99  0.225088247  0.001625974 #> 591    99  0.225088247 -0.021835249 #> 592    99  0.245406262 -0.033565861 #> 593    99  0.265724277 -0.021835249 #> 594    99  0.265724277  0.001625974 #> 595   100  0.286042293  0.013356586 #> 596   100  0.265724277  0.001625974 #> 597   100  0.265724277 -0.021835249 #> 598   100  0.286042293 -0.033565861 #> 599   100  0.306360308 -0.021835249 #> 600   100  0.306360308  0.001625974 #> 601   101  0.326678324  0.013356586 #> 602   101  0.306360308  0.001625974 #> 603   101  0.306360308 -0.021835249 #> 604   101  0.326678324 -0.033565861 #> 605   101  0.346996339 -0.021835249 #> 606   101  0.346996339  0.001625974 #> 607   102  0.367314354  0.013356586 #> 608   102  0.346996339  0.001625974 #> 609   102  0.346996339 -0.021835249 #> 610   102  0.367314354 -0.033565861 #> 611   102  0.387632370 -0.021835249 #> 612   102  0.387632370  0.001625974 #> 613   103  0.407950385  0.013356586 #> 614   103  0.387632370  0.001625974 #> 615   103  0.387632370 -0.021835249 #> 616   103  0.407950385 -0.033565861 #> 617   103  0.428268401 -0.021835249 #> 618   103  0.428268401  0.001625974 #> 619   104  0.448586416  0.013356586 #> 620   104  0.428268401  0.001625974 #> 621   104  0.428268401 -0.021835249 #> 622   104  0.448586416 -0.033565861 #> 623   104  0.468904432 -0.021835249 #> 624   104  0.468904432  0.001625974 #> 625   105  0.489222447  0.013356586 #> 626   105  0.468904432  0.001625974 #> 627   105  0.468904432 -0.021835249 #> 628   105  0.489222447 -0.033565861 #> 629   105  0.509540462 -0.021835249 #> 630   105  0.509540462  0.001625974 #> 631   106  0.529858478  0.013356586 #> 632   106  0.509540462  0.001625974 #> 633   106  0.509540462 -0.021835249 #> 634   106  0.529858478 -0.033565861 #> 635   106  0.550176493 -0.021835249 #> 636   106  0.550176493  0.001625974 #> 637   107  0.570494509  0.013356586 #> 638   107  0.550176493  0.001625974 #> 639   107  0.550176493 -0.021835249 #> 640   107  0.570494509 -0.033565861 #> 641   107  0.590812524 -0.021835249 #> 642   107  0.590812524  0.001625974 #> 643   108  0.611130539  0.013356586 #> 644   108  0.590812524  0.001625974 #> 645   108  0.590812524 -0.021835249 #> 646   108  0.611130539 -0.033565861 #> 647   108  0.631448555 -0.021835249 #> 648   108  0.631448555  0.001625974 #> 649   109  0.651766570  0.013356586 #> 650   109  0.631448555  0.001625974 #> 651   109  0.631448555 -0.021835249 #> 652   109  0.651766570 -0.033565861 #> 653   109  0.672084586 -0.021835249 #> 654   109  0.672084586  0.001625974 #> 655   110  0.692402601  0.013356586 #> 656   110  0.672084586  0.001625974 #> 657   110  0.672084586 -0.021835249 #> 658   110  0.692402601 -0.033565861 #> 659   110  0.712720616 -0.021835249 #> 660   110  0.712720616  0.001625974 #> 661   111  0.733038632  0.013356586 #> 662   111  0.712720616  0.001625974 #> 663   111  0.712720616 -0.021835249 #> 664   111  0.733038632 -0.033565861 #> 665   111  0.753356647 -0.021835249 #> 666   111  0.753356647  0.001625974 #> 667   112  0.773674663  0.013356586 #> 668   112  0.753356647  0.001625974 #> 669   112  0.753356647 -0.021835249 #> 670   112  0.773674663 -0.033565861 #> 671   112  0.793992678 -0.021835249 #> 672   112  0.793992678  0.001625974 #> 673   113  0.814310694  0.013356586 #> 674   113  0.793992678  0.001625974 #> 675   113  0.793992678 -0.021835249 #> 676   113  0.814310694 -0.033565861 #> 677   113  0.834628709 -0.021835249 #> 678   113  0.834628709  0.001625974 #> 679   114  0.854946724  0.013356586 #> 680   114  0.834628709  0.001625974 #> 681   114  0.834628709 -0.021835249 #> 682   114  0.854946724 -0.033565861 #> 683   114  0.875264740 -0.021835249 #> 684   114  0.875264740  0.001625974 #> 685   115  0.895582755  0.013356586 #> 686   115  0.875264740  0.001625974 #> 687   115  0.875264740 -0.021835249 #> 688   115  0.895582755 -0.033565861 #> 689   115  0.915900771 -0.021835249 #> 690   115  0.915900771  0.001625974 #> 691   116  0.936218786  0.013356586 #> 692   116  0.915900771  0.001625974 #> 693   116  0.915900771 -0.021835249 #> 694   116  0.936218786 -0.033565861 #> 695   116  0.956536801 -0.021835249 #> 696   116  0.956536801  0.001625974 #> 697   117  0.976854817  0.013356586 #> 698   117  0.956536801  0.001625974 #> 699   117  0.956536801 -0.021835249 #> 700   117  0.976854817 -0.033565861 #> 701   117  0.997172832 -0.021835249 #> 702   117  0.997172832  0.001625974 #> 703   118  1.017490848  0.013356586 #> 704   118  0.997172832  0.001625974 #> 705   118  0.997172832 -0.021835249 #> 706   118  1.017490848 -0.033565861 #> 707   118  1.037808863 -0.021835249 #> 708   118  1.037808863  0.001625974 #> 709   119  1.058126878  0.013356586 #> 710   119  1.037808863  0.001625974 #> 711   119  1.037808863 -0.021835249 #> 712   119  1.058126878 -0.033565861 #> 713   119  1.078444894 -0.021835249 #> 714   119  1.078444894  0.001625974 #> 715   120  1.098762909  0.013356586 #> 716   120  1.078444894  0.001625974 #> 717   120  1.078444894 -0.021835249 #> 718   120  1.098762909 -0.033565861 #> 719   120  1.119080925 -0.021835249 #> 720   120  1.119080925  0.001625974 #> 721   121 -0.100000000  0.048548421 #> 722   121 -0.120318015  0.036817809 #> 723   121 -0.120318015  0.013356586 #> 724   121 -0.100000000  0.001625974 #> 725   121 -0.079681985  0.013356586 #> 726   121 -0.079681985  0.036817809 #> 727   122 -0.059363969  0.048548421 #> 728   122 -0.079681985  0.036817809 #> 729   122 -0.079681985  0.013356586 #> 730   122 -0.059363969  0.001625974 #> 731   122 -0.039045954  0.013356586 #> 732   122 -0.039045954  0.036817809 #> 733   123 -0.018727938  0.048548421 #> 734   123 -0.039045954  0.036817809 #> 735   123 -0.039045954  0.013356586 #> 736   123 -0.018727938  0.001625974 #> 737   123  0.001590077  0.013356586 #> 738   123  0.001590077  0.036817809 #> 739   124  0.021908092  0.048548421 #> 740   124  0.001590077  0.036817809 #> 741   124  0.001590077  0.013356586 #> 742   124  0.021908092  0.001625974 #> 743   124  0.042226108  0.013356586 #> 744   124  0.042226108  0.036817809 #> 745   125  0.062544123  0.048548421 #> 746   125  0.042226108  0.036817809 #> 747   125  0.042226108  0.013356586 #> 748   125  0.062544123  0.001625974 #> 749   125  0.082862139  0.013356586 #> 750   125  0.082862139  0.036817809 #> 751   126  0.103180154  0.048548421 #> 752   126  0.082862139  0.036817809 #> 753   126  0.082862139  0.013356586 #> 754   126  0.103180154  0.001625974 #> 755   126  0.123498170  0.013356586 #> 756   126  0.123498170  0.036817809 #> 757   127  0.143816185  0.048548421 #> 758   127  0.123498170  0.036817809 #> 759   127  0.123498170  0.013356586 #> 760   127  0.143816185  0.001625974 #> 761   127  0.164134200  0.013356586 #> 762   127  0.164134200  0.036817809 #> 763   128  0.184452216  0.048548421 #> 764   128  0.164134200  0.036817809 #> 765   128  0.164134200  0.013356586 #> 766   128  0.184452216  0.001625974 #> 767   128  0.204770231  0.013356586 #> 768   128  0.204770231  0.036817809 #> 769   129  0.225088247  0.048548421 #> 770   129  0.204770231  0.036817809 #> 771   129  0.204770231  0.013356586 #> 772   129  0.225088247  0.001625974 #> 773   129  0.245406262  0.013356586 #> 774   129  0.245406262  0.036817809 #> 775   130  0.265724277  0.048548421 #> 776   130  0.245406262  0.036817809 #> 777   130  0.245406262  0.013356586 #> 778   130  0.265724277  0.001625974 #> 779   130  0.286042293  0.013356586 #> 780   130  0.286042293  0.036817809 #> 781   131  0.306360308  0.048548421 #> 782   131  0.286042293  0.036817809 #> 783   131  0.286042293  0.013356586 #> 784   131  0.306360308  0.001625974 #> 785   131  0.326678324  0.013356586 #> 786   131  0.326678324  0.036817809 #> 787   132  0.346996339  0.048548421 #> 788   132  0.326678324  0.036817809 #> 789   132  0.326678324  0.013356586 #> 790   132  0.346996339  0.001625974 #> 791   132  0.367314354  0.013356586 #> 792   132  0.367314354  0.036817809 #> 793   133  0.387632370  0.048548421 #> 794   133  0.367314354  0.036817809 #> 795   133  0.367314354  0.013356586 #> 796   133  0.387632370  0.001625974 #> 797   133  0.407950385  0.013356586 #> 798   133  0.407950385  0.036817809 #> 799   134  0.428268401  0.048548421 #> 800   134  0.407950385  0.036817809 #> 801   134  0.407950385  0.013356586 #> 802   134  0.428268401  0.001625974 #> 803   134  0.448586416  0.013356586 #> 804   134  0.448586416  0.036817809 #> 805   135  0.468904432  0.048548421 #> 806   135  0.448586416  0.036817809 #> 807   135  0.448586416  0.013356586 #> 808   135  0.468904432  0.001625974 #> 809   135  0.489222447  0.013356586 #> 810   135  0.489222447  0.036817809 #> 811   136  0.509540462  0.048548421 #> 812   136  0.489222447  0.036817809 #> 813   136  0.489222447  0.013356586 #> 814   136  0.509540462  0.001625974 #> 815   136  0.529858478  0.013356586 #> 816   136  0.529858478  0.036817809 #> 817   137  0.550176493  0.048548421 #> 818   137  0.529858478  0.036817809 #> 819   137  0.529858478  0.013356586 #> 820   137  0.550176493  0.001625974 #> 821   137  0.570494509  0.013356586 #> 822   137  0.570494509  0.036817809 #> 823   138  0.590812524  0.048548421 #> 824   138  0.570494509  0.036817809 #> 825   138  0.570494509  0.013356586 #> 826   138  0.590812524  0.001625974 #> 827   138  0.611130539  0.013356586 #> 828   138  0.611130539  0.036817809 #> 829   139  0.631448555  0.048548421 #> 830   139  0.611130539  0.036817809 #> 831   139  0.611130539  0.013356586 #> 832   139  0.631448555  0.001625974 #> 833   139  0.651766570  0.013356586 #> 834   139  0.651766570  0.036817809 #> 835   140  0.672084586  0.048548421 #> 836   140  0.651766570  0.036817809 #> 837   140  0.651766570  0.013356586 #> 838   140  0.672084586  0.001625974 #> 839   140  0.692402601  0.013356586 #> 840   140  0.692402601  0.036817809 #> 841   141  0.712720616  0.048548421 #> 842   141  0.692402601  0.036817809 #> 843   141  0.692402601  0.013356586 #> 844   141  0.712720616  0.001625974 #> 845   141  0.733038632  0.013356586 #> 846   141  0.733038632  0.036817809 #> 847   142  0.753356647  0.048548421 #> 848   142  0.733038632  0.036817809 #> 849   142  0.733038632  0.013356586 #> 850   142  0.753356647  0.001625974 #> 851   142  0.773674663  0.013356586 #> 852   142  0.773674663  0.036817809 #> 853   143  0.793992678  0.048548421 #> 854   143  0.773674663  0.036817809 #> 855   143  0.773674663  0.013356586 #> 856   143  0.793992678  0.001625974 #> 857   143  0.814310694  0.013356586 #> 858   143  0.814310694  0.036817809 #> 859   144  0.834628709  0.048548421 #> 860   144  0.814310694  0.036817809 #> 861   144  0.814310694  0.013356586 #> 862   144  0.834628709  0.001625974 #> 863   144  0.854946724  0.013356586 #> 864   144  0.854946724  0.036817809 #> 865   145  0.875264740  0.048548421 #> 866   145  0.854946724  0.036817809 #> 867   145  0.854946724  0.013356586 #> 868   145  0.875264740  0.001625974 #> 869   145  0.895582755  0.013356586 #> 870   145  0.895582755  0.036817809 #> 871   146  0.915900771  0.048548421 #> 872   146  0.895582755  0.036817809 #> 873   146  0.895582755  0.013356586 #> 874   146  0.915900771  0.001625974 #> 875   146  0.936218786  0.013356586 #> 876   146  0.936218786  0.036817809 #> 877   147  0.956536801  0.048548421 #> 878   147  0.936218786  0.036817809 #> 879   147  0.936218786  0.013356586 #> 880   147  0.956536801  0.001625974 #> 881   147  0.976854817  0.013356586 #> 882   147  0.976854817  0.036817809 #> 883   148  0.997172832  0.048548421 #> 884   148  0.976854817  0.036817809 #> 885   148  0.976854817  0.013356586 #> 886   148  0.997172832  0.001625974 #> 887   148  1.017490848  0.013356586 #> 888   148  1.017490848  0.036817809 #> 889   149  1.037808863  0.048548421 #> 890   149  1.017490848  0.036817809 #> 891   149  1.017490848  0.013356586 #> 892   149  1.037808863  0.001625974 #> 893   149  1.058126878  0.013356586 #> 894   149  1.058126878  0.036817809 #> 895   150  1.078444894  0.048548421 #> 896   150  1.058126878  0.036817809 #> 897   150  1.058126878  0.013356586 #> 898   150  1.078444894  0.001625974 #> 899   150  1.098762909  0.013356586 #> 900   150  1.098762909  0.036817809 #> 901   151 -0.079681985  0.083740256 #> 902   151 -0.100000000  0.072009644 #> 903   151 -0.100000000  0.048548421 #> 904   151 -0.079681985  0.036817809 #> 905   151 -0.059363969  0.048548421 #> 906   151 -0.059363969  0.072009644 #> 907   152 -0.039045954  0.083740256 #> 908   152 -0.059363969  0.072009644 #> 909   152 -0.059363969  0.048548421 #> 910   152 -0.039045954  0.036817809 #> 911   152 -0.018727938  0.048548421 #> 912   152 -0.018727938  0.072009644 #> 913   153  0.001590077  0.083740256 #> 914   153 -0.018727938  0.072009644 #> 915   153 -0.018727938  0.048548421 #> 916   153  0.001590077  0.036817809 #> 917   153  0.021908092  0.048548421 #> 918   153  0.021908092  0.072009644 #> 919   154  0.042226108  0.083740256 #> 920   154  0.021908092  0.072009644 #> 921   154  0.021908092  0.048548421 #> 922   154  0.042226108  0.036817809 #> 923   154  0.062544123  0.048548421 #> 924   154  0.062544123  0.072009644 #> 925   155  0.082862139  0.083740256 #> 926   155  0.062544123  0.072009644 #> 927   155  0.062544123  0.048548421 #> 928   155  0.082862139  0.036817809 #> 929   155  0.103180154  0.048548421 #> 930   155  0.103180154  0.072009644 #> 931   156  0.123498170  0.083740256 #> 932   156  0.103180154  0.072009644 #> 933   156  0.103180154  0.048548421 #> 934   156  0.123498170  0.036817809 #> 935   156  0.143816185  0.048548421 #> 936   156  0.143816185  0.072009644 #> 937   157  0.164134200  0.083740256 #> 938   157  0.143816185  0.072009644 #> 939   157  0.143816185  0.048548421 #> 940   157  0.164134200  0.036817809 #> 941   157  0.184452216  0.048548421 #> 942   157  0.184452216  0.072009644 #> 943   158  0.204770231  0.083740256 #> 944   158  0.184452216  0.072009644 #> 945   158  0.184452216  0.048548421 #> 946   158  0.204770231  0.036817809 #> 947   158  0.225088247  0.048548421 #> 948   158  0.225088247  0.072009644 #> 949   159  0.245406262  0.083740256 #> 950   159  0.225088247  0.072009644 #> 951   159  0.225088247  0.048548421 #> 952   159  0.245406262  0.036817809 #> 953   159  0.265724277  0.048548421 #> 954   159  0.265724277  0.072009644 #> 955   160  0.286042293  0.083740256 #> 956   160  0.265724277  0.072009644 #> 957   160  0.265724277  0.048548421 #> 958   160  0.286042293  0.036817809 #> 959   160  0.306360308  0.048548421 #> 960   160  0.306360308  0.072009644 #> 961   161  0.326678324  0.083740256 #> 962   161  0.306360308  0.072009644 #> 963   161  0.306360308  0.048548421 #> 964   161  0.326678324  0.036817809 #> 965   161  0.346996339  0.048548421 #> 966   161  0.346996339  0.072009644 #> 967   162  0.367314354  0.083740256 #> 968   162  0.346996339  0.072009644 #> 969   162  0.346996339  0.048548421 #> 970   162  0.367314354  0.036817809 #> 971   162  0.387632370  0.048548421 #> 972   162  0.387632370  0.072009644 #> 973   163  0.407950385  0.083740256 #> 974   163  0.387632370  0.072009644 #> 975   163  0.387632370  0.048548421 #> 976   163  0.407950385  0.036817809 #> 977   163  0.428268401  0.048548421 #> 978   163  0.428268401  0.072009644 #> 979   164  0.448586416  0.083740256 #> 980   164  0.428268401  0.072009644 #> 981   164  0.428268401  0.048548421 #> 982   164  0.448586416  0.036817809 #> 983   164  0.468904432  0.048548421 #> 984   164  0.468904432  0.072009644 #> 985   165  0.489222447  0.083740256 #> 986   165  0.468904432  0.072009644 #> 987   165  0.468904432  0.048548421 #> 988   165  0.489222447  0.036817809 #> 989   165  0.509540462  0.048548421 #> 990   165  0.509540462  0.072009644 #> 991   166  0.529858478  0.083740256 #> 992   166  0.509540462  0.072009644 #> 993   166  0.509540462  0.048548421 #> 994   166  0.529858478  0.036817809 #> 995   166  0.550176493  0.048548421 #> 996   166  0.550176493  0.072009644 #> 997   167  0.570494509  0.083740256 #> 998   167  0.550176493  0.072009644 #> 999   167  0.550176493  0.048548421 #> 1000  167  0.570494509  0.036817809 #> 1001  167  0.590812524  0.048548421 #> 1002  167  0.590812524  0.072009644 #> 1003  168  0.611130539  0.083740256 #> 1004  168  0.590812524  0.072009644 #> 1005  168  0.590812524  0.048548421 #> 1006  168  0.611130539  0.036817809 #> 1007  168  0.631448555  0.048548421 #> 1008  168  0.631448555  0.072009644 #> 1009  169  0.651766570  0.083740256 #> 1010  169  0.631448555  0.072009644 #> 1011  169  0.631448555  0.048548421 #> 1012  169  0.651766570  0.036817809 #> 1013  169  0.672084586  0.048548421 #> 1014  169  0.672084586  0.072009644 #> 1015  170  0.692402601  0.083740256 #> 1016  170  0.672084586  0.072009644 #> 1017  170  0.672084586  0.048548421 #> 1018  170  0.692402601  0.036817809 #> 1019  170  0.712720616  0.048548421 #> 1020  170  0.712720616  0.072009644 #> 1021  171  0.733038632  0.083740256 #> 1022  171  0.712720616  0.072009644 #> 1023  171  0.712720616  0.048548421 #> 1024  171  0.733038632  0.036817809 #> 1025  171  0.753356647  0.048548421 #> 1026  171  0.753356647  0.072009644 #> 1027  172  0.773674663  0.083740256 #> 1028  172  0.753356647  0.072009644 #> 1029  172  0.753356647  0.048548421 #> 1030  172  0.773674663  0.036817809 #> 1031  172  0.793992678  0.048548421 #> 1032  172  0.793992678  0.072009644 #> 1033  173  0.814310694  0.083740256 #> 1034  173  0.793992678  0.072009644 #> 1035  173  0.793992678  0.048548421 #> 1036  173  0.814310694  0.036817809 #> 1037  173  0.834628709  0.048548421 #> 1038  173  0.834628709  0.072009644 #> 1039  174  0.854946724  0.083740256 #> 1040  174  0.834628709  0.072009644 #> 1041  174  0.834628709  0.048548421 #> 1042  174  0.854946724  0.036817809 #> 1043  174  0.875264740  0.048548421 #> 1044  174  0.875264740  0.072009644 #> 1045  175  0.895582755  0.083740256 #> 1046  175  0.875264740  0.072009644 #> 1047  175  0.875264740  0.048548421 #> 1048  175  0.895582755  0.036817809 #> 1049  175  0.915900771  0.048548421 #> 1050  175  0.915900771  0.072009644 #> 1051  176  0.936218786  0.083740256 #> 1052  176  0.915900771  0.072009644 #> 1053  176  0.915900771  0.048548421 #> 1054  176  0.936218786  0.036817809 #> 1055  176  0.956536801  0.048548421 #> 1056  176  0.956536801  0.072009644 #> 1057  177  0.976854817  0.083740256 #> 1058  177  0.956536801  0.072009644 #> 1059  177  0.956536801  0.048548421 #> 1060  177  0.976854817  0.036817809 #> 1061  177  0.997172832  0.048548421 #> 1062  177  0.997172832  0.072009644 #> 1063  178  1.017490848  0.083740256 #> 1064  178  0.997172832  0.072009644 #> 1065  178  0.997172832  0.048548421 #> 1066  178  1.017490848  0.036817809 #> 1067  178  1.037808863  0.048548421 #> 1068  178  1.037808863  0.072009644 #> 1069  179  1.058126878  0.083740256 #> 1070  179  1.037808863  0.072009644 #> 1071  179  1.037808863  0.048548421 #> 1072  179  1.058126878  0.036817809 #> 1073  179  1.078444894  0.048548421 #> 1074  179  1.078444894  0.072009644 #> 1075  180  1.098762909  0.083740256 #> 1076  180  1.078444894  0.072009644 #> 1077  180  1.078444894  0.048548421 #> 1078  180  1.098762909  0.036817809 #> 1079  180  1.119080925  0.048548421 #> 1080  180  1.119080925  0.072009644 #> 1081  181 -0.100000000  0.118932091 #> 1082  181 -0.120318015  0.107201479 #> 1083  181 -0.120318015  0.083740256 #> 1084  181 -0.100000000  0.072009644 #> 1085  181 -0.079681985  0.083740256 #> 1086  181 -0.079681985  0.107201479 #> 1087  182 -0.059363969  0.118932091 #> 1088  182 -0.079681985  0.107201479 #> 1089  182 -0.079681985  0.083740256 #> 1090  182 -0.059363969  0.072009644 #> 1091  182 -0.039045954  0.083740256 #> 1092  182 -0.039045954  0.107201479 #> 1093  183 -0.018727938  0.118932091 #> 1094  183 -0.039045954  0.107201479 #> 1095  183 -0.039045954  0.083740256 #> 1096  183 -0.018727938  0.072009644 #> 1097  183  0.001590077  0.083740256 #> 1098  183  0.001590077  0.107201479 #> 1099  184  0.021908092  0.118932091 #> 1100  184  0.001590077  0.107201479 #> 1101  184  0.001590077  0.083740256 #> 1102  184  0.021908092  0.072009644 #> 1103  184  0.042226108  0.083740256 #> 1104  184  0.042226108  0.107201479 #> 1105  185  0.062544123  0.118932091 #> 1106  185  0.042226108  0.107201479 #> 1107  185  0.042226108  0.083740256 #> 1108  185  0.062544123  0.072009644 #> 1109  185  0.082862139  0.083740256 #> 1110  185  0.082862139  0.107201479 #> 1111  186  0.103180154  0.118932091 #> 1112  186  0.082862139  0.107201479 #> 1113  186  0.082862139  0.083740256 #> 1114  186  0.103180154  0.072009644 #> 1115  186  0.123498170  0.083740256 #> 1116  186  0.123498170  0.107201479 #> 1117  187  0.143816185  0.118932091 #> 1118  187  0.123498170  0.107201479 #> 1119  187  0.123498170  0.083740256 #> 1120  187  0.143816185  0.072009644 #> 1121  187  0.164134200  0.083740256 #> 1122  187  0.164134200  0.107201479 #> 1123  188  0.184452216  0.118932091 #> 1124  188  0.164134200  0.107201479 #> 1125  188  0.164134200  0.083740256 #> 1126  188  0.184452216  0.072009644 #> 1127  188  0.204770231  0.083740256 #> 1128  188  0.204770231  0.107201479 #> 1129  189  0.225088247  0.118932091 #> 1130  189  0.204770231  0.107201479 #> 1131  189  0.204770231  0.083740256 #> 1132  189  0.225088247  0.072009644 #> 1133  189  0.245406262  0.083740256 #> 1134  189  0.245406262  0.107201479 #> 1135  190  0.265724277  0.118932091 #> 1136  190  0.245406262  0.107201479 #> 1137  190  0.245406262  0.083740256 #> 1138  190  0.265724277  0.072009644 #> 1139  190  0.286042293  0.083740256 #> 1140  190  0.286042293  0.107201479 #> 1141  191  0.306360308  0.118932091 #> 1142  191  0.286042293  0.107201479 #> 1143  191  0.286042293  0.083740256 #> 1144  191  0.306360308  0.072009644 #> 1145  191  0.326678324  0.083740256 #> 1146  191  0.326678324  0.107201479 #> 1147  192  0.346996339  0.118932091 #> 1148  192  0.326678324  0.107201479 #> 1149  192  0.326678324  0.083740256 #> 1150  192  0.346996339  0.072009644 #> 1151  192  0.367314354  0.083740256 #> 1152  192  0.367314354  0.107201479 #> 1153  193  0.387632370  0.118932091 #> 1154  193  0.367314354  0.107201479 #> 1155  193  0.367314354  0.083740256 #> 1156  193  0.387632370  0.072009644 #> 1157  193  0.407950385  0.083740256 #> 1158  193  0.407950385  0.107201479 #> 1159  194  0.428268401  0.118932091 #> 1160  194  0.407950385  0.107201479 #> 1161  194  0.407950385  0.083740256 #> 1162  194  0.428268401  0.072009644 #> 1163  194  0.448586416  0.083740256 #> 1164  194  0.448586416  0.107201479 #> 1165  195  0.468904432  0.118932091 #> 1166  195  0.448586416  0.107201479 #> 1167  195  0.448586416  0.083740256 #> 1168  195  0.468904432  0.072009644 #> 1169  195  0.489222447  0.083740256 #> 1170  195  0.489222447  0.107201479 #> 1171  196  0.509540462  0.118932091 #> 1172  196  0.489222447  0.107201479 #> 1173  196  0.489222447  0.083740256 #> 1174  196  0.509540462  0.072009644 #> 1175  196  0.529858478  0.083740256 #> 1176  196  0.529858478  0.107201479 #> 1177  197  0.550176493  0.118932091 #> 1178  197  0.529858478  0.107201479 #> 1179  197  0.529858478  0.083740256 #> 1180  197  0.550176493  0.072009644 #> 1181  197  0.570494509  0.083740256 #> 1182  197  0.570494509  0.107201479 #> 1183  198  0.590812524  0.118932091 #> 1184  198  0.570494509  0.107201479 #> 1185  198  0.570494509  0.083740256 #> 1186  198  0.590812524  0.072009644 #> 1187  198  0.611130539  0.083740256 #> 1188  198  0.611130539  0.107201479 #> 1189  199  0.631448555  0.118932091 #> 1190  199  0.611130539  0.107201479 #> 1191  199  0.611130539  0.083740256 #> 1192  199  0.631448555  0.072009644 #> 1193  199  0.651766570  0.083740256 #> 1194  199  0.651766570  0.107201479 #> 1195  200  0.672084586  0.118932091 #> 1196  200  0.651766570  0.107201479 #> 1197  200  0.651766570  0.083740256 #> 1198  200  0.672084586  0.072009644 #> 1199  200  0.692402601  0.083740256 #> 1200  200  0.692402601  0.107201479 #> 1201  201  0.712720616  0.118932091 #> 1202  201  0.692402601  0.107201479 #> 1203  201  0.692402601  0.083740256 #> 1204  201  0.712720616  0.072009644 #> 1205  201  0.733038632  0.083740256 #> 1206  201  0.733038632  0.107201479 #> 1207  202  0.753356647  0.118932091 #> 1208  202  0.733038632  0.107201479 #> 1209  202  0.733038632  0.083740256 #> 1210  202  0.753356647  0.072009644 #> 1211  202  0.773674663  0.083740256 #> 1212  202  0.773674663  0.107201479 #> 1213  203  0.793992678  0.118932091 #> 1214  203  0.773674663  0.107201479 #> 1215  203  0.773674663  0.083740256 #> 1216  203  0.793992678  0.072009644 #> 1217  203  0.814310694  0.083740256 #> 1218  203  0.814310694  0.107201479 #> 1219  204  0.834628709  0.118932091 #> 1220  204  0.814310694  0.107201479 #> 1221  204  0.814310694  0.083740256 #> 1222  204  0.834628709  0.072009644 #> 1223  204  0.854946724  0.083740256 #> 1224  204  0.854946724  0.107201479 #> 1225  205  0.875264740  0.118932091 #> 1226  205  0.854946724  0.107201479 #> 1227  205  0.854946724  0.083740256 #> 1228  205  0.875264740  0.072009644 #> 1229  205  0.895582755  0.083740256 #> 1230  205  0.895582755  0.107201479 #> 1231  206  0.915900771  0.118932091 #> 1232  206  0.895582755  0.107201479 #> 1233  206  0.895582755  0.083740256 #> 1234  206  0.915900771  0.072009644 #> 1235  206  0.936218786  0.083740256 #> 1236  206  0.936218786  0.107201479 #> 1237  207  0.956536801  0.118932091 #> 1238  207  0.936218786  0.107201479 #> 1239  207  0.936218786  0.083740256 #> 1240  207  0.956536801  0.072009644 #> 1241  207  0.976854817  0.083740256 #> 1242  207  0.976854817  0.107201479 #> 1243  208  0.997172832  0.118932091 #> 1244  208  0.976854817  0.107201479 #> 1245  208  0.976854817  0.083740256 #> 1246  208  0.997172832  0.072009644 #> 1247  208  1.017490848  0.083740256 #> 1248  208  1.017490848  0.107201479 #> 1249  209  1.037808863  0.118932091 #> 1250  209  1.017490848  0.107201479 #> 1251  209  1.017490848  0.083740256 #> 1252  209  1.037808863  0.072009644 #> 1253  209  1.058126878  0.083740256 #> 1254  209  1.058126878  0.107201479 #> 1255  210  1.078444894  0.118932091 #> 1256  210  1.058126878  0.107201479 #> 1257  210  1.058126878  0.083740256 #> 1258  210  1.078444894  0.072009644 #> 1259  210  1.098762909  0.083740256 #> 1260  210  1.098762909  0.107201479 #> 1261  211 -0.079681985  0.154123926 #> 1262  211 -0.100000000  0.142393314 #> 1263  211 -0.100000000  0.118932091 #> 1264  211 -0.079681985  0.107201479 #> 1265  211 -0.059363969  0.118932091 #> 1266  211 -0.059363969  0.142393314 #> 1267  212 -0.039045954  0.154123926 #> 1268  212 -0.059363969  0.142393314 #> 1269  212 -0.059363969  0.118932091 #> 1270  212 -0.039045954  0.107201479 #> 1271  212 -0.018727938  0.118932091 #> 1272  212 -0.018727938  0.142393314 #> 1273  213  0.001590077  0.154123926 #> 1274  213 -0.018727938  0.142393314 #> 1275  213 -0.018727938  0.118932091 #> 1276  213  0.001590077  0.107201479 #> 1277  213  0.021908092  0.118932091 #> 1278  213  0.021908092  0.142393314 #> 1279  214  0.042226108  0.154123926 #> 1280  214  0.021908092  0.142393314 #> 1281  214  0.021908092  0.118932091 #> 1282  214  0.042226108  0.107201479 #> 1283  214  0.062544123  0.118932091 #> 1284  214  0.062544123  0.142393314 #> 1285  215  0.082862139  0.154123926 #> 1286  215  0.062544123  0.142393314 #> 1287  215  0.062544123  0.118932091 #> 1288  215  0.082862139  0.107201479 #> 1289  215  0.103180154  0.118932091 #> 1290  215  0.103180154  0.142393314 #> 1291  216  0.123498170  0.154123926 #> 1292  216  0.103180154  0.142393314 #> 1293  216  0.103180154  0.118932091 #> 1294  216  0.123498170  0.107201479 #> 1295  216  0.143816185  0.118932091 #> 1296  216  0.143816185  0.142393314 #> 1297  217  0.164134200  0.154123926 #> 1298  217  0.143816185  0.142393314 #> 1299  217  0.143816185  0.118932091 #> 1300  217  0.164134200  0.107201479 #> 1301  217  0.184452216  0.118932091 #> 1302  217  0.184452216  0.142393314 #> 1303  218  0.204770231  0.154123926 #> 1304  218  0.184452216  0.142393314 #> 1305  218  0.184452216  0.118932091 #> 1306  218  0.204770231  0.107201479 #> 1307  218  0.225088247  0.118932091 #> 1308  218  0.225088247  0.142393314 #> 1309  219  0.245406262  0.154123926 #> 1310  219  0.225088247  0.142393314 #> 1311  219  0.225088247  0.118932091 #> 1312  219  0.245406262  0.107201479 #> 1313  219  0.265724277  0.118932091 #> 1314  219  0.265724277  0.142393314 #> 1315  220  0.286042293  0.154123926 #> 1316  220  0.265724277  0.142393314 #> 1317  220  0.265724277  0.118932091 #> 1318  220  0.286042293  0.107201479 #> 1319  220  0.306360308  0.118932091 #> 1320  220  0.306360308  0.142393314 #> 1321  221  0.326678324  0.154123926 #> 1322  221  0.306360308  0.142393314 #> 1323  221  0.306360308  0.118932091 #> 1324  221  0.326678324  0.107201479 #> 1325  221  0.346996339  0.118932091 #> 1326  221  0.346996339  0.142393314 #> 1327  222  0.367314354  0.154123926 #> 1328  222  0.346996339  0.142393314 #> 1329  222  0.346996339  0.118932091 #> 1330  222  0.367314354  0.107201479 #> 1331  222  0.387632370  0.118932091 #> 1332  222  0.387632370  0.142393314 #> 1333  223  0.407950385  0.154123926 #> 1334  223  0.387632370  0.142393314 #> 1335  223  0.387632370  0.118932091 #> 1336  223  0.407950385  0.107201479 #> 1337  223  0.428268401  0.118932091 #> 1338  223  0.428268401  0.142393314 #> 1339  224  0.448586416  0.154123926 #> 1340  224  0.428268401  0.142393314 #> 1341  224  0.428268401  0.118932091 #> 1342  224  0.448586416  0.107201479 #> 1343  224  0.468904432  0.118932091 #> 1344  224  0.468904432  0.142393314 #> 1345  225  0.489222447  0.154123926 #> 1346  225  0.468904432  0.142393314 #> 1347  225  0.468904432  0.118932091 #> 1348  225  0.489222447  0.107201479 #> 1349  225  0.509540462  0.118932091 #> 1350  225  0.509540462  0.142393314 #> 1351  226  0.529858478  0.154123926 #> 1352  226  0.509540462  0.142393314 #> 1353  226  0.509540462  0.118932091 #> 1354  226  0.529858478  0.107201479 #> 1355  226  0.550176493  0.118932091 #> 1356  226  0.550176493  0.142393314 #> 1357  227  0.570494509  0.154123926 #> 1358  227  0.550176493  0.142393314 #> 1359  227  0.550176493  0.118932091 #> 1360  227  0.570494509  0.107201479 #> 1361  227  0.590812524  0.118932091 #> 1362  227  0.590812524  0.142393314 #> 1363  228  0.611130539  0.154123926 #> 1364  228  0.590812524  0.142393314 #> 1365  228  0.590812524  0.118932091 #> 1366  228  0.611130539  0.107201479 #> 1367  228  0.631448555  0.118932091 #> 1368  228  0.631448555  0.142393314 #> 1369  229  0.651766570  0.154123926 #> 1370  229  0.631448555  0.142393314 #> 1371  229  0.631448555  0.118932091 #> 1372  229  0.651766570  0.107201479 #> 1373  229  0.672084586  0.118932091 #> 1374  229  0.672084586  0.142393314 #> 1375  230  0.692402601  0.154123926 #> 1376  230  0.672084586  0.142393314 #> 1377  230  0.672084586  0.118932091 #> 1378  230  0.692402601  0.107201479 #> 1379  230  0.712720616  0.118932091 #> 1380  230  0.712720616  0.142393314 #> 1381  231  0.733038632  0.154123926 #> 1382  231  0.712720616  0.142393314 #> 1383  231  0.712720616  0.118932091 #> 1384  231  0.733038632  0.107201479 #> 1385  231  0.753356647  0.118932091 #> 1386  231  0.753356647  0.142393314 #> 1387  232  0.773674663  0.154123926 #> 1388  232  0.753356647  0.142393314 #> 1389  232  0.753356647  0.118932091 #> 1390  232  0.773674663  0.107201479 #> 1391  232  0.793992678  0.118932091 #> 1392  232  0.793992678  0.142393314 #> 1393  233  0.814310694  0.154123926 #> 1394  233  0.793992678  0.142393314 #> 1395  233  0.793992678  0.118932091 #> 1396  233  0.814310694  0.107201479 #> 1397  233  0.834628709  0.118932091 #> 1398  233  0.834628709  0.142393314 #> 1399  234  0.854946724  0.154123926 #> 1400  234  0.834628709  0.142393314 #> 1401  234  0.834628709  0.118932091 #> 1402  234  0.854946724  0.107201479 #> 1403  234  0.875264740  0.118932091 #> 1404  234  0.875264740  0.142393314 #> 1405  235  0.895582755  0.154123926 #> 1406  235  0.875264740  0.142393314 #> 1407  235  0.875264740  0.118932091 #> 1408  235  0.895582755  0.107201479 #> 1409  235  0.915900771  0.118932091 #> 1410  235  0.915900771  0.142393314 #> 1411  236  0.936218786  0.154123926 #> 1412  236  0.915900771  0.142393314 #> 1413  236  0.915900771  0.118932091 #> 1414  236  0.936218786  0.107201479 #> 1415  236  0.956536801  0.118932091 #> 1416  236  0.956536801  0.142393314 #> 1417  237  0.976854817  0.154123926 #> 1418  237  0.956536801  0.142393314 #> 1419  237  0.956536801  0.118932091 #> 1420  237  0.976854817  0.107201479 #> 1421  237  0.997172832  0.118932091 #> 1422  237  0.997172832  0.142393314 #> 1423  238  1.017490848  0.154123926 #> 1424  238  0.997172832  0.142393314 #> 1425  238  0.997172832  0.118932091 #> 1426  238  1.017490848  0.107201479 #> 1427  238  1.037808863  0.118932091 #> 1428  238  1.037808863  0.142393314 #> 1429  239  1.058126878  0.154123926 #> 1430  239  1.037808863  0.142393314 #> 1431  239  1.037808863  0.118932091 #> 1432  239  1.058126878  0.107201479 #> 1433  239  1.078444894  0.118932091 #> 1434  239  1.078444894  0.142393314 #> 1435  240  1.098762909  0.154123926 #> 1436  240  1.078444894  0.142393314 #> 1437  240  1.078444894  0.118932091 #> 1438  240  1.098762909  0.107201479 #> 1439  240  1.119080925  0.118932091 #> 1440  240  1.119080925  0.142393314 #> 1441  241 -0.100000000  0.189315761 #> 1442  241 -0.120318015  0.177585149 #> 1443  241 -0.120318015  0.154123926 #> 1444  241 -0.100000000  0.142393314 #> 1445  241 -0.079681985  0.154123926 #> 1446  241 -0.079681985  0.177585149 #> 1447  242 -0.059363969  0.189315761 #> 1448  242 -0.079681985  0.177585149 #> 1449  242 -0.079681985  0.154123926 #> 1450  242 -0.059363969  0.142393314 #> 1451  242 -0.039045954  0.154123926 #> 1452  242 -0.039045954  0.177585149 #> 1453  243 -0.018727938  0.189315761 #> 1454  243 -0.039045954  0.177585149 #> 1455  243 -0.039045954  0.154123926 #> 1456  243 -0.018727938  0.142393314 #> 1457  243  0.001590077  0.154123926 #> 1458  243  0.001590077  0.177585149 #> 1459  244  0.021908092  0.189315761 #> 1460  244  0.001590077  0.177585149 #> 1461  244  0.001590077  0.154123926 #> 1462  244  0.021908092  0.142393314 #> 1463  244  0.042226108  0.154123926 #> 1464  244  0.042226108  0.177585149 #> 1465  245  0.062544123  0.189315761 #> 1466  245  0.042226108  0.177585149 #> 1467  245  0.042226108  0.154123926 #> 1468  245  0.062544123  0.142393314 #> 1469  245  0.082862139  0.154123926 #> 1470  245  0.082862139  0.177585149 #> 1471  246  0.103180154  0.189315761 #> 1472  246  0.082862139  0.177585149 #> 1473  246  0.082862139  0.154123926 #> 1474  246  0.103180154  0.142393314 #> 1475  246  0.123498170  0.154123926 #> 1476  246  0.123498170  0.177585149 #> 1477  247  0.143816185  0.189315761 #> 1478  247  0.123498170  0.177585149 #> 1479  247  0.123498170  0.154123926 #> 1480  247  0.143816185  0.142393314 #> 1481  247  0.164134200  0.154123926 #> 1482  247  0.164134200  0.177585149 #> 1483  248  0.184452216  0.189315761 #> 1484  248  0.164134200  0.177585149 #> 1485  248  0.164134200  0.154123926 #> 1486  248  0.184452216  0.142393314 #> 1487  248  0.204770231  0.154123926 #> 1488  248  0.204770231  0.177585149 #> 1489  249  0.225088247  0.189315761 #> 1490  249  0.204770231  0.177585149 #> 1491  249  0.204770231  0.154123926 #> 1492  249  0.225088247  0.142393314 #> 1493  249  0.245406262  0.154123926 #> 1494  249  0.245406262  0.177585149 #> 1495  250  0.265724277  0.189315761 #> 1496  250  0.245406262  0.177585149 #> 1497  250  0.245406262  0.154123926 #> 1498  250  0.265724277  0.142393314 #> 1499  250  0.286042293  0.154123926 #> 1500  250  0.286042293  0.177585149 #> 1501  251  0.306360308  0.189315761 #> 1502  251  0.286042293  0.177585149 #> 1503  251  0.286042293  0.154123926 #> 1504  251  0.306360308  0.142393314 #> 1505  251  0.326678324  0.154123926 #> 1506  251  0.326678324  0.177585149 #> 1507  252  0.346996339  0.189315761 #> 1508  252  0.326678324  0.177585149 #> 1509  252  0.326678324  0.154123926 #> 1510  252  0.346996339  0.142393314 #> 1511  252  0.367314354  0.154123926 #> 1512  252  0.367314354  0.177585149 #> 1513  253  0.387632370  0.189315761 #> 1514  253  0.367314354  0.177585149 #> 1515  253  0.367314354  0.154123926 #> 1516  253  0.387632370  0.142393314 #> 1517  253  0.407950385  0.154123926 #> 1518  253  0.407950385  0.177585149 #> 1519  254  0.428268401  0.189315761 #> 1520  254  0.407950385  0.177585149 #> 1521  254  0.407950385  0.154123926 #> 1522  254  0.428268401  0.142393314 #> 1523  254  0.448586416  0.154123926 #> 1524  254  0.448586416  0.177585149 #> 1525  255  0.468904432  0.189315761 #> 1526  255  0.448586416  0.177585149 #> 1527  255  0.448586416  0.154123926 #> 1528  255  0.468904432  0.142393314 #> 1529  255  0.489222447  0.154123926 #> 1530  255  0.489222447  0.177585149 #> 1531  256  0.509540462  0.189315761 #> 1532  256  0.489222447  0.177585149 #> 1533  256  0.489222447  0.154123926 #> 1534  256  0.509540462  0.142393314 #> 1535  256  0.529858478  0.154123926 #> 1536  256  0.529858478  0.177585149 #> 1537  257  0.550176493  0.189315761 #> 1538  257  0.529858478  0.177585149 #> 1539  257  0.529858478  0.154123926 #> 1540  257  0.550176493  0.142393314 #> 1541  257  0.570494509  0.154123926 #> 1542  257  0.570494509  0.177585149 #> 1543  258  0.590812524  0.189315761 #> 1544  258  0.570494509  0.177585149 #> 1545  258  0.570494509  0.154123926 #> 1546  258  0.590812524  0.142393314 #> 1547  258  0.611130539  0.154123926 #> 1548  258  0.611130539  0.177585149 #> 1549  259  0.631448555  0.189315761 #> 1550  259  0.611130539  0.177585149 #> 1551  259  0.611130539  0.154123926 #> 1552  259  0.631448555  0.142393314 #> 1553  259  0.651766570  0.154123926 #> 1554  259  0.651766570  0.177585149 #> 1555  260  0.672084586  0.189315761 #> 1556  260  0.651766570  0.177585149 #> 1557  260  0.651766570  0.154123926 #> 1558  260  0.672084586  0.142393314 #> 1559  260  0.692402601  0.154123926 #> 1560  260  0.692402601  0.177585149 #> 1561  261  0.712720616  0.189315761 #> 1562  261  0.692402601  0.177585149 #> 1563  261  0.692402601  0.154123926 #> 1564  261  0.712720616  0.142393314 #> 1565  261  0.733038632  0.154123926 #> 1566  261  0.733038632  0.177585149 #> 1567  262  0.753356647  0.189315761 #> 1568  262  0.733038632  0.177585149 #> 1569  262  0.733038632  0.154123926 #> 1570  262  0.753356647  0.142393314 #> 1571  262  0.773674663  0.154123926 #> 1572  262  0.773674663  0.177585149 #> 1573  263  0.793992678  0.189315761 #> 1574  263  0.773674663  0.177585149 #> 1575  263  0.773674663  0.154123926 #> 1576  263  0.793992678  0.142393314 #> 1577  263  0.814310694  0.154123926 #> 1578  263  0.814310694  0.177585149 #> 1579  264  0.834628709  0.189315761 #> 1580  264  0.814310694  0.177585149 #> 1581  264  0.814310694  0.154123926 #> 1582  264  0.834628709  0.142393314 #> 1583  264  0.854946724  0.154123926 #> 1584  264  0.854946724  0.177585149 #> 1585  265  0.875264740  0.189315761 #> 1586  265  0.854946724  0.177585149 #> 1587  265  0.854946724  0.154123926 #> 1588  265  0.875264740  0.142393314 #> 1589  265  0.895582755  0.154123926 #> 1590  265  0.895582755  0.177585149 #> 1591  266  0.915900771  0.189315761 #> 1592  266  0.895582755  0.177585149 #> 1593  266  0.895582755  0.154123926 #> 1594  266  0.915900771  0.142393314 #> 1595  266  0.936218786  0.154123926 #> 1596  266  0.936218786  0.177585149 #> 1597  267  0.956536801  0.189315761 #> 1598  267  0.936218786  0.177585149 #> 1599  267  0.936218786  0.154123926 #> 1600  267  0.956536801  0.142393314 #> 1601  267  0.976854817  0.154123926 #> 1602  267  0.976854817  0.177585149 #> 1603  268  0.997172832  0.189315761 #> 1604  268  0.976854817  0.177585149 #> 1605  268  0.976854817  0.154123926 #> 1606  268  0.997172832  0.142393314 #> 1607  268  1.017490848  0.154123926 #> 1608  268  1.017490848  0.177585149 #> 1609  269  1.037808863  0.189315761 #> 1610  269  1.017490848  0.177585149 #> 1611  269  1.017490848  0.154123926 #> 1612  269  1.037808863  0.142393314 #> 1613  269  1.058126878  0.154123926 #> 1614  269  1.058126878  0.177585149 #> 1615  270  1.078444894  0.189315761 #> 1616  270  1.058126878  0.177585149 #> 1617  270  1.058126878  0.154123926 #> 1618  270  1.078444894  0.142393314 #> 1619  270  1.098762909  0.154123926 #> 1620  270  1.098762909  0.177585149 #> 1621  271 -0.079681985  0.224507596 #> 1622  271 -0.100000000  0.212776984 #> 1623  271 -0.100000000  0.189315761 #> 1624  271 -0.079681985  0.177585149 #> 1625  271 -0.059363969  0.189315761 #> 1626  271 -0.059363969  0.212776984 #> 1627  272 -0.039045954  0.224507596 #> 1628  272 -0.059363969  0.212776984 #> 1629  272 -0.059363969  0.189315761 #> 1630  272 -0.039045954  0.177585149 #> 1631  272 -0.018727938  0.189315761 #> 1632  272 -0.018727938  0.212776984 #> 1633  273  0.001590077  0.224507596 #> 1634  273 -0.018727938  0.212776984 #> 1635  273 -0.018727938  0.189315761 #> 1636  273  0.001590077  0.177585149 #> 1637  273  0.021908092  0.189315761 #> 1638  273  0.021908092  0.212776984 #> 1639  274  0.042226108  0.224507596 #> 1640  274  0.021908092  0.212776984 #> 1641  274  0.021908092  0.189315761 #> 1642  274  0.042226108  0.177585149 #> 1643  274  0.062544123  0.189315761 #> 1644  274  0.062544123  0.212776984 #> 1645  275  0.082862139  0.224507596 #> 1646  275  0.062544123  0.212776984 #> 1647  275  0.062544123  0.189315761 #> 1648  275  0.082862139  0.177585149 #> 1649  275  0.103180154  0.189315761 #> 1650  275  0.103180154  0.212776984 #> 1651  276  0.123498170  0.224507596 #> 1652  276  0.103180154  0.212776984 #> 1653  276  0.103180154  0.189315761 #> 1654  276  0.123498170  0.177585149 #> 1655  276  0.143816185  0.189315761 #> 1656  276  0.143816185  0.212776984 #> 1657  277  0.164134200  0.224507596 #> 1658  277  0.143816185  0.212776984 #> 1659  277  0.143816185  0.189315761 #> 1660  277  0.164134200  0.177585149 #> 1661  277  0.184452216  0.189315761 #> 1662  277  0.184452216  0.212776984 #> 1663  278  0.204770231  0.224507596 #> 1664  278  0.184452216  0.212776984 #> 1665  278  0.184452216  0.189315761 #> 1666  278  0.204770231  0.177585149 #> 1667  278  0.225088247  0.189315761 #> 1668  278  0.225088247  0.212776984 #> 1669  279  0.245406262  0.224507596 #> 1670  279  0.225088247  0.212776984 #> 1671  279  0.225088247  0.189315761 #> 1672  279  0.245406262  0.177585149 #> 1673  279  0.265724277  0.189315761 #> 1674  279  0.265724277  0.212776984 #> 1675  280  0.286042293  0.224507596 #> 1676  280  0.265724277  0.212776984 #> 1677  280  0.265724277  0.189315761 #> 1678  280  0.286042293  0.177585149 #> 1679  280  0.306360308  0.189315761 #> 1680  280  0.306360308  0.212776984 #> 1681  281  0.326678324  0.224507596 #> 1682  281  0.306360308  0.212776984 #> 1683  281  0.306360308  0.189315761 #> 1684  281  0.326678324  0.177585149 #> 1685  281  0.346996339  0.189315761 #> 1686  281  0.346996339  0.212776984 #> 1687  282  0.367314354  0.224507596 #> 1688  282  0.346996339  0.212776984 #> 1689  282  0.346996339  0.189315761 #> 1690  282  0.367314354  0.177585149 #> 1691  282  0.387632370  0.189315761 #> 1692  282  0.387632370  0.212776984 #> 1693  283  0.407950385  0.224507596 #> 1694  283  0.387632370  0.212776984 #> 1695  283  0.387632370  0.189315761 #> 1696  283  0.407950385  0.177585149 #> 1697  283  0.428268401  0.189315761 #> 1698  283  0.428268401  0.212776984 #> 1699  284  0.448586416  0.224507596 #> 1700  284  0.428268401  0.212776984 #> 1701  284  0.428268401  0.189315761 #> 1702  284  0.448586416  0.177585149 #> 1703  284  0.468904432  0.189315761 #> 1704  284  0.468904432  0.212776984 #> 1705  285  0.489222447  0.224507596 #> 1706  285  0.468904432  0.212776984 #> 1707  285  0.468904432  0.189315761 #> 1708  285  0.489222447  0.177585149 #> 1709  285  0.509540462  0.189315761 #> 1710  285  0.509540462  0.212776984 #> 1711  286  0.529858478  0.224507596 #> 1712  286  0.509540462  0.212776984 #> 1713  286  0.509540462  0.189315761 #> 1714  286  0.529858478  0.177585149 #> 1715  286  0.550176493  0.189315761 #> 1716  286  0.550176493  0.212776984 #> 1717  287  0.570494509  0.224507596 #> 1718  287  0.550176493  0.212776984 #> 1719  287  0.550176493  0.189315761 #> 1720  287  0.570494509  0.177585149 #> 1721  287  0.590812524  0.189315761 #> 1722  287  0.590812524  0.212776984 #> 1723  288  0.611130539  0.224507596 #> 1724  288  0.590812524  0.212776984 #> 1725  288  0.590812524  0.189315761 #> 1726  288  0.611130539  0.177585149 #> 1727  288  0.631448555  0.189315761 #> 1728  288  0.631448555  0.212776984 #> 1729  289  0.651766570  0.224507596 #> 1730  289  0.631448555  0.212776984 #> 1731  289  0.631448555  0.189315761 #> 1732  289  0.651766570  0.177585149 #> 1733  289  0.672084586  0.189315761 #> 1734  289  0.672084586  0.212776984 #> 1735  290  0.692402601  0.224507596 #> 1736  290  0.672084586  0.212776984 #> 1737  290  0.672084586  0.189315761 #> 1738  290  0.692402601  0.177585149 #> 1739  290  0.712720616  0.189315761 #> 1740  290  0.712720616  0.212776984 #> 1741  291  0.733038632  0.224507596 #> 1742  291  0.712720616  0.212776984 #> 1743  291  0.712720616  0.189315761 #> 1744  291  0.733038632  0.177585149 #> 1745  291  0.753356647  0.189315761 #> 1746  291  0.753356647  0.212776984 #> 1747  292  0.773674663  0.224507596 #> 1748  292  0.753356647  0.212776984 #> 1749  292  0.753356647  0.189315761 #> 1750  292  0.773674663  0.177585149 #> 1751  292  0.793992678  0.189315761 #> 1752  292  0.793992678  0.212776984 #> 1753  293  0.814310694  0.224507596 #> 1754  293  0.793992678  0.212776984 #> 1755  293  0.793992678  0.189315761 #> 1756  293  0.814310694  0.177585149 #> 1757  293  0.834628709  0.189315761 #> 1758  293  0.834628709  0.212776984 #> 1759  294  0.854946724  0.224507596 #> 1760  294  0.834628709  0.212776984 #> 1761  294  0.834628709  0.189315761 #> 1762  294  0.854946724  0.177585149 #> 1763  294  0.875264740  0.189315761 #> 1764  294  0.875264740  0.212776984 #> 1765  295  0.895582755  0.224507596 #> 1766  295  0.875264740  0.212776984 #> 1767  295  0.875264740  0.189315761 #> 1768  295  0.895582755  0.177585149 #> 1769  295  0.915900771  0.189315761 #> 1770  295  0.915900771  0.212776984 #> 1771  296  0.936218786  0.224507596 #> 1772  296  0.915900771  0.212776984 #> 1773  296  0.915900771  0.189315761 #> 1774  296  0.936218786  0.177585149 #> 1775  296  0.956536801  0.189315761 #> 1776  296  0.956536801  0.212776984 #> 1777  297  0.976854817  0.224507596 #> 1778  297  0.956536801  0.212776984 #> 1779  297  0.956536801  0.189315761 #> 1780  297  0.976854817  0.177585149 #> 1781  297  0.997172832  0.189315761 #> 1782  297  0.997172832  0.212776984 #> 1783  298  1.017490848  0.224507596 #> 1784  298  0.997172832  0.212776984 #> 1785  298  0.997172832  0.189315761 #> 1786  298  1.017490848  0.177585149 #> 1787  298  1.037808863  0.189315761 #> 1788  298  1.037808863  0.212776984 #> 1789  299  1.058126878  0.224507596 #> 1790  299  1.037808863  0.212776984 #> 1791  299  1.037808863  0.189315761 #> 1792  299  1.058126878  0.177585149 #> 1793  299  1.078444894  0.189315761 #> 1794  299  1.078444894  0.212776984 #> 1795  300  1.098762909  0.224507596 #> 1796  300  1.078444894  0.212776984 #> 1797  300  1.078444894  0.189315761 #> 1798  300  1.098762909  0.177585149 #> 1799  300  1.119080925  0.189315761 #> 1800  300  1.119080925  0.212776984 #> 1801  301 -0.100000000  0.259699431 #> 1802  301 -0.120318015  0.247968819 #> 1803  301 -0.120318015  0.224507596 #> 1804  301 -0.100000000  0.212776984 #> 1805  301 -0.079681985  0.224507596 #> 1806  301 -0.079681985  0.247968819 #> 1807  302 -0.059363969  0.259699431 #> 1808  302 -0.079681985  0.247968819 #> 1809  302 -0.079681985  0.224507596 #> 1810  302 -0.059363969  0.212776984 #> 1811  302 -0.039045954  0.224507596 #> 1812  302 -0.039045954  0.247968819 #> 1813  303 -0.018727938  0.259699431 #> 1814  303 -0.039045954  0.247968819 #> 1815  303 -0.039045954  0.224507596 #> 1816  303 -0.018727938  0.212776984 #> 1817  303  0.001590077  0.224507596 #> 1818  303  0.001590077  0.247968819 #> 1819  304  0.021908092  0.259699431 #> 1820  304  0.001590077  0.247968819 #> 1821  304  0.001590077  0.224507596 #> 1822  304  0.021908092  0.212776984 #> 1823  304  0.042226108  0.224507596 #> 1824  304  0.042226108  0.247968819 #> 1825  305  0.062544123  0.259699431 #> 1826  305  0.042226108  0.247968819 #> 1827  305  0.042226108  0.224507596 #> 1828  305  0.062544123  0.212776984 #> 1829  305  0.082862139  0.224507596 #> 1830  305  0.082862139  0.247968819 #> 1831  306  0.103180154  0.259699431 #> 1832  306  0.082862139  0.247968819 #> 1833  306  0.082862139  0.224507596 #> 1834  306  0.103180154  0.212776984 #> 1835  306  0.123498170  0.224507596 #> 1836  306  0.123498170  0.247968819 #> 1837  307  0.143816185  0.259699431 #> 1838  307  0.123498170  0.247968819 #> 1839  307  0.123498170  0.224507596 #> 1840  307  0.143816185  0.212776984 #> 1841  307  0.164134200  0.224507596 #> 1842  307  0.164134200  0.247968819 #> 1843  308  0.184452216  0.259699431 #> 1844  308  0.164134200  0.247968819 #> 1845  308  0.164134200  0.224507596 #> 1846  308  0.184452216  0.212776984 #> 1847  308  0.204770231  0.224507596 #> 1848  308  0.204770231  0.247968819 #> 1849  309  0.225088247  0.259699431 #> 1850  309  0.204770231  0.247968819 #> 1851  309  0.204770231  0.224507596 #> 1852  309  0.225088247  0.212776984 #> 1853  309  0.245406262  0.224507596 #> 1854  309  0.245406262  0.247968819 #> 1855  310  0.265724277  0.259699431 #> 1856  310  0.245406262  0.247968819 #> 1857  310  0.245406262  0.224507596 #> 1858  310  0.265724277  0.212776984 #> 1859  310  0.286042293  0.224507596 #> 1860  310  0.286042293  0.247968819 #> 1861  311  0.306360308  0.259699431 #> 1862  311  0.286042293  0.247968819 #> 1863  311  0.286042293  0.224507596 #> 1864  311  0.306360308  0.212776984 #> 1865  311  0.326678324  0.224507596 #> 1866  311  0.326678324  0.247968819 #> 1867  312  0.346996339  0.259699431 #> 1868  312  0.326678324  0.247968819 #> 1869  312  0.326678324  0.224507596 #> 1870  312  0.346996339  0.212776984 #> 1871  312  0.367314354  0.224507596 #> 1872  312  0.367314354  0.247968819 #> 1873  313  0.387632370  0.259699431 #> 1874  313  0.367314354  0.247968819 #> 1875  313  0.367314354  0.224507596 #> 1876  313  0.387632370  0.212776984 #> 1877  313  0.407950385  0.224507596 #> 1878  313  0.407950385  0.247968819 #> 1879  314  0.428268401  0.259699431 #> 1880  314  0.407950385  0.247968819 #> 1881  314  0.407950385  0.224507596 #> 1882  314  0.428268401  0.212776984 #> 1883  314  0.448586416  0.224507596 #> 1884  314  0.448586416  0.247968819 #> 1885  315  0.468904432  0.259699431 #> 1886  315  0.448586416  0.247968819 #> 1887  315  0.448586416  0.224507596 #> 1888  315  0.468904432  0.212776984 #> 1889  315  0.489222447  0.224507596 #> 1890  315  0.489222447  0.247968819 #> 1891  316  0.509540462  0.259699431 #> 1892  316  0.489222447  0.247968819 #> 1893  316  0.489222447  0.224507596 #> 1894  316  0.509540462  0.212776984 #> 1895  316  0.529858478  0.224507596 #> 1896  316  0.529858478  0.247968819 #> 1897  317  0.550176493  0.259699431 #> 1898  317  0.529858478  0.247968819 #> 1899  317  0.529858478  0.224507596 #> 1900  317  0.550176493  0.212776984 #> 1901  317  0.570494509  0.224507596 #> 1902  317  0.570494509  0.247968819 #> 1903  318  0.590812524  0.259699431 #> 1904  318  0.570494509  0.247968819 #> 1905  318  0.570494509  0.224507596 #> 1906  318  0.590812524  0.212776984 #> 1907  318  0.611130539  0.224507596 #> 1908  318  0.611130539  0.247968819 #> 1909  319  0.631448555  0.259699431 #> 1910  319  0.611130539  0.247968819 #> 1911  319  0.611130539  0.224507596 #> 1912  319  0.631448555  0.212776984 #> 1913  319  0.651766570  0.224507596 #> 1914  319  0.651766570  0.247968819 #> 1915  320  0.672084586  0.259699431 #> 1916  320  0.651766570  0.247968819 #> 1917  320  0.651766570  0.224507596 #> 1918  320  0.672084586  0.212776984 #> 1919  320  0.692402601  0.224507596 #> 1920  320  0.692402601  0.247968819 #> 1921  321  0.712720616  0.259699431 #> 1922  321  0.692402601  0.247968819 #> 1923  321  0.692402601  0.224507596 #> 1924  321  0.712720616  0.212776984 #> 1925  321  0.733038632  0.224507596 #> 1926  321  0.733038632  0.247968819 #> 1927  322  0.753356647  0.259699431 #> 1928  322  0.733038632  0.247968819 #> 1929  322  0.733038632  0.224507596 #> 1930  322  0.753356647  0.212776984 #> 1931  322  0.773674663  0.224507596 #> 1932  322  0.773674663  0.247968819 #> 1933  323  0.793992678  0.259699431 #> 1934  323  0.773674663  0.247968819 #> 1935  323  0.773674663  0.224507596 #> 1936  323  0.793992678  0.212776984 #> 1937  323  0.814310694  0.224507596 #> 1938  323  0.814310694  0.247968819 #> 1939  324  0.834628709  0.259699431 #> 1940  324  0.814310694  0.247968819 #> 1941  324  0.814310694  0.224507596 #> 1942  324  0.834628709  0.212776984 #> 1943  324  0.854946724  0.224507596 #> 1944  324  0.854946724  0.247968819 #> 1945  325  0.875264740  0.259699431 #> 1946  325  0.854946724  0.247968819 #> 1947  325  0.854946724  0.224507596 #> 1948  325  0.875264740  0.212776984 #> 1949  325  0.895582755  0.224507596 #> 1950  325  0.895582755  0.247968819 #> 1951  326  0.915900771  0.259699431 #> 1952  326  0.895582755  0.247968819 #> 1953  326  0.895582755  0.224507596 #> 1954  326  0.915900771  0.212776984 #> 1955  326  0.936218786  0.224507596 #> 1956  326  0.936218786  0.247968819 #> 1957  327  0.956536801  0.259699431 #> 1958  327  0.936218786  0.247968819 #> 1959  327  0.936218786  0.224507596 #> 1960  327  0.956536801  0.212776984 #> 1961  327  0.976854817  0.224507596 #> 1962  327  0.976854817  0.247968819 #> 1963  328  0.997172832  0.259699431 #> 1964  328  0.976854817  0.247968819 #> 1965  328  0.976854817  0.224507596 #> 1966  328  0.997172832  0.212776984 #> 1967  328  1.017490848  0.224507596 #> 1968  328  1.017490848  0.247968819 #> 1969  329  1.037808863  0.259699431 #> 1970  329  1.017490848  0.247968819 #> 1971  329  1.017490848  0.224507596 #> 1972  329  1.037808863  0.212776984 #> 1973  329  1.058126878  0.224507596 #> 1974  329  1.058126878  0.247968819 #> 1975  330  1.078444894  0.259699431 #> 1976  330  1.058126878  0.247968819 #> 1977  330  1.058126878  0.224507596 #> 1978  330  1.078444894  0.212776984 #> 1979  330  1.098762909  0.224507596 #> 1980  330  1.098762909  0.247968819 #> 1981  331 -0.079681985  0.294891266 #> 1982  331 -0.100000000  0.283160654 #> 1983  331 -0.100000000  0.259699431 #> 1984  331 -0.079681985  0.247968819 #> 1985  331 -0.059363969  0.259699431 #> 1986  331 -0.059363969  0.283160654 #> 1987  332 -0.039045954  0.294891266 #> 1988  332 -0.059363969  0.283160654 #> 1989  332 -0.059363969  0.259699431 #> 1990  332 -0.039045954  0.247968819 #> 1991  332 -0.018727938  0.259699431 #> 1992  332 -0.018727938  0.283160654 #> 1993  333  0.001590077  0.294891266 #> 1994  333 -0.018727938  0.283160654 #> 1995  333 -0.018727938  0.259699431 #> 1996  333  0.001590077  0.247968819 #> 1997  333  0.021908092  0.259699431 #> 1998  333  0.021908092  0.283160654 #> 1999  334  0.042226108  0.294891266 #> 2000  334  0.021908092  0.283160654 #> 2001  334  0.021908092  0.259699431 #> 2002  334  0.042226108  0.247968819 #> 2003  334  0.062544123  0.259699431 #> 2004  334  0.062544123  0.283160654 #> 2005  335  0.082862139  0.294891266 #> 2006  335  0.062544123  0.283160654 #> 2007  335  0.062544123  0.259699431 #> 2008  335  0.082862139  0.247968819 #> 2009  335  0.103180154  0.259699431 #> 2010  335  0.103180154  0.283160654 #> 2011  336  0.123498170  0.294891266 #> 2012  336  0.103180154  0.283160654 #> 2013  336  0.103180154  0.259699431 #> 2014  336  0.123498170  0.247968819 #> 2015  336  0.143816185  0.259699431 #> 2016  336  0.143816185  0.283160654 #> 2017  337  0.164134200  0.294891266 #> 2018  337  0.143816185  0.283160654 #> 2019  337  0.143816185  0.259699431 #> 2020  337  0.164134200  0.247968819 #> 2021  337  0.184452216  0.259699431 #> 2022  337  0.184452216  0.283160654 #> 2023  338  0.204770231  0.294891266 #> 2024  338  0.184452216  0.283160654 #> 2025  338  0.184452216  0.259699431 #> 2026  338  0.204770231  0.247968819 #> 2027  338  0.225088247  0.259699431 #> 2028  338  0.225088247  0.283160654 #> 2029  339  0.245406262  0.294891266 #> 2030  339  0.225088247  0.283160654 #> 2031  339  0.225088247  0.259699431 #> 2032  339  0.245406262  0.247968819 #> 2033  339  0.265724277  0.259699431 #> 2034  339  0.265724277  0.283160654 #> 2035  340  0.286042293  0.294891266 #> 2036  340  0.265724277  0.283160654 #> 2037  340  0.265724277  0.259699431 #> 2038  340  0.286042293  0.247968819 #> 2039  340  0.306360308  0.259699431 #> 2040  340  0.306360308  0.283160654 #> 2041  341  0.326678324  0.294891266 #> 2042  341  0.306360308  0.283160654 #> 2043  341  0.306360308  0.259699431 #> 2044  341  0.326678324  0.247968819 #> 2045  341  0.346996339  0.259699431 #> 2046  341  0.346996339  0.283160654 #> 2047  342  0.367314354  0.294891266 #> 2048  342  0.346996339  0.283160654 #> 2049  342  0.346996339  0.259699431 #> 2050  342  0.367314354  0.247968819 #> 2051  342  0.387632370  0.259699431 #> 2052  342  0.387632370  0.283160654 #> 2053  343  0.407950385  0.294891266 #> 2054  343  0.387632370  0.283160654 #> 2055  343  0.387632370  0.259699431 #> 2056  343  0.407950385  0.247968819 #> 2057  343  0.428268401  0.259699431 #> 2058  343  0.428268401  0.283160654 #> 2059  344  0.448586416  0.294891266 #> 2060  344  0.428268401  0.283160654 #> 2061  344  0.428268401  0.259699431 #> 2062  344  0.448586416  0.247968819 #> 2063  344  0.468904432  0.259699431 #> 2064  344  0.468904432  0.283160654 #> 2065  345  0.489222447  0.294891266 #> 2066  345  0.468904432  0.283160654 #> 2067  345  0.468904432  0.259699431 #> 2068  345  0.489222447  0.247968819 #> 2069  345  0.509540462  0.259699431 #> 2070  345  0.509540462  0.283160654 #> 2071  346  0.529858478  0.294891266 #> 2072  346  0.509540462  0.283160654 #> 2073  346  0.509540462  0.259699431 #> 2074  346  0.529858478  0.247968819 #> 2075  346  0.550176493  0.259699431 #> 2076  346  0.550176493  0.283160654 #> 2077  347  0.570494509  0.294891266 #> 2078  347  0.550176493  0.283160654 #> 2079  347  0.550176493  0.259699431 #> 2080  347  0.570494509  0.247968819 #> 2081  347  0.590812524  0.259699431 #> 2082  347  0.590812524  0.283160654 #> 2083  348  0.611130539  0.294891266 #> 2084  348  0.590812524  0.283160654 #> 2085  348  0.590812524  0.259699431 #> 2086  348  0.611130539  0.247968819 #> 2087  348  0.631448555  0.259699431 #> 2088  348  0.631448555  0.283160654 #> 2089  349  0.651766570  0.294891266 #> 2090  349  0.631448555  0.283160654 #> 2091  349  0.631448555  0.259699431 #> 2092  349  0.651766570  0.247968819 #> 2093  349  0.672084586  0.259699431 #> 2094  349  0.672084586  0.283160654 #> 2095  350  0.692402601  0.294891266 #> 2096  350  0.672084586  0.283160654 #> 2097  350  0.672084586  0.259699431 #> 2098  350  0.692402601  0.247968819 #> 2099  350  0.712720616  0.259699431 #> 2100  350  0.712720616  0.283160654 #> 2101  351  0.733038632  0.294891266 #> 2102  351  0.712720616  0.283160654 #> 2103  351  0.712720616  0.259699431 #> 2104  351  0.733038632  0.247968819 #> 2105  351  0.753356647  0.259699431 #> 2106  351  0.753356647  0.283160654 #> 2107  352  0.773674663  0.294891266 #> 2108  352  0.753356647  0.283160654 #> 2109  352  0.753356647  0.259699431 #> 2110  352  0.773674663  0.247968819 #> 2111  352  0.793992678  0.259699431 #> 2112  352  0.793992678  0.283160654 #> 2113  353  0.814310694  0.294891266 #> 2114  353  0.793992678  0.283160654 #> 2115  353  0.793992678  0.259699431 #> 2116  353  0.814310694  0.247968819 #> 2117  353  0.834628709  0.259699431 #> 2118  353  0.834628709  0.283160654 #> 2119  354  0.854946724  0.294891266 #> 2120  354  0.834628709  0.283160654 #> 2121  354  0.834628709  0.259699431 #> 2122  354  0.854946724  0.247968819 #> 2123  354  0.875264740  0.259699431 #> 2124  354  0.875264740  0.283160654 #> 2125  355  0.895582755  0.294891266 #> 2126  355  0.875264740  0.283160654 #> 2127  355  0.875264740  0.259699431 #> 2128  355  0.895582755  0.247968819 #> 2129  355  0.915900771  0.259699431 #> 2130  355  0.915900771  0.283160654 #> 2131  356  0.936218786  0.294891266 #> 2132  356  0.915900771  0.283160654 #> 2133  356  0.915900771  0.259699431 #> 2134  356  0.936218786  0.247968819 #> 2135  356  0.956536801  0.259699431 #> 2136  356  0.956536801  0.283160654 #> 2137  357  0.976854817  0.294891266 #> 2138  357  0.956536801  0.283160654 #> 2139  357  0.956536801  0.259699431 #> 2140  357  0.976854817  0.247968819 #> 2141  357  0.997172832  0.259699431 #> 2142  357  0.997172832  0.283160654 #> 2143  358  1.017490848  0.294891266 #> 2144  358  0.997172832  0.283160654 #> 2145  358  0.997172832  0.259699431 #> 2146  358  1.017490848  0.247968819 #> 2147  358  1.037808863  0.259699431 #> 2148  358  1.037808863  0.283160654 #> 2149  359  1.058126878  0.294891266 #> 2150  359  1.037808863  0.283160654 #> 2151  359  1.037808863  0.259699431 #> 2152  359  1.058126878  0.247968819 #> 2153  359  1.078444894  0.259699431 #> 2154  359  1.078444894  0.283160654 #> 2155  360  1.098762909  0.294891266 #> 2156  360  1.078444894  0.283160654 #> 2157  360  1.078444894  0.259699431 #> 2158  360  1.098762909  0.247968819 #> 2159  360  1.119080925  0.259699431 #> 2160  360  1.119080925  0.283160654 #> 2161  361 -0.100000000  0.330083101 #> 2162  361 -0.120318015  0.318352489 #> 2163  361 -0.120318015  0.294891266 #> 2164  361 -0.100000000  0.283160654 #> 2165  361 -0.079681985  0.294891266 #> 2166  361 -0.079681985  0.318352489 #> 2167  362 -0.059363969  0.330083101 #> 2168  362 -0.079681985  0.318352489 #> 2169  362 -0.079681985  0.294891266 #> 2170  362 -0.059363969  0.283160654 #> 2171  362 -0.039045954  0.294891266 #> 2172  362 -0.039045954  0.318352489 #> 2173  363 -0.018727938  0.330083101 #> 2174  363 -0.039045954  0.318352489 #> 2175  363 -0.039045954  0.294891266 #> 2176  363 -0.018727938  0.283160654 #> 2177  363  0.001590077  0.294891266 #> 2178  363  0.001590077  0.318352489 #> 2179  364  0.021908092  0.330083101 #> 2180  364  0.001590077  0.318352489 #> 2181  364  0.001590077  0.294891266 #> 2182  364  0.021908092  0.283160654 #> 2183  364  0.042226108  0.294891266 #> 2184  364  0.042226108  0.318352489 #> 2185  365  0.062544123  0.330083101 #> 2186  365  0.042226108  0.318352489 #> 2187  365  0.042226108  0.294891266 #> 2188  365  0.062544123  0.283160654 #> 2189  365  0.082862139  0.294891266 #> 2190  365  0.082862139  0.318352489 #> 2191  366  0.103180154  0.330083101 #> 2192  366  0.082862139  0.318352489 #> 2193  366  0.082862139  0.294891266 #> 2194  366  0.103180154  0.283160654 #> 2195  366  0.123498170  0.294891266 #> 2196  366  0.123498170  0.318352489 #> 2197  367  0.143816185  0.330083101 #> 2198  367  0.123498170  0.318352489 #> 2199  367  0.123498170  0.294891266 #> 2200  367  0.143816185  0.283160654 #> 2201  367  0.164134200  0.294891266 #> 2202  367  0.164134200  0.318352489 #> 2203  368  0.184452216  0.330083101 #> 2204  368  0.164134200  0.318352489 #> 2205  368  0.164134200  0.294891266 #> 2206  368  0.184452216  0.283160654 #> 2207  368  0.204770231  0.294891266 #> 2208  368  0.204770231  0.318352489 #> 2209  369  0.225088247  0.330083101 #> 2210  369  0.204770231  0.318352489 #> 2211  369  0.204770231  0.294891266 #> 2212  369  0.225088247  0.283160654 #> 2213  369  0.245406262  0.294891266 #> 2214  369  0.245406262  0.318352489 #> 2215  370  0.265724277  0.330083101 #> 2216  370  0.245406262  0.318352489 #> 2217  370  0.245406262  0.294891266 #> 2218  370  0.265724277  0.283160654 #> 2219  370  0.286042293  0.294891266 #> 2220  370  0.286042293  0.318352489 #> 2221  371  0.306360308  0.330083101 #> 2222  371  0.286042293  0.318352489 #> 2223  371  0.286042293  0.294891266 #> 2224  371  0.306360308  0.283160654 #> 2225  371  0.326678324  0.294891266 #> 2226  371  0.326678324  0.318352489 #> 2227  372  0.346996339  0.330083101 #> 2228  372  0.326678324  0.318352489 #> 2229  372  0.326678324  0.294891266 #> 2230  372  0.346996339  0.283160654 #> 2231  372  0.367314354  0.294891266 #> 2232  372  0.367314354  0.318352489 #> 2233  373  0.387632370  0.330083101 #> 2234  373  0.367314354  0.318352489 #> 2235  373  0.367314354  0.294891266 #> 2236  373  0.387632370  0.283160654 #> 2237  373  0.407950385  0.294891266 #> 2238  373  0.407950385  0.318352489 #> 2239  374  0.428268401  0.330083101 #> 2240  374  0.407950385  0.318352489 #> 2241  374  0.407950385  0.294891266 #> 2242  374  0.428268401  0.283160654 #> 2243  374  0.448586416  0.294891266 #> 2244  374  0.448586416  0.318352489 #> 2245  375  0.468904432  0.330083101 #> 2246  375  0.448586416  0.318352489 #> 2247  375  0.448586416  0.294891266 #> 2248  375  0.468904432  0.283160654 #> 2249  375  0.489222447  0.294891266 #> 2250  375  0.489222447  0.318352489 #> 2251  376  0.509540462  0.330083101 #> 2252  376  0.489222447  0.318352489 #> 2253  376  0.489222447  0.294891266 #> 2254  376  0.509540462  0.283160654 #> 2255  376  0.529858478  0.294891266 #> 2256  376  0.529858478  0.318352489 #> 2257  377  0.550176493  0.330083101 #> 2258  377  0.529858478  0.318352489 #> 2259  377  0.529858478  0.294891266 #> 2260  377  0.550176493  0.283160654 #> 2261  377  0.570494509  0.294891266 #> 2262  377  0.570494509  0.318352489 #> 2263  378  0.590812524  0.330083101 #> 2264  378  0.570494509  0.318352489 #> 2265  378  0.570494509  0.294891266 #> 2266  378  0.590812524  0.283160654 #> 2267  378  0.611130539  0.294891266 #> 2268  378  0.611130539  0.318352489 #> 2269  379  0.631448555  0.330083101 #> 2270  379  0.611130539  0.318352489 #> 2271  379  0.611130539  0.294891266 #> 2272  379  0.631448555  0.283160654 #> 2273  379  0.651766570  0.294891266 #> 2274  379  0.651766570  0.318352489 #> 2275  380  0.672084586  0.330083101 #> 2276  380  0.651766570  0.318352489 #> 2277  380  0.651766570  0.294891266 #> 2278  380  0.672084586  0.283160654 #> 2279  380  0.692402601  0.294891266 #> 2280  380  0.692402601  0.318352489 #> 2281  381  0.712720616  0.330083101 #> 2282  381  0.692402601  0.318352489 #> 2283  381  0.692402601  0.294891266 #> 2284  381  0.712720616  0.283160654 #> 2285  381  0.733038632  0.294891266 #> 2286  381  0.733038632  0.318352489 #> 2287  382  0.753356647  0.330083101 #> 2288  382  0.733038632  0.318352489 #> 2289  382  0.733038632  0.294891266 #> 2290  382  0.753356647  0.283160654 #> 2291  382  0.773674663  0.294891266 #> 2292  382  0.773674663  0.318352489 #> 2293  383  0.793992678  0.330083101 #> 2294  383  0.773674663  0.318352489 #> 2295  383  0.773674663  0.294891266 #> 2296  383  0.793992678  0.283160654 #> 2297  383  0.814310694  0.294891266 #> 2298  383  0.814310694  0.318352489 #> 2299  384  0.834628709  0.330083101 #> 2300  384  0.814310694  0.318352489 #> 2301  384  0.814310694  0.294891266 #> 2302  384  0.834628709  0.283160654 #> 2303  384  0.854946724  0.294891266 #> 2304  384  0.854946724  0.318352489 #> 2305  385  0.875264740  0.330083101 #> 2306  385  0.854946724  0.318352489 #> 2307  385  0.854946724  0.294891266 #> 2308  385  0.875264740  0.283160654 #> 2309  385  0.895582755  0.294891266 #> 2310  385  0.895582755  0.318352489 #> 2311  386  0.915900771  0.330083101 #> 2312  386  0.895582755  0.318352489 #> 2313  386  0.895582755  0.294891266 #> 2314  386  0.915900771  0.283160654 #> 2315  386  0.936218786  0.294891266 #> 2316  386  0.936218786  0.318352489 #> 2317  387  0.956536801  0.330083101 #> 2318  387  0.936218786  0.318352489 #> 2319  387  0.936218786  0.294891266 #> 2320  387  0.956536801  0.283160654 #> 2321  387  0.976854817  0.294891266 #> 2322  387  0.976854817  0.318352489 #> 2323  388  0.997172832  0.330083101 #> 2324  388  0.976854817  0.318352489 #> 2325  388  0.976854817  0.294891266 #> 2326  388  0.997172832  0.283160654 #> 2327  388  1.017490848  0.294891266 #> 2328  388  1.017490848  0.318352489 #> 2329  389  1.037808863  0.330083101 #> 2330  389  1.017490848  0.318352489 #> 2331  389  1.017490848  0.294891266 #> 2332  389  1.037808863  0.283160654 #> 2333  389  1.058126878  0.294891266 #> 2334  389  1.058126878  0.318352489 #> 2335  390  1.078444894  0.330083101 #> 2336  390  1.058126878  0.318352489 #> 2337  390  1.058126878  0.294891266 #> 2338  390  1.078444894  0.283160654 #> 2339  390  1.098762909  0.294891266 #> 2340  390  1.098762909  0.318352489 #> 2341  391 -0.079681985  0.365274936 #> 2342  391 -0.100000000  0.353544324 #> 2343  391 -0.100000000  0.330083101 #> 2344  391 -0.079681985  0.318352489 #> 2345  391 -0.059363969  0.330083101 #> 2346  391 -0.059363969  0.353544324 #> 2347  392 -0.039045954  0.365274936 #> 2348  392 -0.059363969  0.353544324 #> 2349  392 -0.059363969  0.330083101 #> 2350  392 -0.039045954  0.318352489 #> 2351  392 -0.018727938  0.330083101 #> 2352  392 -0.018727938  0.353544324 #> 2353  393  0.001590077  0.365274936 #> 2354  393 -0.018727938  0.353544324 #> 2355  393 -0.018727938  0.330083101 #> 2356  393  0.001590077  0.318352489 #> 2357  393  0.021908092  0.330083101 #> 2358  393  0.021908092  0.353544324 #> 2359  394  0.042226108  0.365274936 #> 2360  394  0.021908092  0.353544324 #> 2361  394  0.021908092  0.330083101 #> 2362  394  0.042226108  0.318352489 #> 2363  394  0.062544123  0.330083101 #> 2364  394  0.062544123  0.353544324 #> 2365  395  0.082862139  0.365274936 #> 2366  395  0.062544123  0.353544324 #> 2367  395  0.062544123  0.330083101 #> 2368  395  0.082862139  0.318352489 #> 2369  395  0.103180154  0.330083101 #> 2370  395  0.103180154  0.353544324 #> 2371  396  0.123498170  0.365274936 #> 2372  396  0.103180154  0.353544324 #> 2373  396  0.103180154  0.330083101 #> 2374  396  0.123498170  0.318352489 #> 2375  396  0.143816185  0.330083101 #> 2376  396  0.143816185  0.353544324 #> 2377  397  0.164134200  0.365274936 #> 2378  397  0.143816185  0.353544324 #> 2379  397  0.143816185  0.330083101 #> 2380  397  0.164134200  0.318352489 #> 2381  397  0.184452216  0.330083101 #> 2382  397  0.184452216  0.353544324 #> 2383  398  0.204770231  0.365274936 #> 2384  398  0.184452216  0.353544324 #> 2385  398  0.184452216  0.330083101 #> 2386  398  0.204770231  0.318352489 #> 2387  398  0.225088247  0.330083101 #> 2388  398  0.225088247  0.353544324 #> 2389  399  0.245406262  0.365274936 #> 2390  399  0.225088247  0.353544324 #> 2391  399  0.225088247  0.330083101 #> 2392  399  0.245406262  0.318352489 #> 2393  399  0.265724277  0.330083101 #> 2394  399  0.265724277  0.353544324 #> 2395  400  0.286042293  0.365274936 #> 2396  400  0.265724277  0.353544324 #> 2397  400  0.265724277  0.330083101 #> 2398  400  0.286042293  0.318352489 #> 2399  400  0.306360308  0.330083101 #> 2400  400  0.306360308  0.353544324 #> 2401  401  0.326678324  0.365274936 #> 2402  401  0.306360308  0.353544324 #> 2403  401  0.306360308  0.330083101 #> 2404  401  0.326678324  0.318352489 #> 2405  401  0.346996339  0.330083101 #> 2406  401  0.346996339  0.353544324 #> 2407  402  0.367314354  0.365274936 #> 2408  402  0.346996339  0.353544324 #> 2409  402  0.346996339  0.330083101 #> 2410  402  0.367314354  0.318352489 #> 2411  402  0.387632370  0.330083101 #> 2412  402  0.387632370  0.353544324 #> 2413  403  0.407950385  0.365274936 #> 2414  403  0.387632370  0.353544324 #> 2415  403  0.387632370  0.330083101 #> 2416  403  0.407950385  0.318352489 #> 2417  403  0.428268401  0.330083101 #> 2418  403  0.428268401  0.353544324 #> 2419  404  0.448586416  0.365274936 #> 2420  404  0.428268401  0.353544324 #> 2421  404  0.428268401  0.330083101 #> 2422  404  0.448586416  0.318352489 #> 2423  404  0.468904432  0.330083101 #> 2424  404  0.468904432  0.353544324 #> 2425  405  0.489222447  0.365274936 #> 2426  405  0.468904432  0.353544324 #> 2427  405  0.468904432  0.330083101 #> 2428  405  0.489222447  0.318352489 #> 2429  405  0.509540462  0.330083101 #> 2430  405  0.509540462  0.353544324 #> 2431  406  0.529858478  0.365274936 #> 2432  406  0.509540462  0.353544324 #> 2433  406  0.509540462  0.330083101 #> 2434  406  0.529858478  0.318352489 #> 2435  406  0.550176493  0.330083101 #> 2436  406  0.550176493  0.353544324 #> 2437  407  0.570494509  0.365274936 #> 2438  407  0.550176493  0.353544324 #> 2439  407  0.550176493  0.330083101 #> 2440  407  0.570494509  0.318352489 #> 2441  407  0.590812524  0.330083101 #> 2442  407  0.590812524  0.353544324 #> 2443  408  0.611130539  0.365274936 #> 2444  408  0.590812524  0.353544324 #> 2445  408  0.590812524  0.330083101 #> 2446  408  0.611130539  0.318352489 #> 2447  408  0.631448555  0.330083101 #> 2448  408  0.631448555  0.353544324 #> 2449  409  0.651766570  0.365274936 #> 2450  409  0.631448555  0.353544324 #> 2451  409  0.631448555  0.330083101 #> 2452  409  0.651766570  0.318352489 #> 2453  409  0.672084586  0.330083101 #> 2454  409  0.672084586  0.353544324 #> 2455  410  0.692402601  0.365274936 #> 2456  410  0.672084586  0.353544324 #> 2457  410  0.672084586  0.330083101 #> 2458  410  0.692402601  0.318352489 #> 2459  410  0.712720616  0.330083101 #> 2460  410  0.712720616  0.353544324 #> 2461  411  0.733038632  0.365274936 #> 2462  411  0.712720616  0.353544324 #> 2463  411  0.712720616  0.330083101 #> 2464  411  0.733038632  0.318352489 #> 2465  411  0.753356647  0.330083101 #> 2466  411  0.753356647  0.353544324 #> 2467  412  0.773674663  0.365274936 #> 2468  412  0.753356647  0.353544324 #> 2469  412  0.753356647  0.330083101 #> 2470  412  0.773674663  0.318352489 #> 2471  412  0.793992678  0.330083101 #> 2472  412  0.793992678  0.353544324 #> 2473  413  0.814310694  0.365274936 #> 2474  413  0.793992678  0.353544324 #> 2475  413  0.793992678  0.330083101 #> 2476  413  0.814310694  0.318352489 #> 2477  413  0.834628709  0.330083101 #> 2478  413  0.834628709  0.353544324 #> 2479  414  0.854946724  0.365274936 #> 2480  414  0.834628709  0.353544324 #> 2481  414  0.834628709  0.330083101 #> 2482  414  0.854946724  0.318352489 #> 2483  414  0.875264740  0.330083101 #> 2484  414  0.875264740  0.353544324 #> 2485  415  0.895582755  0.365274936 #> 2486  415  0.875264740  0.353544324 #> 2487  415  0.875264740  0.330083101 #> 2488  415  0.895582755  0.318352489 #> 2489  415  0.915900771  0.330083101 #> 2490  415  0.915900771  0.353544324 #> 2491  416  0.936218786  0.365274936 #> 2492  416  0.915900771  0.353544324 #> 2493  416  0.915900771  0.330083101 #> 2494  416  0.936218786  0.318352489 #> 2495  416  0.956536801  0.330083101 #> 2496  416  0.956536801  0.353544324 #> 2497  417  0.976854817  0.365274936 #> 2498  417  0.956536801  0.353544324 #> 2499  417  0.956536801  0.330083101 #> 2500  417  0.976854817  0.318352489 #> 2501  417  0.997172832  0.330083101 #> 2502  417  0.997172832  0.353544324 #> 2503  418  1.017490848  0.365274936 #> 2504  418  0.997172832  0.353544324 #> 2505  418  0.997172832  0.330083101 #> 2506  418  1.017490848  0.318352489 #> 2507  418  1.037808863  0.330083101 #> 2508  418  1.037808863  0.353544324 #> 2509  419  1.058126878  0.365274936 #> 2510  419  1.037808863  0.353544324 #> 2511  419  1.037808863  0.330083101 #> 2512  419  1.058126878  0.318352489 #> 2513  419  1.078444894  0.330083101 #> 2514  419  1.078444894  0.353544324 #> 2515  420  1.098762909  0.365274936 #> 2516  420  1.078444894  0.353544324 #> 2517  420  1.078444894  0.330083101 #> 2518  420  1.098762909  0.318352489 #> 2519  420  1.119080925  0.330083101 #> 2520  420  1.119080925  0.353544324 #> 2521  421 -0.100000000  0.400466771 #> 2522  421 -0.120318015  0.388736159 #> 2523  421 -0.120318015  0.365274936 #> 2524  421 -0.100000000  0.353544324 #> 2525  421 -0.079681985  0.365274936 #> 2526  421 -0.079681985  0.388736159 #> 2527  422 -0.059363969  0.400466771 #> 2528  422 -0.079681985  0.388736159 #> 2529  422 -0.079681985  0.365274936 #> 2530  422 -0.059363969  0.353544324 #> 2531  422 -0.039045954  0.365274936 #> 2532  422 -0.039045954  0.388736159 #> 2533  423 -0.018727938  0.400466771 #> 2534  423 -0.039045954  0.388736159 #> 2535  423 -0.039045954  0.365274936 #> 2536  423 -0.018727938  0.353544324 #> 2537  423  0.001590077  0.365274936 #> 2538  423  0.001590077  0.388736159 #> 2539  424  0.021908092  0.400466771 #> 2540  424  0.001590077  0.388736159 #> 2541  424  0.001590077  0.365274936 #> 2542  424  0.021908092  0.353544324 #> 2543  424  0.042226108  0.365274936 #> 2544  424  0.042226108  0.388736159 #> 2545  425  0.062544123  0.400466771 #> 2546  425  0.042226108  0.388736159 #> 2547  425  0.042226108  0.365274936 #> 2548  425  0.062544123  0.353544324 #> 2549  425  0.082862139  0.365274936 #> 2550  425  0.082862139  0.388736159 #> 2551  426  0.103180154  0.400466771 #> 2552  426  0.082862139  0.388736159 #> 2553  426  0.082862139  0.365274936 #> 2554  426  0.103180154  0.353544324 #> 2555  426  0.123498170  0.365274936 #> 2556  426  0.123498170  0.388736159 #> 2557  427  0.143816185  0.400466771 #> 2558  427  0.123498170  0.388736159 #> 2559  427  0.123498170  0.365274936 #> 2560  427  0.143816185  0.353544324 #> 2561  427  0.164134200  0.365274936 #> 2562  427  0.164134200  0.388736159 #> 2563  428  0.184452216  0.400466771 #> 2564  428  0.164134200  0.388736159 #> 2565  428  0.164134200  0.365274936 #> 2566  428  0.184452216  0.353544324 #> 2567  428  0.204770231  0.365274936 #> 2568  428  0.204770231  0.388736159 #> 2569  429  0.225088247  0.400466771 #> 2570  429  0.204770231  0.388736159 #> 2571  429  0.204770231  0.365274936 #> 2572  429  0.225088247  0.353544324 #> 2573  429  0.245406262  0.365274936 #> 2574  429  0.245406262  0.388736159 #> 2575  430  0.265724277  0.400466771 #> 2576  430  0.245406262  0.388736159 #> 2577  430  0.245406262  0.365274936 #> 2578  430  0.265724277  0.353544324 #> 2579  430  0.286042293  0.365274936 #> 2580  430  0.286042293  0.388736159 #> 2581  431  0.306360308  0.400466771 #> 2582  431  0.286042293  0.388736159 #> 2583  431  0.286042293  0.365274936 #> 2584  431  0.306360308  0.353544324 #> 2585  431  0.326678324  0.365274936 #> 2586  431  0.326678324  0.388736159 #> 2587  432  0.346996339  0.400466771 #> 2588  432  0.326678324  0.388736159 #> 2589  432  0.326678324  0.365274936 #> 2590  432  0.346996339  0.353544324 #> 2591  432  0.367314354  0.365274936 #> 2592  432  0.367314354  0.388736159 #> 2593  433  0.387632370  0.400466771 #> 2594  433  0.367314354  0.388736159 #> 2595  433  0.367314354  0.365274936 #> 2596  433  0.387632370  0.353544324 #> 2597  433  0.407950385  0.365274936 #> 2598  433  0.407950385  0.388736159 #> 2599  434  0.428268401  0.400466771 #> 2600  434  0.407950385  0.388736159 #> 2601  434  0.407950385  0.365274936 #> 2602  434  0.428268401  0.353544324 #> 2603  434  0.448586416  0.365274936 #> 2604  434  0.448586416  0.388736159 #> 2605  435  0.468904432  0.400466771 #> 2606  435  0.448586416  0.388736159 #> 2607  435  0.448586416  0.365274936 #> 2608  435  0.468904432  0.353544324 #> 2609  435  0.489222447  0.365274936 #> 2610  435  0.489222447  0.388736159 #> 2611  436  0.509540462  0.400466771 #> 2612  436  0.489222447  0.388736159 #> 2613  436  0.489222447  0.365274936 #> 2614  436  0.509540462  0.353544324 #> 2615  436  0.529858478  0.365274936 #> 2616  436  0.529858478  0.388736159 #> 2617  437  0.550176493  0.400466771 #> 2618  437  0.529858478  0.388736159 #> 2619  437  0.529858478  0.365274936 #> 2620  437  0.550176493  0.353544324 #> 2621  437  0.570494509  0.365274936 #> 2622  437  0.570494509  0.388736159 #> 2623  438  0.590812524  0.400466771 #> 2624  438  0.570494509  0.388736159 #> 2625  438  0.570494509  0.365274936 #> 2626  438  0.590812524  0.353544324 #> 2627  438  0.611130539  0.365274936 #> 2628  438  0.611130539  0.388736159 #> 2629  439  0.631448555  0.400466771 #> 2630  439  0.611130539  0.388736159 #> 2631  439  0.611130539  0.365274936 #> 2632  439  0.631448555  0.353544324 #> 2633  439  0.651766570  0.365274936 #> 2634  439  0.651766570  0.388736159 #> 2635  440  0.672084586  0.400466771 #> 2636  440  0.651766570  0.388736159 #> 2637  440  0.651766570  0.365274936 #> 2638  440  0.672084586  0.353544324 #> 2639  440  0.692402601  0.365274936 #> 2640  440  0.692402601  0.388736159 #> 2641  441  0.712720616  0.400466771 #> 2642  441  0.692402601  0.388736159 #> 2643  441  0.692402601  0.365274936 #> 2644  441  0.712720616  0.353544324 #> 2645  441  0.733038632  0.365274936 #> 2646  441  0.733038632  0.388736159 #> 2647  442  0.753356647  0.400466771 #> 2648  442  0.733038632  0.388736159 #> 2649  442  0.733038632  0.365274936 #> 2650  442  0.753356647  0.353544324 #> 2651  442  0.773674663  0.365274936 #> 2652  442  0.773674663  0.388736159 #> 2653  443  0.793992678  0.400466771 #> 2654  443  0.773674663  0.388736159 #> 2655  443  0.773674663  0.365274936 #> 2656  443  0.793992678  0.353544324 #> 2657  443  0.814310694  0.365274936 #> 2658  443  0.814310694  0.388736159 #> 2659  444  0.834628709  0.400466771 #> 2660  444  0.814310694  0.388736159 #> 2661  444  0.814310694  0.365274936 #> 2662  444  0.834628709  0.353544324 #> 2663  444  0.854946724  0.365274936 #> 2664  444  0.854946724  0.388736159 #> 2665  445  0.875264740  0.400466771 #> 2666  445  0.854946724  0.388736159 #> 2667  445  0.854946724  0.365274936 #> 2668  445  0.875264740  0.353544324 #> 2669  445  0.895582755  0.365274936 #> 2670  445  0.895582755  0.388736159 #> 2671  446  0.915900771  0.400466771 #> 2672  446  0.895582755  0.388736159 #> 2673  446  0.895582755  0.365274936 #> 2674  446  0.915900771  0.353544324 #> 2675  446  0.936218786  0.365274936 #> 2676  446  0.936218786  0.388736159 #> 2677  447  0.956536801  0.400466771 #> 2678  447  0.936218786  0.388736159 #> 2679  447  0.936218786  0.365274936 #> 2680  447  0.956536801  0.353544324 #> 2681  447  0.976854817  0.365274936 #> 2682  447  0.976854817  0.388736159 #> 2683  448  0.997172832  0.400466771 #> 2684  448  0.976854817  0.388736159 #> 2685  448  0.976854817  0.365274936 #> 2686  448  0.997172832  0.353544324 #> 2687  448  1.017490848  0.365274936 #> 2688  448  1.017490848  0.388736159 #> 2689  449  1.037808863  0.400466771 #> 2690  449  1.017490848  0.388736159 #> 2691  449  1.017490848  0.365274936 #> 2692  449  1.037808863  0.353544324 #> 2693  449  1.058126878  0.365274936 #> 2694  449  1.058126878  0.388736159 #> 2695  450  1.078444894  0.400466771 #> 2696  450  1.058126878  0.388736159 #> 2697  450  1.058126878  0.365274936 #> 2698  450  1.078444894  0.353544324 #> 2699  450  1.098762909  0.365274936 #> 2700  450  1.098762909  0.388736159 #> 2701  451 -0.079681985  0.435658606 #> 2702  451 -0.100000000  0.423927994 #> 2703  451 -0.100000000  0.400466771 #> 2704  451 -0.079681985  0.388736159 #> 2705  451 -0.059363969  0.400466771 #> 2706  451 -0.059363969  0.423927994 #> 2707  452 -0.039045954  0.435658606 #> 2708  452 -0.059363969  0.423927994 #> 2709  452 -0.059363969  0.400466771 #> 2710  452 -0.039045954  0.388736159 #> 2711  452 -0.018727938  0.400466771 #> 2712  452 -0.018727938  0.423927994 #> 2713  453  0.001590077  0.435658606 #> 2714  453 -0.018727938  0.423927994 #> 2715  453 -0.018727938  0.400466771 #> 2716  453  0.001590077  0.388736159 #> 2717  453  0.021908092  0.400466771 #> 2718  453  0.021908092  0.423927994 #> 2719  454  0.042226108  0.435658606 #> 2720  454  0.021908092  0.423927994 #> 2721  454  0.021908092  0.400466771 #> 2722  454  0.042226108  0.388736159 #> 2723  454  0.062544123  0.400466771 #> 2724  454  0.062544123  0.423927994 #> 2725  455  0.082862139  0.435658606 #> 2726  455  0.062544123  0.423927994 #> 2727  455  0.062544123  0.400466771 #> 2728  455  0.082862139  0.388736159 #> 2729  455  0.103180154  0.400466771 #> 2730  455  0.103180154  0.423927994 #> 2731  456  0.123498170  0.435658606 #> 2732  456  0.103180154  0.423927994 #> 2733  456  0.103180154  0.400466771 #> 2734  456  0.123498170  0.388736159 #> 2735  456  0.143816185  0.400466771 #> 2736  456  0.143816185  0.423927994 #> 2737  457  0.164134200  0.435658606 #> 2738  457  0.143816185  0.423927994 #> 2739  457  0.143816185  0.400466771 #> 2740  457  0.164134200  0.388736159 #> 2741  457  0.184452216  0.400466771 #> 2742  457  0.184452216  0.423927994 #> 2743  458  0.204770231  0.435658606 #> 2744  458  0.184452216  0.423927994 #> 2745  458  0.184452216  0.400466771 #> 2746  458  0.204770231  0.388736159 #> 2747  458  0.225088247  0.400466771 #> 2748  458  0.225088247  0.423927994 #> 2749  459  0.245406262  0.435658606 #> 2750  459  0.225088247  0.423927994 #> 2751  459  0.225088247  0.400466771 #> 2752  459  0.245406262  0.388736159 #> 2753  459  0.265724277  0.400466771 #> 2754  459  0.265724277  0.423927994 #> 2755  460  0.286042293  0.435658606 #> 2756  460  0.265724277  0.423927994 #> 2757  460  0.265724277  0.400466771 #> 2758  460  0.286042293  0.388736159 #> 2759  460  0.306360308  0.400466771 #> 2760  460  0.306360308  0.423927994 #> 2761  461  0.326678324  0.435658606 #> 2762  461  0.306360308  0.423927994 #> 2763  461  0.306360308  0.400466771 #> 2764  461  0.326678324  0.388736159 #> 2765  461  0.346996339  0.400466771 #> 2766  461  0.346996339  0.423927994 #> 2767  462  0.367314354  0.435658606 #> 2768  462  0.346996339  0.423927994 #> 2769  462  0.346996339  0.400466771 #> 2770  462  0.367314354  0.388736159 #> 2771  462  0.387632370  0.400466771 #> 2772  462  0.387632370  0.423927994 #> 2773  463  0.407950385  0.435658606 #> 2774  463  0.387632370  0.423927994 #> 2775  463  0.387632370  0.400466771 #> 2776  463  0.407950385  0.388736159 #> 2777  463  0.428268401  0.400466771 #> 2778  463  0.428268401  0.423927994 #> 2779  464  0.448586416  0.435658606 #> 2780  464  0.428268401  0.423927994 #> 2781  464  0.428268401  0.400466771 #> 2782  464  0.448586416  0.388736159 #> 2783  464  0.468904432  0.400466771 #> 2784  464  0.468904432  0.423927994 #> 2785  465  0.489222447  0.435658606 #> 2786  465  0.468904432  0.423927994 #> 2787  465  0.468904432  0.400466771 #> 2788  465  0.489222447  0.388736159 #> 2789  465  0.509540462  0.400466771 #> 2790  465  0.509540462  0.423927994 #> 2791  466  0.529858478  0.435658606 #> 2792  466  0.509540462  0.423927994 #> 2793  466  0.509540462  0.400466771 #> 2794  466  0.529858478  0.388736159 #> 2795  466  0.550176493  0.400466771 #> 2796  466  0.550176493  0.423927994 #> 2797  467  0.570494509  0.435658606 #> 2798  467  0.550176493  0.423927994 #> 2799  467  0.550176493  0.400466771 #> 2800  467  0.570494509  0.388736159 #> 2801  467  0.590812524  0.400466771 #> 2802  467  0.590812524  0.423927994 #> 2803  468  0.611130539  0.435658606 #> 2804  468  0.590812524  0.423927994 #> 2805  468  0.590812524  0.400466771 #> 2806  468  0.611130539  0.388736159 #> 2807  468  0.631448555  0.400466771 #> 2808  468  0.631448555  0.423927994 #> 2809  469  0.651766570  0.435658606 #> 2810  469  0.631448555  0.423927994 #> 2811  469  0.631448555  0.400466771 #> 2812  469  0.651766570  0.388736159 #> 2813  469  0.672084586  0.400466771 #> 2814  469  0.672084586  0.423927994 #> 2815  470  0.692402601  0.435658606 #> 2816  470  0.672084586  0.423927994 #> 2817  470  0.672084586  0.400466771 #> 2818  470  0.692402601  0.388736159 #> 2819  470  0.712720616  0.400466771 #> 2820  470  0.712720616  0.423927994 #> 2821  471  0.733038632  0.435658606 #> 2822  471  0.712720616  0.423927994 #> 2823  471  0.712720616  0.400466771 #> 2824  471  0.733038632  0.388736159 #> 2825  471  0.753356647  0.400466771 #> 2826  471  0.753356647  0.423927994 #> 2827  472  0.773674663  0.435658606 #> 2828  472  0.753356647  0.423927994 #> 2829  472  0.753356647  0.400466771 #> 2830  472  0.773674663  0.388736159 #> 2831  472  0.793992678  0.400466771 #> 2832  472  0.793992678  0.423927994 #> 2833  473  0.814310694  0.435658606 #> 2834  473  0.793992678  0.423927994 #> 2835  473  0.793992678  0.400466771 #> 2836  473  0.814310694  0.388736159 #> 2837  473  0.834628709  0.400466771 #> 2838  473  0.834628709  0.423927994 #> 2839  474  0.854946724  0.435658606 #> 2840  474  0.834628709  0.423927994 #> 2841  474  0.834628709  0.400466771 #> 2842  474  0.854946724  0.388736159 #> 2843  474  0.875264740  0.400466771 #> 2844  474  0.875264740  0.423927994 #> 2845  475  0.895582755  0.435658606 #> 2846  475  0.875264740  0.423927994 #> 2847  475  0.875264740  0.400466771 #> 2848  475  0.895582755  0.388736159 #> 2849  475  0.915900771  0.400466771 #> 2850  475  0.915900771  0.423927994 #> 2851  476  0.936218786  0.435658606 #> 2852  476  0.915900771  0.423927994 #> 2853  476  0.915900771  0.400466771 #> 2854  476  0.936218786  0.388736159 #> 2855  476  0.956536801  0.400466771 #> 2856  476  0.956536801  0.423927994 #> 2857  477  0.976854817  0.435658606 #> 2858  477  0.956536801  0.423927994 #> 2859  477  0.956536801  0.400466771 #> 2860  477  0.976854817  0.388736159 #> 2861  477  0.997172832  0.400466771 #> 2862  477  0.997172832  0.423927994 #> 2863  478  1.017490848  0.435658606 #> 2864  478  0.997172832  0.423927994 #> 2865  478  0.997172832  0.400466771 #> 2866  478  1.017490848  0.388736159 #> 2867  478  1.037808863  0.400466771 #> 2868  478  1.037808863  0.423927994 #> 2869  479  1.058126878  0.435658606 #> 2870  479  1.037808863  0.423927994 #> 2871  479  1.037808863  0.400466771 #> 2872  479  1.058126878  0.388736159 #> 2873  479  1.078444894  0.400466771 #> 2874  479  1.078444894  0.423927994 #> 2875  480  1.098762909  0.435658606 #> 2876  480  1.078444894  0.423927994 #> 2877  480  1.078444894  0.400466771 #> 2878  480  1.098762909  0.388736159 #> 2879  480  1.119080925  0.400466771 #> 2880  480  1.119080925  0.423927994 #> 2881  481 -0.100000000  0.470850441 #> 2882  481 -0.120318015  0.459119829 #> 2883  481 -0.120318015  0.435658606 #> 2884  481 -0.100000000  0.423927994 #> 2885  481 -0.079681985  0.435658606 #> 2886  481 -0.079681985  0.459119829 #> 2887  482 -0.059363969  0.470850441 #> 2888  482 -0.079681985  0.459119829 #> 2889  482 -0.079681985  0.435658606 #> 2890  482 -0.059363969  0.423927994 #> 2891  482 -0.039045954  0.435658606 #> 2892  482 -0.039045954  0.459119829 #> 2893  483 -0.018727938  0.470850441 #> 2894  483 -0.039045954  0.459119829 #> 2895  483 -0.039045954  0.435658606 #> 2896  483 -0.018727938  0.423927994 #> 2897  483  0.001590077  0.435658606 #> 2898  483  0.001590077  0.459119829 #> 2899  484  0.021908092  0.470850441 #> 2900  484  0.001590077  0.459119829 #> 2901  484  0.001590077  0.435658606 #> 2902  484  0.021908092  0.423927994 #> 2903  484  0.042226108  0.435658606 #> 2904  484  0.042226108  0.459119829 #> 2905  485  0.062544123  0.470850441 #> 2906  485  0.042226108  0.459119829 #> 2907  485  0.042226108  0.435658606 #> 2908  485  0.062544123  0.423927994 #> 2909  485  0.082862139  0.435658606 #> 2910  485  0.082862139  0.459119829 #> 2911  486  0.103180154  0.470850441 #> 2912  486  0.082862139  0.459119829 #> 2913  486  0.082862139  0.435658606 #> 2914  486  0.103180154  0.423927994 #> 2915  486  0.123498170  0.435658606 #> 2916  486  0.123498170  0.459119829 #> 2917  487  0.143816185  0.470850441 #> 2918  487  0.123498170  0.459119829 #> 2919  487  0.123498170  0.435658606 #> 2920  487  0.143816185  0.423927994 #> 2921  487  0.164134200  0.435658606 #> 2922  487  0.164134200  0.459119829 #> 2923  488  0.184452216  0.470850441 #> 2924  488  0.164134200  0.459119829 #> 2925  488  0.164134200  0.435658606 #> 2926  488  0.184452216  0.423927994 #> 2927  488  0.204770231  0.435658606 #> 2928  488  0.204770231  0.459119829 #> 2929  489  0.225088247  0.470850441 #> 2930  489  0.204770231  0.459119829 #> 2931  489  0.204770231  0.435658606 #> 2932  489  0.225088247  0.423927994 #> 2933  489  0.245406262  0.435658606 #> 2934  489  0.245406262  0.459119829 #> 2935  490  0.265724277  0.470850441 #> 2936  490  0.245406262  0.459119829 #> 2937  490  0.245406262  0.435658606 #> 2938  490  0.265724277  0.423927994 #> 2939  490  0.286042293  0.435658606 #> 2940  490  0.286042293  0.459119829 #> 2941  491  0.306360308  0.470850441 #> 2942  491  0.286042293  0.459119829 #> 2943  491  0.286042293  0.435658606 #> 2944  491  0.306360308  0.423927994 #> 2945  491  0.326678324  0.435658606 #> 2946  491  0.326678324  0.459119829 #> 2947  492  0.346996339  0.470850441 #> 2948  492  0.326678324  0.459119829 #> 2949  492  0.326678324  0.435658606 #> 2950  492  0.346996339  0.423927994 #> 2951  492  0.367314354  0.435658606 #> 2952  492  0.367314354  0.459119829 #> 2953  493  0.387632370  0.470850441 #> 2954  493  0.367314354  0.459119829 #> 2955  493  0.367314354  0.435658606 #> 2956  493  0.387632370  0.423927994 #> 2957  493  0.407950385  0.435658606 #> 2958  493  0.407950385  0.459119829 #> 2959  494  0.428268401  0.470850441 #> 2960  494  0.407950385  0.459119829 #> 2961  494  0.407950385  0.435658606 #> 2962  494  0.428268401  0.423927994 #> 2963  494  0.448586416  0.435658606 #> 2964  494  0.448586416  0.459119829 #> 2965  495  0.468904432  0.470850441 #> 2966  495  0.448586416  0.459119829 #> 2967  495  0.448586416  0.435658606 #> 2968  495  0.468904432  0.423927994 #> 2969  495  0.489222447  0.435658606 #> 2970  495  0.489222447  0.459119829 #> 2971  496  0.509540462  0.470850441 #> 2972  496  0.489222447  0.459119829 #> 2973  496  0.489222447  0.435658606 #> 2974  496  0.509540462  0.423927994 #> 2975  496  0.529858478  0.435658606 #> 2976  496  0.529858478  0.459119829 #> 2977  497  0.550176493  0.470850441 #> 2978  497  0.529858478  0.459119829 #> 2979  497  0.529858478  0.435658606 #> 2980  497  0.550176493  0.423927994 #> 2981  497  0.570494509  0.435658606 #> 2982  497  0.570494509  0.459119829 #> 2983  498  0.590812524  0.470850441 #> 2984  498  0.570494509  0.459119829 #> 2985  498  0.570494509  0.435658606 #> 2986  498  0.590812524  0.423927994 #> 2987  498  0.611130539  0.435658606 #> 2988  498  0.611130539  0.459119829 #> 2989  499  0.631448555  0.470850441 #> 2990  499  0.611130539  0.459119829 #> 2991  499  0.611130539  0.435658606 #> 2992  499  0.631448555  0.423927994 #> 2993  499  0.651766570  0.435658606 #> 2994  499  0.651766570  0.459119829 #> 2995  500  0.672084586  0.470850441 #> 2996  500  0.651766570  0.459119829 #> 2997  500  0.651766570  0.435658606 #> 2998  500  0.672084586  0.423927994 #> 2999  500  0.692402601  0.435658606 #> 3000  500  0.692402601  0.459119829 #> 3001  501  0.712720616  0.470850441 #> 3002  501  0.692402601  0.459119829 #> 3003  501  0.692402601  0.435658606 #> 3004  501  0.712720616  0.423927994 #> 3005  501  0.733038632  0.435658606 #> 3006  501  0.733038632  0.459119829 #> 3007  502  0.753356647  0.470850441 #> 3008  502  0.733038632  0.459119829 #> 3009  502  0.733038632  0.435658606 #> 3010  502  0.753356647  0.423927994 #> 3011  502  0.773674663  0.435658606 #> 3012  502  0.773674663  0.459119829 #> 3013  503  0.793992678  0.470850441 #> 3014  503  0.773674663  0.459119829 #> 3015  503  0.773674663  0.435658606 #> 3016  503  0.793992678  0.423927994 #> 3017  503  0.814310694  0.435658606 #> 3018  503  0.814310694  0.459119829 #> 3019  504  0.834628709  0.470850441 #> 3020  504  0.814310694  0.459119829 #> 3021  504  0.814310694  0.435658606 #> 3022  504  0.834628709  0.423927994 #> 3023  504  0.854946724  0.435658606 #> 3024  504  0.854946724  0.459119829 #> 3025  505  0.875264740  0.470850441 #> 3026  505  0.854946724  0.459119829 #> 3027  505  0.854946724  0.435658606 #> 3028  505  0.875264740  0.423927994 #> 3029  505  0.895582755  0.435658606 #> 3030  505  0.895582755  0.459119829 #> 3031  506  0.915900771  0.470850441 #> 3032  506  0.895582755  0.459119829 #> 3033  506  0.895582755  0.435658606 #> 3034  506  0.915900771  0.423927994 #> 3035  506  0.936218786  0.435658606 #> 3036  506  0.936218786  0.459119829 #> 3037  507  0.956536801  0.470850441 #> 3038  507  0.936218786  0.459119829 #> 3039  507  0.936218786  0.435658606 #> 3040  507  0.956536801  0.423927994 #> 3041  507  0.976854817  0.435658606 #> 3042  507  0.976854817  0.459119829 #> 3043  508  0.997172832  0.470850441 #> 3044  508  0.976854817  0.459119829 #> 3045  508  0.976854817  0.435658606 #> 3046  508  0.997172832  0.423927994 #> 3047  508  1.017490848  0.435658606 #> 3048  508  1.017490848  0.459119829 #> 3049  509  1.037808863  0.470850441 #> 3050  509  1.017490848  0.459119829 #> 3051  509  1.017490848  0.435658606 #> 3052  509  1.037808863  0.423927994 #> 3053  509  1.058126878  0.435658606 #> 3054  509  1.058126878  0.459119829 #> 3055  510  1.078444894  0.470850441 #> 3056  510  1.058126878  0.459119829 #> 3057  510  1.058126878  0.435658606 #> 3058  510  1.078444894  0.423927994 #> 3059  510  1.098762909  0.435658606 #> 3060  510  1.098762909  0.459119829 #> 3061  511 -0.079681985  0.506042276 #> 3062  511 -0.100000000  0.494311664 #> 3063  511 -0.100000000  0.470850441 #> 3064  511 -0.079681985  0.459119829 #> 3065  511 -0.059363969  0.470850441 #> 3066  511 -0.059363969  0.494311664 #> 3067  512 -0.039045954  0.506042276 #> 3068  512 -0.059363969  0.494311664 #> 3069  512 -0.059363969  0.470850441 #> 3070  512 -0.039045954  0.459119829 #> 3071  512 -0.018727938  0.470850441 #> 3072  512 -0.018727938  0.494311664 #> 3073  513  0.001590077  0.506042276 #> 3074  513 -0.018727938  0.494311664 #> 3075  513 -0.018727938  0.470850441 #> 3076  513  0.001590077  0.459119829 #> 3077  513  0.021908092  0.470850441 #> 3078  513  0.021908092  0.494311664 #> 3079  514  0.042226108  0.506042276 #> 3080  514  0.021908092  0.494311664 #> 3081  514  0.021908092  0.470850441 #> 3082  514  0.042226108  0.459119829 #> 3083  514  0.062544123  0.470850441 #> 3084  514  0.062544123  0.494311664 #> 3085  515  0.082862139  0.506042276 #> 3086  515  0.062544123  0.494311664 #> 3087  515  0.062544123  0.470850441 #> 3088  515  0.082862139  0.459119829 #> 3089  515  0.103180154  0.470850441 #> 3090  515  0.103180154  0.494311664 #> 3091  516  0.123498170  0.506042276 #> 3092  516  0.103180154  0.494311664 #> 3093  516  0.103180154  0.470850441 #> 3094  516  0.123498170  0.459119829 #> 3095  516  0.143816185  0.470850441 #> 3096  516  0.143816185  0.494311664 #> 3097  517  0.164134200  0.506042276 #> 3098  517  0.143816185  0.494311664 #> 3099  517  0.143816185  0.470850441 #> 3100  517  0.164134200  0.459119829 #> 3101  517  0.184452216  0.470850441 #> 3102  517  0.184452216  0.494311664 #> 3103  518  0.204770231  0.506042276 #> 3104  518  0.184452216  0.494311664 #> 3105  518  0.184452216  0.470850441 #> 3106  518  0.204770231  0.459119829 #> 3107  518  0.225088247  0.470850441 #> 3108  518  0.225088247  0.494311664 #> 3109  519  0.245406262  0.506042276 #> 3110  519  0.225088247  0.494311664 #> 3111  519  0.225088247  0.470850441 #> 3112  519  0.245406262  0.459119829 #> 3113  519  0.265724277  0.470850441 #> 3114  519  0.265724277  0.494311664 #> 3115  520  0.286042293  0.506042276 #> 3116  520  0.265724277  0.494311664 #> 3117  520  0.265724277  0.470850441 #> 3118  520  0.286042293  0.459119829 #> 3119  520  0.306360308  0.470850441 #> 3120  520  0.306360308  0.494311664 #> 3121  521  0.326678324  0.506042276 #> 3122  521  0.306360308  0.494311664 #> 3123  521  0.306360308  0.470850441 #> 3124  521  0.326678324  0.459119829 #> 3125  521  0.346996339  0.470850441 #> 3126  521  0.346996339  0.494311664 #> 3127  522  0.367314354  0.506042276 #> 3128  522  0.346996339  0.494311664 #> 3129  522  0.346996339  0.470850441 #> 3130  522  0.367314354  0.459119829 #> 3131  522  0.387632370  0.470850441 #> 3132  522  0.387632370  0.494311664 #> 3133  523  0.407950385  0.506042276 #> 3134  523  0.387632370  0.494311664 #> 3135  523  0.387632370  0.470850441 #> 3136  523  0.407950385  0.459119829 #> 3137  523  0.428268401  0.470850441 #> 3138  523  0.428268401  0.494311664 #> 3139  524  0.448586416  0.506042276 #> 3140  524  0.428268401  0.494311664 #> 3141  524  0.428268401  0.470850441 #> 3142  524  0.448586416  0.459119829 #> 3143  524  0.468904432  0.470850441 #> 3144  524  0.468904432  0.494311664 #> 3145  525  0.489222447  0.506042276 #> 3146  525  0.468904432  0.494311664 #> 3147  525  0.468904432  0.470850441 #> 3148  525  0.489222447  0.459119829 #> 3149  525  0.509540462  0.470850441 #> 3150  525  0.509540462  0.494311664 #> 3151  526  0.529858478  0.506042276 #> 3152  526  0.509540462  0.494311664 #> 3153  526  0.509540462  0.470850441 #> 3154  526  0.529858478  0.459119829 #> 3155  526  0.550176493  0.470850441 #> 3156  526  0.550176493  0.494311664 #> 3157  527  0.570494509  0.506042276 #> 3158  527  0.550176493  0.494311664 #> 3159  527  0.550176493  0.470850441 #> 3160  527  0.570494509  0.459119829 #> 3161  527  0.590812524  0.470850441 #> 3162  527  0.590812524  0.494311664 #> 3163  528  0.611130539  0.506042276 #> 3164  528  0.590812524  0.494311664 #> 3165  528  0.590812524  0.470850441 #> 3166  528  0.611130539  0.459119829 #> 3167  528  0.631448555  0.470850441 #> 3168  528  0.631448555  0.494311664 #> 3169  529  0.651766570  0.506042276 #> 3170  529  0.631448555  0.494311664 #> 3171  529  0.631448555  0.470850441 #> 3172  529  0.651766570  0.459119829 #> 3173  529  0.672084586  0.470850441 #> 3174  529  0.672084586  0.494311664 #> 3175  530  0.692402601  0.506042276 #> 3176  530  0.672084586  0.494311664 #> 3177  530  0.672084586  0.470850441 #> 3178  530  0.692402601  0.459119829 #> 3179  530  0.712720616  0.470850441 #> 3180  530  0.712720616  0.494311664 #> 3181  531  0.733038632  0.506042276 #> 3182  531  0.712720616  0.494311664 #> 3183  531  0.712720616  0.470850441 #> 3184  531  0.733038632  0.459119829 #> 3185  531  0.753356647  0.470850441 #> 3186  531  0.753356647  0.494311664 #> 3187  532  0.773674663  0.506042276 #> 3188  532  0.753356647  0.494311664 #> 3189  532  0.753356647  0.470850441 #> 3190  532  0.773674663  0.459119829 #> 3191  532  0.793992678  0.470850441 #> 3192  532  0.793992678  0.494311664 #> 3193  533  0.814310694  0.506042276 #> 3194  533  0.793992678  0.494311664 #> 3195  533  0.793992678  0.470850441 #> 3196  533  0.814310694  0.459119829 #> 3197  533  0.834628709  0.470850441 #> 3198  533  0.834628709  0.494311664 #> 3199  534  0.854946724  0.506042276 #> 3200  534  0.834628709  0.494311664 #> 3201  534  0.834628709  0.470850441 #> 3202  534  0.854946724  0.459119829 #> 3203  534  0.875264740  0.470850441 #> 3204  534  0.875264740  0.494311664 #> 3205  535  0.895582755  0.506042276 #> 3206  535  0.875264740  0.494311664 #> 3207  535  0.875264740  0.470850441 #> 3208  535  0.895582755  0.459119829 #> 3209  535  0.915900771  0.470850441 #> 3210  535  0.915900771  0.494311664 #> 3211  536  0.936218786  0.506042276 #> 3212  536  0.915900771  0.494311664 #> 3213  536  0.915900771  0.470850441 #> 3214  536  0.936218786  0.459119829 #> 3215  536  0.956536801  0.470850441 #> 3216  536  0.956536801  0.494311664 #> 3217  537  0.976854817  0.506042276 #> 3218  537  0.956536801  0.494311664 #> 3219  537  0.956536801  0.470850441 #> 3220  537  0.976854817  0.459119829 #> 3221  537  0.997172832  0.470850441 #> 3222  537  0.997172832  0.494311664 #> 3223  538  1.017490848  0.506042276 #> 3224  538  0.997172832  0.494311664 #> 3225  538  0.997172832  0.470850441 #> 3226  538  1.017490848  0.459119829 #> 3227  538  1.037808863  0.470850441 #> 3228  538  1.037808863  0.494311664 #> 3229  539  1.058126878  0.506042276 #> 3230  539  1.037808863  0.494311664 #> 3231  539  1.037808863  0.470850441 #> 3232  539  1.058126878  0.459119829 #> 3233  539  1.078444894  0.470850441 #> 3234  539  1.078444894  0.494311664 #> 3235  540  1.098762909  0.506042276 #> 3236  540  1.078444894  0.494311664 #> 3237  540  1.078444894  0.470850441 #> 3238  540  1.098762909  0.459119829 #> 3239  540  1.119080925  0.470850441 #> 3240  540  1.119080925  0.494311664 #> 3241  541 -0.100000000  0.541234111 #> 3242  541 -0.120318015  0.529503499 #> 3243  541 -0.120318015  0.506042276 #> 3244  541 -0.100000000  0.494311664 #> 3245  541 -0.079681985  0.506042276 #> 3246  541 -0.079681985  0.529503499 #> 3247  542 -0.059363969  0.541234111 #> 3248  542 -0.079681985  0.529503499 #> 3249  542 -0.079681985  0.506042276 #> 3250  542 -0.059363969  0.494311664 #> 3251  542 -0.039045954  0.506042276 #> 3252  542 -0.039045954  0.529503499 #> 3253  543 -0.018727938  0.541234111 #> 3254  543 -0.039045954  0.529503499 #> 3255  543 -0.039045954  0.506042276 #> 3256  543 -0.018727938  0.494311664 #> 3257  543  0.001590077  0.506042276 #> 3258  543  0.001590077  0.529503499 #> 3259  544  0.021908092  0.541234111 #> 3260  544  0.001590077  0.529503499 #> 3261  544  0.001590077  0.506042276 #> 3262  544  0.021908092  0.494311664 #> 3263  544  0.042226108  0.506042276 #> 3264  544  0.042226108  0.529503499 #> 3265  545  0.062544123  0.541234111 #> 3266  545  0.042226108  0.529503499 #> 3267  545  0.042226108  0.506042276 #> 3268  545  0.062544123  0.494311664 #> 3269  545  0.082862139  0.506042276 #> 3270  545  0.082862139  0.529503499 #> 3271  546  0.103180154  0.541234111 #> 3272  546  0.082862139  0.529503499 #> 3273  546  0.082862139  0.506042276 #> 3274  546  0.103180154  0.494311664 #> 3275  546  0.123498170  0.506042276 #> 3276  546  0.123498170  0.529503499 #> 3277  547  0.143816185  0.541234111 #> 3278  547  0.123498170  0.529503499 #> 3279  547  0.123498170  0.506042276 #> 3280  547  0.143816185  0.494311664 #> 3281  547  0.164134200  0.506042276 #> 3282  547  0.164134200  0.529503499 #> 3283  548  0.184452216  0.541234111 #> 3284  548  0.164134200  0.529503499 #> 3285  548  0.164134200  0.506042276 #> 3286  548  0.184452216  0.494311664 #> 3287  548  0.204770231  0.506042276 #> 3288  548  0.204770231  0.529503499 #> 3289  549  0.225088247  0.541234111 #> 3290  549  0.204770231  0.529503499 #> 3291  549  0.204770231  0.506042276 #> 3292  549  0.225088247  0.494311664 #> 3293  549  0.245406262  0.506042276 #> 3294  549  0.245406262  0.529503499 #> 3295  550  0.265724277  0.541234111 #> 3296  550  0.245406262  0.529503499 #> 3297  550  0.245406262  0.506042276 #> 3298  550  0.265724277  0.494311664 #> 3299  550  0.286042293  0.506042276 #> 3300  550  0.286042293  0.529503499 #> 3301  551  0.306360308  0.541234111 #> 3302  551  0.286042293  0.529503499 #> 3303  551  0.286042293  0.506042276 #> 3304  551  0.306360308  0.494311664 #> 3305  551  0.326678324  0.506042276 #> 3306  551  0.326678324  0.529503499 #> 3307  552  0.346996339  0.541234111 #> 3308  552  0.326678324  0.529503499 #> 3309  552  0.326678324  0.506042276 #> 3310  552  0.346996339  0.494311664 #> 3311  552  0.367314354  0.506042276 #> 3312  552  0.367314354  0.529503499 #> 3313  553  0.387632370  0.541234111 #> 3314  553  0.367314354  0.529503499 #> 3315  553  0.367314354  0.506042276 #> 3316  553  0.387632370  0.494311664 #> 3317  553  0.407950385  0.506042276 #> 3318  553  0.407950385  0.529503499 #> 3319  554  0.428268401  0.541234111 #> 3320  554  0.407950385  0.529503499 #> 3321  554  0.407950385  0.506042276 #> 3322  554  0.428268401  0.494311664 #> 3323  554  0.448586416  0.506042276 #> 3324  554  0.448586416  0.529503499 #> 3325  555  0.468904432  0.541234111 #> 3326  555  0.448586416  0.529503499 #> 3327  555  0.448586416  0.506042276 #> 3328  555  0.468904432  0.494311664 #> 3329  555  0.489222447  0.506042276 #> 3330  555  0.489222447  0.529503499 #> 3331  556  0.509540462  0.541234111 #> 3332  556  0.489222447  0.529503499 #> 3333  556  0.489222447  0.506042276 #> 3334  556  0.509540462  0.494311664 #> 3335  556  0.529858478  0.506042276 #> 3336  556  0.529858478  0.529503499 #> 3337  557  0.550176493  0.541234111 #> 3338  557  0.529858478  0.529503499 #> 3339  557  0.529858478  0.506042276 #> 3340  557  0.550176493  0.494311664 #> 3341  557  0.570494509  0.506042276 #> 3342  557  0.570494509  0.529503499 #> 3343  558  0.590812524  0.541234111 #> 3344  558  0.570494509  0.529503499 #> 3345  558  0.570494509  0.506042276 #> 3346  558  0.590812524  0.494311664 #> 3347  558  0.611130539  0.506042276 #> 3348  558  0.611130539  0.529503499 #> 3349  559  0.631448555  0.541234111 #> 3350  559  0.611130539  0.529503499 #> 3351  559  0.611130539  0.506042276 #> 3352  559  0.631448555  0.494311664 #> 3353  559  0.651766570  0.506042276 #> 3354  559  0.651766570  0.529503499 #> 3355  560  0.672084586  0.541234111 #> 3356  560  0.651766570  0.529503499 #> 3357  560  0.651766570  0.506042276 #> 3358  560  0.672084586  0.494311664 #> 3359  560  0.692402601  0.506042276 #> 3360  560  0.692402601  0.529503499 #> 3361  561  0.712720616  0.541234111 #> 3362  561  0.692402601  0.529503499 #> 3363  561  0.692402601  0.506042276 #> 3364  561  0.712720616  0.494311664 #> 3365  561  0.733038632  0.506042276 #> 3366  561  0.733038632  0.529503499 #> 3367  562  0.753356647  0.541234111 #> 3368  562  0.733038632  0.529503499 #> 3369  562  0.733038632  0.506042276 #> 3370  562  0.753356647  0.494311664 #> 3371  562  0.773674663  0.506042276 #> 3372  562  0.773674663  0.529503499 #> 3373  563  0.793992678  0.541234111 #> 3374  563  0.773674663  0.529503499 #> 3375  563  0.773674663  0.506042276 #> 3376  563  0.793992678  0.494311664 #> 3377  563  0.814310694  0.506042276 #> 3378  563  0.814310694  0.529503499 #> 3379  564  0.834628709  0.541234111 #> 3380  564  0.814310694  0.529503499 #> 3381  564  0.814310694  0.506042276 #> 3382  564  0.834628709  0.494311664 #> 3383  564  0.854946724  0.506042276 #> 3384  564  0.854946724  0.529503499 #> 3385  565  0.875264740  0.541234111 #> 3386  565  0.854946724  0.529503499 #> 3387  565  0.854946724  0.506042276 #> 3388  565  0.875264740  0.494311664 #> 3389  565  0.895582755  0.506042276 #> 3390  565  0.895582755  0.529503499 #> 3391  566  0.915900771  0.541234111 #> 3392  566  0.895582755  0.529503499 #> 3393  566  0.895582755  0.506042276 #> 3394  566  0.915900771  0.494311664 #> 3395  566  0.936218786  0.506042276 #> 3396  566  0.936218786  0.529503499 #> 3397  567  0.956536801  0.541234111 #> 3398  567  0.936218786  0.529503499 #> 3399  567  0.936218786  0.506042276 #> 3400  567  0.956536801  0.494311664 #> 3401  567  0.976854817  0.506042276 #> 3402  567  0.976854817  0.529503499 #> 3403  568  0.997172832  0.541234111 #> 3404  568  0.976854817  0.529503499 #> 3405  568  0.976854817  0.506042276 #> 3406  568  0.997172832  0.494311664 #> 3407  568  1.017490848  0.506042276 #> 3408  568  1.017490848  0.529503499 #> 3409  569  1.037808863  0.541234111 #> 3410  569  1.017490848  0.529503499 #> 3411  569  1.017490848  0.506042276 #> 3412  569  1.037808863  0.494311664 #> 3413  569  1.058126878  0.506042276 #> 3414  569  1.058126878  0.529503499 #> 3415  570  1.078444894  0.541234111 #> 3416  570  1.058126878  0.529503499 #> 3417  570  1.058126878  0.506042276 #> 3418  570  1.078444894  0.494311664 #> 3419  570  1.098762909  0.506042276 #> 3420  570  1.098762909  0.529503499 #> 3421  571 -0.079681985  0.576425946 #> 3422  571 -0.100000000  0.564695334 #> 3423  571 -0.100000000  0.541234111 #> 3424  571 -0.079681985  0.529503499 #> 3425  571 -0.059363969  0.541234111 #> 3426  571 -0.059363969  0.564695334 #> 3427  572 -0.039045954  0.576425946 #> 3428  572 -0.059363969  0.564695334 #> 3429  572 -0.059363969  0.541234111 #> 3430  572 -0.039045954  0.529503499 #> 3431  572 -0.018727938  0.541234111 #> 3432  572 -0.018727938  0.564695334 #> 3433  573  0.001590077  0.576425946 #> 3434  573 -0.018727938  0.564695334 #> 3435  573 -0.018727938  0.541234111 #> 3436  573  0.001590077  0.529503499 #> 3437  573  0.021908092  0.541234111 #> 3438  573  0.021908092  0.564695334 #> 3439  574  0.042226108  0.576425946 #> 3440  574  0.021908092  0.564695334 #> 3441  574  0.021908092  0.541234111 #> 3442  574  0.042226108  0.529503499 #> 3443  574  0.062544123  0.541234111 #> 3444  574  0.062544123  0.564695334 #> 3445  575  0.082862139  0.576425946 #> 3446  575  0.062544123  0.564695334 #> 3447  575  0.062544123  0.541234111 #> 3448  575  0.082862139  0.529503499 #> 3449  575  0.103180154  0.541234111 #> 3450  575  0.103180154  0.564695334 #> 3451  576  0.123498170  0.576425946 #> 3452  576  0.103180154  0.564695334 #> 3453  576  0.103180154  0.541234111 #> 3454  576  0.123498170  0.529503499 #> 3455  576  0.143816185  0.541234111 #> 3456  576  0.143816185  0.564695334 #> 3457  577  0.164134200  0.576425946 #> 3458  577  0.143816185  0.564695334 #> 3459  577  0.143816185  0.541234111 #> 3460  577  0.164134200  0.529503499 #> 3461  577  0.184452216  0.541234111 #> 3462  577  0.184452216  0.564695334 #> 3463  578  0.204770231  0.576425946 #> 3464  578  0.184452216  0.564695334 #> 3465  578  0.184452216  0.541234111 #> 3466  578  0.204770231  0.529503499 #> 3467  578  0.225088247  0.541234111 #> 3468  578  0.225088247  0.564695334 #> 3469  579  0.245406262  0.576425946 #> 3470  579  0.225088247  0.564695334 #> 3471  579  0.225088247  0.541234111 #> 3472  579  0.245406262  0.529503499 #> 3473  579  0.265724277  0.541234111 #> 3474  579  0.265724277  0.564695334 #> 3475  580  0.286042293  0.576425946 #> 3476  580  0.265724277  0.564695334 #> 3477  580  0.265724277  0.541234111 #> 3478  580  0.286042293  0.529503499 #> 3479  580  0.306360308  0.541234111 #> 3480  580  0.306360308  0.564695334 #> 3481  581  0.326678324  0.576425946 #> 3482  581  0.306360308  0.564695334 #> 3483  581  0.306360308  0.541234111 #> 3484  581  0.326678324  0.529503499 #> 3485  581  0.346996339  0.541234111 #> 3486  581  0.346996339  0.564695334 #> 3487  582  0.367314354  0.576425946 #> 3488  582  0.346996339  0.564695334 #> 3489  582  0.346996339  0.541234111 #> 3490  582  0.367314354  0.529503499 #> 3491  582  0.387632370  0.541234111 #> 3492  582  0.387632370  0.564695334 #> 3493  583  0.407950385  0.576425946 #> 3494  583  0.387632370  0.564695334 #> 3495  583  0.387632370  0.541234111 #> 3496  583  0.407950385  0.529503499 #> 3497  583  0.428268401  0.541234111 #> 3498  583  0.428268401  0.564695334 #> 3499  584  0.448586416  0.576425946 #> 3500  584  0.428268401  0.564695334 #> 3501  584  0.428268401  0.541234111 #> 3502  584  0.448586416  0.529503499 #> 3503  584  0.468904432  0.541234111 #> 3504  584  0.468904432  0.564695334 #> 3505  585  0.489222447  0.576425946 #> 3506  585  0.468904432  0.564695334 #> 3507  585  0.468904432  0.541234111 #> 3508  585  0.489222447  0.529503499 #> 3509  585  0.509540462  0.541234111 #> 3510  585  0.509540462  0.564695334 #> 3511  586  0.529858478  0.576425946 #> 3512  586  0.509540462  0.564695334 #> 3513  586  0.509540462  0.541234111 #> 3514  586  0.529858478  0.529503499 #> 3515  586  0.550176493  0.541234111 #> 3516  586  0.550176493  0.564695334 #> 3517  587  0.570494509  0.576425946 #> 3518  587  0.550176493  0.564695334 #> 3519  587  0.550176493  0.541234111 #> 3520  587  0.570494509  0.529503499 #> 3521  587  0.590812524  0.541234111 #> 3522  587  0.590812524  0.564695334 #> 3523  588  0.611130539  0.576425946 #> 3524  588  0.590812524  0.564695334 #> 3525  588  0.590812524  0.541234111 #> 3526  588  0.611130539  0.529503499 #> 3527  588  0.631448555  0.541234111 #> 3528  588  0.631448555  0.564695334 #> 3529  589  0.651766570  0.576425946 #> 3530  589  0.631448555  0.564695334 #> 3531  589  0.631448555  0.541234111 #> 3532  589  0.651766570  0.529503499 #> 3533  589  0.672084586  0.541234111 #> 3534  589  0.672084586  0.564695334 #> 3535  590  0.692402601  0.576425946 #> 3536  590  0.672084586  0.564695334 #> 3537  590  0.672084586  0.541234111 #> 3538  590  0.692402601  0.529503499 #> 3539  590  0.712720616  0.541234111 #> 3540  590  0.712720616  0.564695334 #> 3541  591  0.733038632  0.576425946 #> 3542  591  0.712720616  0.564695334 #> 3543  591  0.712720616  0.541234111 #> 3544  591  0.733038632  0.529503499 #> 3545  591  0.753356647  0.541234111 #> 3546  591  0.753356647  0.564695334 #> 3547  592  0.773674663  0.576425946 #> 3548  592  0.753356647  0.564695334 #> 3549  592  0.753356647  0.541234111 #> 3550  592  0.773674663  0.529503499 #> 3551  592  0.793992678  0.541234111 #> 3552  592  0.793992678  0.564695334 #> 3553  593  0.814310694  0.576425946 #> 3554  593  0.793992678  0.564695334 #> 3555  593  0.793992678  0.541234111 #> 3556  593  0.814310694  0.529503499 #> 3557  593  0.834628709  0.541234111 #> 3558  593  0.834628709  0.564695334 #> 3559  594  0.854946724  0.576425946 #> 3560  594  0.834628709  0.564695334 #> 3561  594  0.834628709  0.541234111 #> 3562  594  0.854946724  0.529503499 #> 3563  594  0.875264740  0.541234111 #> 3564  594  0.875264740  0.564695334 #> 3565  595  0.895582755  0.576425946 #> 3566  595  0.875264740  0.564695334 #> 3567  595  0.875264740  0.541234111 #> 3568  595  0.895582755  0.529503499 #> 3569  595  0.915900771  0.541234111 #> 3570  595  0.915900771  0.564695334 #> 3571  596  0.936218786  0.576425946 #> 3572  596  0.915900771  0.564695334 #> 3573  596  0.915900771  0.541234111 #> 3574  596  0.936218786  0.529503499 #> 3575  596  0.956536801  0.541234111 #> 3576  596  0.956536801  0.564695334 #> 3577  597  0.976854817  0.576425946 #> 3578  597  0.956536801  0.564695334 #> 3579  597  0.956536801  0.541234111 #> 3580  597  0.976854817  0.529503499 #> 3581  597  0.997172832  0.541234111 #> 3582  597  0.997172832  0.564695334 #> 3583  598  1.017490848  0.576425946 #> 3584  598  0.997172832  0.564695334 #> 3585  598  0.997172832  0.541234111 #> 3586  598  1.017490848  0.529503499 #> 3587  598  1.037808863  0.541234111 #> 3588  598  1.037808863  0.564695334 #> 3589  599  1.058126878  0.576425946 #> 3590  599  1.037808863  0.564695334 #> 3591  599  1.037808863  0.541234111 #> 3592  599  1.058126878  0.529503499 #> 3593  599  1.078444894  0.541234111 #> 3594  599  1.078444894  0.564695334 #> 3595  600  1.098762909  0.576425946 #> 3596  600  1.078444894  0.564695334 #> 3597  600  1.078444894  0.541234111 #> 3598  600  1.098762909  0.529503499 #> 3599  600  1.119080925  0.541234111 #> 3600  600  1.119080925  0.564695334 #> 3601  601 -0.100000000  0.611617781 #> 3602  601 -0.120318015  0.599887169 #> 3603  601 -0.120318015  0.576425946 #> 3604  601 -0.100000000  0.564695334 #> 3605  601 -0.079681985  0.576425946 #> 3606  601 -0.079681985  0.599887169 #> 3607  602 -0.059363969  0.611617781 #> 3608  602 -0.079681985  0.599887169 #> 3609  602 -0.079681985  0.576425946 #> 3610  602 -0.059363969  0.564695334 #> 3611  602 -0.039045954  0.576425946 #> 3612  602 -0.039045954  0.599887169 #> 3613  603 -0.018727938  0.611617781 #> 3614  603 -0.039045954  0.599887169 #> 3615  603 -0.039045954  0.576425946 #> 3616  603 -0.018727938  0.564695334 #> 3617  603  0.001590077  0.576425946 #> 3618  603  0.001590077  0.599887169 #> 3619  604  0.021908092  0.611617781 #> 3620  604  0.001590077  0.599887169 #> 3621  604  0.001590077  0.576425946 #> 3622  604  0.021908092  0.564695334 #> 3623  604  0.042226108  0.576425946 #> 3624  604  0.042226108  0.599887169 #> 3625  605  0.062544123  0.611617781 #> 3626  605  0.042226108  0.599887169 #> 3627  605  0.042226108  0.576425946 #> 3628  605  0.062544123  0.564695334 #> 3629  605  0.082862139  0.576425946 #> 3630  605  0.082862139  0.599887169 #> 3631  606  0.103180154  0.611617781 #> 3632  606  0.082862139  0.599887169 #> 3633  606  0.082862139  0.576425946 #> 3634  606  0.103180154  0.564695334 #> 3635  606  0.123498170  0.576425946 #> 3636  606  0.123498170  0.599887169 #> 3637  607  0.143816185  0.611617781 #> 3638  607  0.123498170  0.599887169 #> 3639  607  0.123498170  0.576425946 #> 3640  607  0.143816185  0.564695334 #> 3641  607  0.164134200  0.576425946 #> 3642  607  0.164134200  0.599887169 #> 3643  608  0.184452216  0.611617781 #> 3644  608  0.164134200  0.599887169 #> 3645  608  0.164134200  0.576425946 #> 3646  608  0.184452216  0.564695334 #> 3647  608  0.204770231  0.576425946 #> 3648  608  0.204770231  0.599887169 #> 3649  609  0.225088247  0.611617781 #> 3650  609  0.204770231  0.599887169 #> 3651  609  0.204770231  0.576425946 #> 3652  609  0.225088247  0.564695334 #> 3653  609  0.245406262  0.576425946 #> 3654  609  0.245406262  0.599887169 #> 3655  610  0.265724277  0.611617781 #> 3656  610  0.245406262  0.599887169 #> 3657  610  0.245406262  0.576425946 #> 3658  610  0.265724277  0.564695334 #> 3659  610  0.286042293  0.576425946 #> 3660  610  0.286042293  0.599887169 #> 3661  611  0.306360308  0.611617781 #> 3662  611  0.286042293  0.599887169 #> 3663  611  0.286042293  0.576425946 #> 3664  611  0.306360308  0.564695334 #> 3665  611  0.326678324  0.576425946 #> 3666  611  0.326678324  0.599887169 #> 3667  612  0.346996339  0.611617781 #> 3668  612  0.326678324  0.599887169 #> 3669  612  0.326678324  0.576425946 #> 3670  612  0.346996339  0.564695334 #> 3671  612  0.367314354  0.576425946 #> 3672  612  0.367314354  0.599887169 #> 3673  613  0.387632370  0.611617781 #> 3674  613  0.367314354  0.599887169 #> 3675  613  0.367314354  0.576425946 #> 3676  613  0.387632370  0.564695334 #> 3677  613  0.407950385  0.576425946 #> 3678  613  0.407950385  0.599887169 #> 3679  614  0.428268401  0.611617781 #> 3680  614  0.407950385  0.599887169 #> 3681  614  0.407950385  0.576425946 #> 3682  614  0.428268401  0.564695334 #> 3683  614  0.448586416  0.576425946 #> 3684  614  0.448586416  0.599887169 #> 3685  615  0.468904432  0.611617781 #> 3686  615  0.448586416  0.599887169 #> 3687  615  0.448586416  0.576425946 #> 3688  615  0.468904432  0.564695334 #> 3689  615  0.489222447  0.576425946 #> 3690  615  0.489222447  0.599887169 #> 3691  616  0.509540462  0.611617781 #> 3692  616  0.489222447  0.599887169 #> 3693  616  0.489222447  0.576425946 #> 3694  616  0.509540462  0.564695334 #> 3695  616  0.529858478  0.576425946 #> 3696  616  0.529858478  0.599887169 #> 3697  617  0.550176493  0.611617781 #> 3698  617  0.529858478  0.599887169 #> 3699  617  0.529858478  0.576425946 #> 3700  617  0.550176493  0.564695334 #> 3701  617  0.570494509  0.576425946 #> 3702  617  0.570494509  0.599887169 #> 3703  618  0.590812524  0.611617781 #> 3704  618  0.570494509  0.599887169 #> 3705  618  0.570494509  0.576425946 #> 3706  618  0.590812524  0.564695334 #> 3707  618  0.611130539  0.576425946 #> 3708  618  0.611130539  0.599887169 #> 3709  619  0.631448555  0.611617781 #> 3710  619  0.611130539  0.599887169 #> 3711  619  0.611130539  0.576425946 #> 3712  619  0.631448555  0.564695334 #> 3713  619  0.651766570  0.576425946 #> 3714  619  0.651766570  0.599887169 #> 3715  620  0.672084586  0.611617781 #> 3716  620  0.651766570  0.599887169 #> 3717  620  0.651766570  0.576425946 #> 3718  620  0.672084586  0.564695334 #> 3719  620  0.692402601  0.576425946 #> 3720  620  0.692402601  0.599887169 #> 3721  621  0.712720616  0.611617781 #> 3722  621  0.692402601  0.599887169 #> 3723  621  0.692402601  0.576425946 #> 3724  621  0.712720616  0.564695334 #> 3725  621  0.733038632  0.576425946 #> 3726  621  0.733038632  0.599887169 #> 3727  622  0.753356647  0.611617781 #> 3728  622  0.733038632  0.599887169 #> 3729  622  0.733038632  0.576425946 #> 3730  622  0.753356647  0.564695334 #> 3731  622  0.773674663  0.576425946 #> 3732  622  0.773674663  0.599887169 #> 3733  623  0.793992678  0.611617781 #> 3734  623  0.773674663  0.599887169 #> 3735  623  0.773674663  0.576425946 #> 3736  623  0.793992678  0.564695334 #> 3737  623  0.814310694  0.576425946 #> 3738  623  0.814310694  0.599887169 #> 3739  624  0.834628709  0.611617781 #> 3740  624  0.814310694  0.599887169 #> 3741  624  0.814310694  0.576425946 #> 3742  624  0.834628709  0.564695334 #> 3743  624  0.854946724  0.576425946 #> 3744  624  0.854946724  0.599887169 #> 3745  625  0.875264740  0.611617781 #> 3746  625  0.854946724  0.599887169 #> 3747  625  0.854946724  0.576425946 #> 3748  625  0.875264740  0.564695334 #> 3749  625  0.895582755  0.576425946 #> 3750  625  0.895582755  0.599887169 #> 3751  626  0.915900771  0.611617781 #> 3752  626  0.895582755  0.599887169 #> 3753  626  0.895582755  0.576425946 #> 3754  626  0.915900771  0.564695334 #> 3755  626  0.936218786  0.576425946 #> 3756  626  0.936218786  0.599887169 #> 3757  627  0.956536801  0.611617781 #> 3758  627  0.936218786  0.599887169 #> 3759  627  0.936218786  0.576425946 #> 3760  627  0.956536801  0.564695334 #> 3761  627  0.976854817  0.576425946 #> 3762  627  0.976854817  0.599887169 #> 3763  628  0.997172832  0.611617781 #> 3764  628  0.976854817  0.599887169 #> 3765  628  0.976854817  0.576425946 #> 3766  628  0.997172832  0.564695334 #> 3767  628  1.017490848  0.576425946 #> 3768  628  1.017490848  0.599887169 #> 3769  629  1.037808863  0.611617781 #> 3770  629  1.017490848  0.599887169 #> 3771  629  1.017490848  0.576425946 #> 3772  629  1.037808863  0.564695334 #> 3773  629  1.058126878  0.576425946 #> 3774  629  1.058126878  0.599887169 #> 3775  630  1.078444894  0.611617781 #> 3776  630  1.058126878  0.599887169 #> 3777  630  1.058126878  0.576425946 #> 3778  630  1.078444894  0.564695334 #> 3779  630  1.098762909  0.576425946 #> 3780  630  1.098762909  0.599887169 #> 3781  631 -0.079681985  0.646809616 #> 3782  631 -0.100000000  0.635079004 #> 3783  631 -0.100000000  0.611617781 #> 3784  631 -0.079681985  0.599887169 #> 3785  631 -0.059363969  0.611617781 #> 3786  631 -0.059363969  0.635079004 #> 3787  632 -0.039045954  0.646809616 #> 3788  632 -0.059363969  0.635079004 #> 3789  632 -0.059363969  0.611617781 #> 3790  632 -0.039045954  0.599887169 #> 3791  632 -0.018727938  0.611617781 #> 3792  632 -0.018727938  0.635079004 #> 3793  633  0.001590077  0.646809616 #> 3794  633 -0.018727938  0.635079004 #> 3795  633 -0.018727938  0.611617781 #> 3796  633  0.001590077  0.599887169 #> 3797  633  0.021908092  0.611617781 #> 3798  633  0.021908092  0.635079004 #> 3799  634  0.042226108  0.646809616 #> 3800  634  0.021908092  0.635079004 #> 3801  634  0.021908092  0.611617781 #> 3802  634  0.042226108  0.599887169 #> 3803  634  0.062544123  0.611617781 #> 3804  634  0.062544123  0.635079004 #> 3805  635  0.082862139  0.646809616 #> 3806  635  0.062544123  0.635079004 #> 3807  635  0.062544123  0.611617781 #> 3808  635  0.082862139  0.599887169 #> 3809  635  0.103180154  0.611617781 #> 3810  635  0.103180154  0.635079004 #> 3811  636  0.123498170  0.646809616 #> 3812  636  0.103180154  0.635079004 #> 3813  636  0.103180154  0.611617781 #> 3814  636  0.123498170  0.599887169 #> 3815  636  0.143816185  0.611617781 #> 3816  636  0.143816185  0.635079004 #> 3817  637  0.164134200  0.646809616 #> 3818  637  0.143816185  0.635079004 #> 3819  637  0.143816185  0.611617781 #> 3820  637  0.164134200  0.599887169 #> 3821  637  0.184452216  0.611617781 #> 3822  637  0.184452216  0.635079004 #> 3823  638  0.204770231  0.646809616 #> 3824  638  0.184452216  0.635079004 #> 3825  638  0.184452216  0.611617781 #> 3826  638  0.204770231  0.599887169 #> 3827  638  0.225088247  0.611617781 #> 3828  638  0.225088247  0.635079004 #> 3829  639  0.245406262  0.646809616 #> 3830  639  0.225088247  0.635079004 #> 3831  639  0.225088247  0.611617781 #> 3832  639  0.245406262  0.599887169 #> 3833  639  0.265724277  0.611617781 #> 3834  639  0.265724277  0.635079004 #> 3835  640  0.286042293  0.646809616 #> 3836  640  0.265724277  0.635079004 #> 3837  640  0.265724277  0.611617781 #> 3838  640  0.286042293  0.599887169 #> 3839  640  0.306360308  0.611617781 #> 3840  640  0.306360308  0.635079004 #> 3841  641  0.326678324  0.646809616 #> 3842  641  0.306360308  0.635079004 #> 3843  641  0.306360308  0.611617781 #> 3844  641  0.326678324  0.599887169 #> 3845  641  0.346996339  0.611617781 #> 3846  641  0.346996339  0.635079004 #> 3847  642  0.367314354  0.646809616 #> 3848  642  0.346996339  0.635079004 #> 3849  642  0.346996339  0.611617781 #> 3850  642  0.367314354  0.599887169 #> 3851  642  0.387632370  0.611617781 #> 3852  642  0.387632370  0.635079004 #> 3853  643  0.407950385  0.646809616 #> 3854  643  0.387632370  0.635079004 #> 3855  643  0.387632370  0.611617781 #> 3856  643  0.407950385  0.599887169 #> 3857  643  0.428268401  0.611617781 #> 3858  643  0.428268401  0.635079004 #> 3859  644  0.448586416  0.646809616 #> 3860  644  0.428268401  0.635079004 #> 3861  644  0.428268401  0.611617781 #> 3862  644  0.448586416  0.599887169 #> 3863  644  0.468904432  0.611617781 #> 3864  644  0.468904432  0.635079004 #> 3865  645  0.489222447  0.646809616 #> 3866  645  0.468904432  0.635079004 #> 3867  645  0.468904432  0.611617781 #> 3868  645  0.489222447  0.599887169 #> 3869  645  0.509540462  0.611617781 #> 3870  645  0.509540462  0.635079004 #> 3871  646  0.529858478  0.646809616 #> 3872  646  0.509540462  0.635079004 #> 3873  646  0.509540462  0.611617781 #> 3874  646  0.529858478  0.599887169 #> 3875  646  0.550176493  0.611617781 #> 3876  646  0.550176493  0.635079004 #> 3877  647  0.570494509  0.646809616 #> 3878  647  0.550176493  0.635079004 #> 3879  647  0.550176493  0.611617781 #> 3880  647  0.570494509  0.599887169 #> 3881  647  0.590812524  0.611617781 #> 3882  647  0.590812524  0.635079004 #> 3883  648  0.611130539  0.646809616 #> 3884  648  0.590812524  0.635079004 #> 3885  648  0.590812524  0.611617781 #> 3886  648  0.611130539  0.599887169 #> 3887  648  0.631448555  0.611617781 #> 3888  648  0.631448555  0.635079004 #> 3889  649  0.651766570  0.646809616 #> 3890  649  0.631448555  0.635079004 #> 3891  649  0.631448555  0.611617781 #> 3892  649  0.651766570  0.599887169 #> 3893  649  0.672084586  0.611617781 #> 3894  649  0.672084586  0.635079004 #> 3895  650  0.692402601  0.646809616 #> 3896  650  0.672084586  0.635079004 #> 3897  650  0.672084586  0.611617781 #> 3898  650  0.692402601  0.599887169 #> 3899  650  0.712720616  0.611617781 #> 3900  650  0.712720616  0.635079004 #> 3901  651  0.733038632  0.646809616 #> 3902  651  0.712720616  0.635079004 #> 3903  651  0.712720616  0.611617781 #> 3904  651  0.733038632  0.599887169 #> 3905  651  0.753356647  0.611617781 #> 3906  651  0.753356647  0.635079004 #> 3907  652  0.773674663  0.646809616 #> 3908  652  0.753356647  0.635079004 #> 3909  652  0.753356647  0.611617781 #> 3910  652  0.773674663  0.599887169 #> 3911  652  0.793992678  0.611617781 #> 3912  652  0.793992678  0.635079004 #> 3913  653  0.814310694  0.646809616 #> 3914  653  0.793992678  0.635079004 #> 3915  653  0.793992678  0.611617781 #> 3916  653  0.814310694  0.599887169 #> 3917  653  0.834628709  0.611617781 #> 3918  653  0.834628709  0.635079004 #> 3919  654  0.854946724  0.646809616 #> 3920  654  0.834628709  0.635079004 #> 3921  654  0.834628709  0.611617781 #> 3922  654  0.854946724  0.599887169 #> 3923  654  0.875264740  0.611617781 #> 3924  654  0.875264740  0.635079004 #> 3925  655  0.895582755  0.646809616 #> 3926  655  0.875264740  0.635079004 #> 3927  655  0.875264740  0.611617781 #> 3928  655  0.895582755  0.599887169 #> 3929  655  0.915900771  0.611617781 #> 3930  655  0.915900771  0.635079004 #> 3931  656  0.936218786  0.646809616 #> 3932  656  0.915900771  0.635079004 #> 3933  656  0.915900771  0.611617781 #> 3934  656  0.936218786  0.599887169 #> 3935  656  0.956536801  0.611617781 #> 3936  656  0.956536801  0.635079004 #> 3937  657  0.976854817  0.646809616 #> 3938  657  0.956536801  0.635079004 #> 3939  657  0.956536801  0.611617781 #> 3940  657  0.976854817  0.599887169 #> 3941  657  0.997172832  0.611617781 #> 3942  657  0.997172832  0.635079004 #> 3943  658  1.017490848  0.646809616 #> 3944  658  0.997172832  0.635079004 #> 3945  658  0.997172832  0.611617781 #> 3946  658  1.017490848  0.599887169 #> 3947  658  1.037808863  0.611617781 #> 3948  658  1.037808863  0.635079004 #> 3949  659  1.058126878  0.646809616 #> 3950  659  1.037808863  0.635079004 #> 3951  659  1.037808863  0.611617781 #> 3952  659  1.058126878  0.599887169 #> 3953  659  1.078444894  0.611617781 #> 3954  659  1.078444894  0.635079004 #> 3955  660  1.098762909  0.646809616 #> 3956  660  1.078444894  0.635079004 #> 3957  660  1.078444894  0.611617781 #> 3958  660  1.098762909  0.599887169 #> 3959  660  1.119080925  0.611617781 #> 3960  660  1.119080925  0.635079004 #> 3961  661 -0.100000000  0.682001451 #> 3962  661 -0.120318015  0.670270839 #> 3963  661 -0.120318015  0.646809616 #> 3964  661 -0.100000000  0.635079004 #> 3965  661 -0.079681985  0.646809616 #> 3966  661 -0.079681985  0.670270839 #> 3967  662 -0.059363969  0.682001451 #> 3968  662 -0.079681985  0.670270839 #> 3969  662 -0.079681985  0.646809616 #> 3970  662 -0.059363969  0.635079004 #> 3971  662 -0.039045954  0.646809616 #> 3972  662 -0.039045954  0.670270839 #> 3973  663 -0.018727938  0.682001451 #> 3974  663 -0.039045954  0.670270839 #> 3975  663 -0.039045954  0.646809616 #> 3976  663 -0.018727938  0.635079004 #> 3977  663  0.001590077  0.646809616 #> 3978  663  0.001590077  0.670270839 #> 3979  664  0.021908092  0.682001451 #> 3980  664  0.001590077  0.670270839 #> 3981  664  0.001590077  0.646809616 #> 3982  664  0.021908092  0.635079004 #> 3983  664  0.042226108  0.646809616 #> 3984  664  0.042226108  0.670270839 #> 3985  665  0.062544123  0.682001451 #> 3986  665  0.042226108  0.670270839 #> 3987  665  0.042226108  0.646809616 #> 3988  665  0.062544123  0.635079004 #> 3989  665  0.082862139  0.646809616 #> 3990  665  0.082862139  0.670270839 #> 3991  666  0.103180154  0.682001451 #> 3992  666  0.082862139  0.670270839 #> 3993  666  0.082862139  0.646809616 #> 3994  666  0.103180154  0.635079004 #> 3995  666  0.123498170  0.646809616 #> 3996  666  0.123498170  0.670270839 #> 3997  667  0.143816185  0.682001451 #> 3998  667  0.123498170  0.670270839 #> 3999  667  0.123498170  0.646809616 #> 4000  667  0.143816185  0.635079004 #> 4001  667  0.164134200  0.646809616 #> 4002  667  0.164134200  0.670270839 #> 4003  668  0.184452216  0.682001451 #> 4004  668  0.164134200  0.670270839 #> 4005  668  0.164134200  0.646809616 #> 4006  668  0.184452216  0.635079004 #> 4007  668  0.204770231  0.646809616 #> 4008  668  0.204770231  0.670270839 #> 4009  669  0.225088247  0.682001451 #> 4010  669  0.204770231  0.670270839 #> 4011  669  0.204770231  0.646809616 #> 4012  669  0.225088247  0.635079004 #> 4013  669  0.245406262  0.646809616 #> 4014  669  0.245406262  0.670270839 #> 4015  670  0.265724277  0.682001451 #> 4016  670  0.245406262  0.670270839 #> 4017  670  0.245406262  0.646809616 #> 4018  670  0.265724277  0.635079004 #> 4019  670  0.286042293  0.646809616 #> 4020  670  0.286042293  0.670270839 #> 4021  671  0.306360308  0.682001451 #> 4022  671  0.286042293  0.670270839 #> 4023  671  0.286042293  0.646809616 #> 4024  671  0.306360308  0.635079004 #> 4025  671  0.326678324  0.646809616 #> 4026  671  0.326678324  0.670270839 #> 4027  672  0.346996339  0.682001451 #> 4028  672  0.326678324  0.670270839 #> 4029  672  0.326678324  0.646809616 #> 4030  672  0.346996339  0.635079004 #> 4031  672  0.367314354  0.646809616 #> 4032  672  0.367314354  0.670270839 #> 4033  673  0.387632370  0.682001451 #> 4034  673  0.367314354  0.670270839 #> 4035  673  0.367314354  0.646809616 #> 4036  673  0.387632370  0.635079004 #> 4037  673  0.407950385  0.646809616 #> 4038  673  0.407950385  0.670270839 #> 4039  674  0.428268401  0.682001451 #> 4040  674  0.407950385  0.670270839 #> 4041  674  0.407950385  0.646809616 #> 4042  674  0.428268401  0.635079004 #> 4043  674  0.448586416  0.646809616 #> 4044  674  0.448586416  0.670270839 #> 4045  675  0.468904432  0.682001451 #> 4046  675  0.448586416  0.670270839 #> 4047  675  0.448586416  0.646809616 #> 4048  675  0.468904432  0.635079004 #> 4049  675  0.489222447  0.646809616 #> 4050  675  0.489222447  0.670270839 #> 4051  676  0.509540462  0.682001451 #> 4052  676  0.489222447  0.670270839 #> 4053  676  0.489222447  0.646809616 #> 4054  676  0.509540462  0.635079004 #> 4055  676  0.529858478  0.646809616 #> 4056  676  0.529858478  0.670270839 #> 4057  677  0.550176493  0.682001451 #> 4058  677  0.529858478  0.670270839 #> 4059  677  0.529858478  0.646809616 #> 4060  677  0.550176493  0.635079004 #> 4061  677  0.570494509  0.646809616 #> 4062  677  0.570494509  0.670270839 #> 4063  678  0.590812524  0.682001451 #> 4064  678  0.570494509  0.670270839 #> 4065  678  0.570494509  0.646809616 #> 4066  678  0.590812524  0.635079004 #> 4067  678  0.611130539  0.646809616 #> 4068  678  0.611130539  0.670270839 #> 4069  679  0.631448555  0.682001451 #> 4070  679  0.611130539  0.670270839 #> 4071  679  0.611130539  0.646809616 #> 4072  679  0.631448555  0.635079004 #> 4073  679  0.651766570  0.646809616 #> 4074  679  0.651766570  0.670270839 #> 4075  680  0.672084586  0.682001451 #> 4076  680  0.651766570  0.670270839 #> 4077  680  0.651766570  0.646809616 #> 4078  680  0.672084586  0.635079004 #> 4079  680  0.692402601  0.646809616 #> 4080  680  0.692402601  0.670270839 #> 4081  681  0.712720616  0.682001451 #> 4082  681  0.692402601  0.670270839 #> 4083  681  0.692402601  0.646809616 #> 4084  681  0.712720616  0.635079004 #> 4085  681  0.733038632  0.646809616 #> 4086  681  0.733038632  0.670270839 #> 4087  682  0.753356647  0.682001451 #> 4088  682  0.733038632  0.670270839 #> 4089  682  0.733038632  0.646809616 #> 4090  682  0.753356647  0.635079004 #> 4091  682  0.773674663  0.646809616 #> 4092  682  0.773674663  0.670270839 #> 4093  683  0.793992678  0.682001451 #> 4094  683  0.773674663  0.670270839 #> 4095  683  0.773674663  0.646809616 #> 4096  683  0.793992678  0.635079004 #> 4097  683  0.814310694  0.646809616 #> 4098  683  0.814310694  0.670270839 #> 4099  684  0.834628709  0.682001451 #> 4100  684  0.814310694  0.670270839 #> 4101  684  0.814310694  0.646809616 #> 4102  684  0.834628709  0.635079004 #> 4103  684  0.854946724  0.646809616 #> 4104  684  0.854946724  0.670270839 #> 4105  685  0.875264740  0.682001451 #> 4106  685  0.854946724  0.670270839 #> 4107  685  0.854946724  0.646809616 #> 4108  685  0.875264740  0.635079004 #> 4109  685  0.895582755  0.646809616 #> 4110  685  0.895582755  0.670270839 #> 4111  686  0.915900771  0.682001451 #> 4112  686  0.895582755  0.670270839 #> 4113  686  0.895582755  0.646809616 #> 4114  686  0.915900771  0.635079004 #> 4115  686  0.936218786  0.646809616 #> 4116  686  0.936218786  0.670270839 #> 4117  687  0.956536801  0.682001451 #> 4118  687  0.936218786  0.670270839 #> 4119  687  0.936218786  0.646809616 #> 4120  687  0.956536801  0.635079004 #> 4121  687  0.976854817  0.646809616 #> 4122  687  0.976854817  0.670270839 #> 4123  688  0.997172832  0.682001451 #> 4124  688  0.976854817  0.670270839 #> 4125  688  0.976854817  0.646809616 #> 4126  688  0.997172832  0.635079004 #> 4127  688  1.017490848  0.646809616 #> 4128  688  1.017490848  0.670270839 #> 4129  689  1.037808863  0.682001451 #> 4130  689  1.017490848  0.670270839 #> 4131  689  1.017490848  0.646809616 #> 4132  689  1.037808863  0.635079004 #> 4133  689  1.058126878  0.646809616 #> 4134  689  1.058126878  0.670270839 #> 4135  690  1.078444894  0.682001451 #> 4136  690  1.058126878  0.670270839 #> 4137  690  1.058126878  0.646809616 #> 4138  690  1.078444894  0.635079004 #> 4139  690  1.098762909  0.646809616 #> 4140  690  1.098762909  0.670270839 #> 4141  691 -0.079681985  0.717193286 #> 4142  691 -0.100000000  0.705462674 #> 4143  691 -0.100000000  0.682001451 #> 4144  691 -0.079681985  0.670270839 #> 4145  691 -0.059363969  0.682001451 #> 4146  691 -0.059363969  0.705462674 #> 4147  692 -0.039045954  0.717193286 #> 4148  692 -0.059363969  0.705462674 #> 4149  692 -0.059363969  0.682001451 #> 4150  692 -0.039045954  0.670270839 #> 4151  692 -0.018727938  0.682001451 #> 4152  692 -0.018727938  0.705462674 #> 4153  693  0.001590077  0.717193286 #> 4154  693 -0.018727938  0.705462674 #> 4155  693 -0.018727938  0.682001451 #> 4156  693  0.001590077  0.670270839 #> 4157  693  0.021908092  0.682001451 #> 4158  693  0.021908092  0.705462674 #> 4159  694  0.042226108  0.717193286 #> 4160  694  0.021908092  0.705462674 #> 4161  694  0.021908092  0.682001451 #> 4162  694  0.042226108  0.670270839 #> 4163  694  0.062544123  0.682001451 #> 4164  694  0.062544123  0.705462674 #> 4165  695  0.082862139  0.717193286 #> 4166  695  0.062544123  0.705462674 #> 4167  695  0.062544123  0.682001451 #> 4168  695  0.082862139  0.670270839 #> 4169  695  0.103180154  0.682001451 #> 4170  695  0.103180154  0.705462674 #> 4171  696  0.123498170  0.717193286 #> 4172  696  0.103180154  0.705462674 #> 4173  696  0.103180154  0.682001451 #> 4174  696  0.123498170  0.670270839 #> 4175  696  0.143816185  0.682001451 #> 4176  696  0.143816185  0.705462674 #> 4177  697  0.164134200  0.717193286 #> 4178  697  0.143816185  0.705462674 #> 4179  697  0.143816185  0.682001451 #> 4180  697  0.164134200  0.670270839 #> 4181  697  0.184452216  0.682001451 #> 4182  697  0.184452216  0.705462674 #> 4183  698  0.204770231  0.717193286 #> 4184  698  0.184452216  0.705462674 #> 4185  698  0.184452216  0.682001451 #> 4186  698  0.204770231  0.670270839 #> 4187  698  0.225088247  0.682001451 #> 4188  698  0.225088247  0.705462674 #> 4189  699  0.245406262  0.717193286 #> 4190  699  0.225088247  0.705462674 #> 4191  699  0.225088247  0.682001451 #> 4192  699  0.245406262  0.670270839 #> 4193  699  0.265724277  0.682001451 #> 4194  699  0.265724277  0.705462674 #> 4195  700  0.286042293  0.717193286 #> 4196  700  0.265724277  0.705462674 #> 4197  700  0.265724277  0.682001451 #> 4198  700  0.286042293  0.670270839 #> 4199  700  0.306360308  0.682001451 #> 4200  700  0.306360308  0.705462674 #> 4201  701  0.326678324  0.717193286 #> 4202  701  0.306360308  0.705462674 #> 4203  701  0.306360308  0.682001451 #> 4204  701  0.326678324  0.670270839 #> 4205  701  0.346996339  0.682001451 #> 4206  701  0.346996339  0.705462674 #> 4207  702  0.367314354  0.717193286 #> 4208  702  0.346996339  0.705462674 #> 4209  702  0.346996339  0.682001451 #> 4210  702  0.367314354  0.670270839 #> 4211  702  0.387632370  0.682001451 #> 4212  702  0.387632370  0.705462674 #> 4213  703  0.407950385  0.717193286 #> 4214  703  0.387632370  0.705462674 #> 4215  703  0.387632370  0.682001451 #> 4216  703  0.407950385  0.670270839 #> 4217  703  0.428268401  0.682001451 #> 4218  703  0.428268401  0.705462674 #> 4219  704  0.448586416  0.717193286 #> 4220  704  0.428268401  0.705462674 #> 4221  704  0.428268401  0.682001451 #> 4222  704  0.448586416  0.670270839 #> 4223  704  0.468904432  0.682001451 #> 4224  704  0.468904432  0.705462674 #> 4225  705  0.489222447  0.717193286 #> 4226  705  0.468904432  0.705462674 #> 4227  705  0.468904432  0.682001451 #> 4228  705  0.489222447  0.670270839 #> 4229  705  0.509540462  0.682001451 #> 4230  705  0.509540462  0.705462674 #> 4231  706  0.529858478  0.717193286 #> 4232  706  0.509540462  0.705462674 #> 4233  706  0.509540462  0.682001451 #> 4234  706  0.529858478  0.670270839 #> 4235  706  0.550176493  0.682001451 #> 4236  706  0.550176493  0.705462674 #> 4237  707  0.570494509  0.717193286 #> 4238  707  0.550176493  0.705462674 #> 4239  707  0.550176493  0.682001451 #> 4240  707  0.570494509  0.670270839 #> 4241  707  0.590812524  0.682001451 #> 4242  707  0.590812524  0.705462674 #> 4243  708  0.611130539  0.717193286 #> 4244  708  0.590812524  0.705462674 #> 4245  708  0.590812524  0.682001451 #> 4246  708  0.611130539  0.670270839 #> 4247  708  0.631448555  0.682001451 #> 4248  708  0.631448555  0.705462674 #> 4249  709  0.651766570  0.717193286 #> 4250  709  0.631448555  0.705462674 #> 4251  709  0.631448555  0.682001451 #> 4252  709  0.651766570  0.670270839 #> 4253  709  0.672084586  0.682001451 #> 4254  709  0.672084586  0.705462674 #> 4255  710  0.692402601  0.717193286 #> 4256  710  0.672084586  0.705462674 #> 4257  710  0.672084586  0.682001451 #> 4258  710  0.692402601  0.670270839 #> 4259  710  0.712720616  0.682001451 #> 4260  710  0.712720616  0.705462674 #> 4261  711  0.733038632  0.717193286 #> 4262  711  0.712720616  0.705462674 #> 4263  711  0.712720616  0.682001451 #> 4264  711  0.733038632  0.670270839 #> 4265  711  0.753356647  0.682001451 #> 4266  711  0.753356647  0.705462674 #> 4267  712  0.773674663  0.717193286 #> 4268  712  0.753356647  0.705462674 #> 4269  712  0.753356647  0.682001451 #> 4270  712  0.773674663  0.670270839 #> 4271  712  0.793992678  0.682001451 #> 4272  712  0.793992678  0.705462674 #> 4273  713  0.814310694  0.717193286 #> 4274  713  0.793992678  0.705462674 #> 4275  713  0.793992678  0.682001451 #> 4276  713  0.814310694  0.670270839 #> 4277  713  0.834628709  0.682001451 #> 4278  713  0.834628709  0.705462674 #> 4279  714  0.854946724  0.717193286 #> 4280  714  0.834628709  0.705462674 #> 4281  714  0.834628709  0.682001451 #> 4282  714  0.854946724  0.670270839 #> 4283  714  0.875264740  0.682001451 #> 4284  714  0.875264740  0.705462674 #> 4285  715  0.895582755  0.717193286 #> 4286  715  0.875264740  0.705462674 #> 4287  715  0.875264740  0.682001451 #> 4288  715  0.895582755  0.670270839 #> 4289  715  0.915900771  0.682001451 #> 4290  715  0.915900771  0.705462674 #> 4291  716  0.936218786  0.717193286 #> 4292  716  0.915900771  0.705462674 #> 4293  716  0.915900771  0.682001451 #> 4294  716  0.936218786  0.670270839 #> 4295  716  0.956536801  0.682001451 #> 4296  716  0.956536801  0.705462674 #> 4297  717  0.976854817  0.717193286 #> 4298  717  0.956536801  0.705462674 #> 4299  717  0.956536801  0.682001451 #> 4300  717  0.976854817  0.670270839 #> 4301  717  0.997172832  0.682001451 #> 4302  717  0.997172832  0.705462674 #> 4303  718  1.017490848  0.717193286 #> 4304  718  0.997172832  0.705462674 #> 4305  718  0.997172832  0.682001451 #> 4306  718  1.017490848  0.670270839 #> 4307  718  1.037808863  0.682001451 #> 4308  718  1.037808863  0.705462674 #> 4309  719  1.058126878  0.717193286 #> 4310  719  1.037808863  0.705462674 #> 4311  719  1.037808863  0.682001451 #> 4312  719  1.058126878  0.670270839 #> 4313  719  1.078444894  0.682001451 #> 4314  719  1.078444894  0.705462674 #> 4315  720  1.098762909  0.717193286 #> 4316  720  1.078444894  0.705462674 #> 4317  720  1.078444894  0.682001451 #> 4318  720  1.098762909  0.670270839 #> 4319  720  1.119080925  0.682001451 #> 4320  720  1.119080925  0.705462674 #> 4321  721 -0.100000000  0.752385121 #> 4322  721 -0.120318015  0.740654509 #> 4323  721 -0.120318015  0.717193286 #> 4324  721 -0.100000000  0.705462674 #> 4325  721 -0.079681985  0.717193286 #> 4326  721 -0.079681985  0.740654509 #> 4327  722 -0.059363969  0.752385121 #> 4328  722 -0.079681985  0.740654509 #> 4329  722 -0.079681985  0.717193286 #> 4330  722 -0.059363969  0.705462674 #> 4331  722 -0.039045954  0.717193286 #> 4332  722 -0.039045954  0.740654509 #> 4333  723 -0.018727938  0.752385121 #> 4334  723 -0.039045954  0.740654509 #> 4335  723 -0.039045954  0.717193286 #> 4336  723 -0.018727938  0.705462674 #> 4337  723  0.001590077  0.717193286 #> 4338  723  0.001590077  0.740654509 #> 4339  724  0.021908092  0.752385121 #> 4340  724  0.001590077  0.740654509 #> 4341  724  0.001590077  0.717193286 #> 4342  724  0.021908092  0.705462674 #> 4343  724  0.042226108  0.717193286 #> 4344  724  0.042226108  0.740654509 #> 4345  725  0.062544123  0.752385121 #> 4346  725  0.042226108  0.740654509 #> 4347  725  0.042226108  0.717193286 #> 4348  725  0.062544123  0.705462674 #> 4349  725  0.082862139  0.717193286 #> 4350  725  0.082862139  0.740654509 #> 4351  726  0.103180154  0.752385121 #> 4352  726  0.082862139  0.740654509 #> 4353  726  0.082862139  0.717193286 #> 4354  726  0.103180154  0.705462674 #> 4355  726  0.123498170  0.717193286 #> 4356  726  0.123498170  0.740654509 #> 4357  727  0.143816185  0.752385121 #> 4358  727  0.123498170  0.740654509 #> 4359  727  0.123498170  0.717193286 #> 4360  727  0.143816185  0.705462674 #> 4361  727  0.164134200  0.717193286 #> 4362  727  0.164134200  0.740654509 #> 4363  728  0.184452216  0.752385121 #> 4364  728  0.164134200  0.740654509 #> 4365  728  0.164134200  0.717193286 #> 4366  728  0.184452216  0.705462674 #> 4367  728  0.204770231  0.717193286 #> 4368  728  0.204770231  0.740654509 #> 4369  729  0.225088247  0.752385121 #> 4370  729  0.204770231  0.740654509 #> 4371  729  0.204770231  0.717193286 #> 4372  729  0.225088247  0.705462674 #> 4373  729  0.245406262  0.717193286 #> 4374  729  0.245406262  0.740654509 #> 4375  730  0.265724277  0.752385121 #> 4376  730  0.245406262  0.740654509 #> 4377  730  0.245406262  0.717193286 #> 4378  730  0.265724277  0.705462674 #> 4379  730  0.286042293  0.717193286 #> 4380  730  0.286042293  0.740654509 #> 4381  731  0.306360308  0.752385121 #> 4382  731  0.286042293  0.740654509 #> 4383  731  0.286042293  0.717193286 #> 4384  731  0.306360308  0.705462674 #> 4385  731  0.326678324  0.717193286 #> 4386  731  0.326678324  0.740654509 #> 4387  732  0.346996339  0.752385121 #> 4388  732  0.326678324  0.740654509 #> 4389  732  0.326678324  0.717193286 #> 4390  732  0.346996339  0.705462674 #> 4391  732  0.367314354  0.717193286 #> 4392  732  0.367314354  0.740654509 #> 4393  733  0.387632370  0.752385121 #> 4394  733  0.367314354  0.740654509 #> 4395  733  0.367314354  0.717193286 #> 4396  733  0.387632370  0.705462674 #> 4397  733  0.407950385  0.717193286 #> 4398  733  0.407950385  0.740654509 #> 4399  734  0.428268401  0.752385121 #> 4400  734  0.407950385  0.740654509 #> 4401  734  0.407950385  0.717193286 #> 4402  734  0.428268401  0.705462674 #> 4403  734  0.448586416  0.717193286 #> 4404  734  0.448586416  0.740654509 #> 4405  735  0.468904432  0.752385121 #> 4406  735  0.448586416  0.740654509 #> 4407  735  0.448586416  0.717193286 #> 4408  735  0.468904432  0.705462674 #> 4409  735  0.489222447  0.717193286 #> 4410  735  0.489222447  0.740654509 #> 4411  736  0.509540462  0.752385121 #> 4412  736  0.489222447  0.740654509 #> 4413  736  0.489222447  0.717193286 #> 4414  736  0.509540462  0.705462674 #> 4415  736  0.529858478  0.717193286 #> 4416  736  0.529858478  0.740654509 #> 4417  737  0.550176493  0.752385121 #> 4418  737  0.529858478  0.740654509 #> 4419  737  0.529858478  0.717193286 #> 4420  737  0.550176493  0.705462674 #> 4421  737  0.570494509  0.717193286 #> 4422  737  0.570494509  0.740654509 #> 4423  738  0.590812524  0.752385121 #> 4424  738  0.570494509  0.740654509 #> 4425  738  0.570494509  0.717193286 #> 4426  738  0.590812524  0.705462674 #> 4427  738  0.611130539  0.717193286 #> 4428  738  0.611130539  0.740654509 #> 4429  739  0.631448555  0.752385121 #> 4430  739  0.611130539  0.740654509 #> 4431  739  0.611130539  0.717193286 #> 4432  739  0.631448555  0.705462674 #> 4433  739  0.651766570  0.717193286 #> 4434  739  0.651766570  0.740654509 #> 4435  740  0.672084586  0.752385121 #> 4436  740  0.651766570  0.740654509 #> 4437  740  0.651766570  0.717193286 #> 4438  740  0.672084586  0.705462674 #> 4439  740  0.692402601  0.717193286 #> 4440  740  0.692402601  0.740654509 #> 4441  741  0.712720616  0.752385121 #> 4442  741  0.692402601  0.740654509 #> 4443  741  0.692402601  0.717193286 #> 4444  741  0.712720616  0.705462674 #> 4445  741  0.733038632  0.717193286 #> 4446  741  0.733038632  0.740654509 #> 4447  742  0.753356647  0.752385121 #> 4448  742  0.733038632  0.740654509 #> 4449  742  0.733038632  0.717193286 #> 4450  742  0.753356647  0.705462674 #> 4451  742  0.773674663  0.717193286 #> 4452  742  0.773674663  0.740654509 #> 4453  743  0.793992678  0.752385121 #> 4454  743  0.773674663  0.740654509 #> 4455  743  0.773674663  0.717193286 #> 4456  743  0.793992678  0.705462674 #> 4457  743  0.814310694  0.717193286 #> 4458  743  0.814310694  0.740654509 #> 4459  744  0.834628709  0.752385121 #> 4460  744  0.814310694  0.740654509 #> 4461  744  0.814310694  0.717193286 #> 4462  744  0.834628709  0.705462674 #> 4463  744  0.854946724  0.717193286 #> 4464  744  0.854946724  0.740654509 #> 4465  745  0.875264740  0.752385121 #> 4466  745  0.854946724  0.740654509 #> 4467  745  0.854946724  0.717193286 #> 4468  745  0.875264740  0.705462674 #> 4469  745  0.895582755  0.717193286 #> 4470  745  0.895582755  0.740654509 #> 4471  746  0.915900771  0.752385121 #> 4472  746  0.895582755  0.740654509 #> 4473  746  0.895582755  0.717193286 #> 4474  746  0.915900771  0.705462674 #> 4475  746  0.936218786  0.717193286 #> 4476  746  0.936218786  0.740654509 #> 4477  747  0.956536801  0.752385121 #> 4478  747  0.936218786  0.740654509 #> 4479  747  0.936218786  0.717193286 #> 4480  747  0.956536801  0.705462674 #> 4481  747  0.976854817  0.717193286 #> 4482  747  0.976854817  0.740654509 #> 4483  748  0.997172832  0.752385121 #> 4484  748  0.976854817  0.740654509 #> 4485  748  0.976854817  0.717193286 #> 4486  748  0.997172832  0.705462674 #> 4487  748  1.017490848  0.717193286 #> 4488  748  1.017490848  0.740654509 #> 4489  749  1.037808863  0.752385121 #> 4490  749  1.017490848  0.740654509 #> 4491  749  1.017490848  0.717193286 #> 4492  749  1.037808863  0.705462674 #> 4493  749  1.058126878  0.717193286 #> 4494  749  1.058126878  0.740654509 #> 4495  750  1.078444894  0.752385121 #> 4496  750  1.058126878  0.740654509 #> 4497  750  1.058126878  0.717193286 #> 4498  750  1.078444894  0.705462674 #> 4499  750  1.098762909  0.717193286 #> 4500  750  1.098762909  0.740654509 #> 4501  751 -0.079681985  0.787576956 #> 4502  751 -0.100000000  0.775846344 #> 4503  751 -0.100000000  0.752385121 #> 4504  751 -0.079681985  0.740654509 #> 4505  751 -0.059363969  0.752385121 #> 4506  751 -0.059363969  0.775846344 #> 4507  752 -0.039045954  0.787576956 #> 4508  752 -0.059363969  0.775846344 #> 4509  752 -0.059363969  0.752385121 #> 4510  752 -0.039045954  0.740654509 #> 4511  752 -0.018727938  0.752385121 #> 4512  752 -0.018727938  0.775846344 #> 4513  753  0.001590077  0.787576956 #> 4514  753 -0.018727938  0.775846344 #> 4515  753 -0.018727938  0.752385121 #> 4516  753  0.001590077  0.740654509 #> 4517  753  0.021908092  0.752385121 #> 4518  753  0.021908092  0.775846344 #> 4519  754  0.042226108  0.787576956 #> 4520  754  0.021908092  0.775846344 #> 4521  754  0.021908092  0.752385121 #> 4522  754  0.042226108  0.740654509 #> 4523  754  0.062544123  0.752385121 #> 4524  754  0.062544123  0.775846344 #> 4525  755  0.082862139  0.787576956 #> 4526  755  0.062544123  0.775846344 #> 4527  755  0.062544123  0.752385121 #> 4528  755  0.082862139  0.740654509 #> 4529  755  0.103180154  0.752385121 #> 4530  755  0.103180154  0.775846344 #> 4531  756  0.123498170  0.787576956 #> 4532  756  0.103180154  0.775846344 #> 4533  756  0.103180154  0.752385121 #> 4534  756  0.123498170  0.740654509 #> 4535  756  0.143816185  0.752385121 #> 4536  756  0.143816185  0.775846344 #> 4537  757  0.164134200  0.787576956 #> 4538  757  0.143816185  0.775846344 #> 4539  757  0.143816185  0.752385121 #> 4540  757  0.164134200  0.740654509 #> 4541  757  0.184452216  0.752385121 #> 4542  757  0.184452216  0.775846344 #> 4543  758  0.204770231  0.787576956 #> 4544  758  0.184452216  0.775846344 #> 4545  758  0.184452216  0.752385121 #> 4546  758  0.204770231  0.740654509 #> 4547  758  0.225088247  0.752385121 #> 4548  758  0.225088247  0.775846344 #> 4549  759  0.245406262  0.787576956 #> 4550  759  0.225088247  0.775846344 #> 4551  759  0.225088247  0.752385121 #> 4552  759  0.245406262  0.740654509 #> 4553  759  0.265724277  0.752385121 #> 4554  759  0.265724277  0.775846344 #> 4555  760  0.286042293  0.787576956 #> 4556  760  0.265724277  0.775846344 #> 4557  760  0.265724277  0.752385121 #> 4558  760  0.286042293  0.740654509 #> 4559  760  0.306360308  0.752385121 #> 4560  760  0.306360308  0.775846344 #> 4561  761  0.326678324  0.787576956 #> 4562  761  0.306360308  0.775846344 #> 4563  761  0.306360308  0.752385121 #> 4564  761  0.326678324  0.740654509 #> 4565  761  0.346996339  0.752385121 #> 4566  761  0.346996339  0.775846344 #> 4567  762  0.367314354  0.787576956 #> 4568  762  0.346996339  0.775846344 #> 4569  762  0.346996339  0.752385121 #> 4570  762  0.367314354  0.740654509 #> 4571  762  0.387632370  0.752385121 #> 4572  762  0.387632370  0.775846344 #> 4573  763  0.407950385  0.787576956 #> 4574  763  0.387632370  0.775846344 #> 4575  763  0.387632370  0.752385121 #> 4576  763  0.407950385  0.740654509 #> 4577  763  0.428268401  0.752385121 #> 4578  763  0.428268401  0.775846344 #> 4579  764  0.448586416  0.787576956 #> 4580  764  0.428268401  0.775846344 #> 4581  764  0.428268401  0.752385121 #> 4582  764  0.448586416  0.740654509 #> 4583  764  0.468904432  0.752385121 #> 4584  764  0.468904432  0.775846344 #> 4585  765  0.489222447  0.787576956 #> 4586  765  0.468904432  0.775846344 #> 4587  765  0.468904432  0.752385121 #> 4588  765  0.489222447  0.740654509 #> 4589  765  0.509540462  0.752385121 #> 4590  765  0.509540462  0.775846344 #> 4591  766  0.529858478  0.787576956 #> 4592  766  0.509540462  0.775846344 #> 4593  766  0.509540462  0.752385121 #> 4594  766  0.529858478  0.740654509 #> 4595  766  0.550176493  0.752385121 #> 4596  766  0.550176493  0.775846344 #> 4597  767  0.570494509  0.787576956 #> 4598  767  0.550176493  0.775846344 #> 4599  767  0.550176493  0.752385121 #> 4600  767  0.570494509  0.740654509 #> 4601  767  0.590812524  0.752385121 #> 4602  767  0.590812524  0.775846344 #> 4603  768  0.611130539  0.787576956 #> 4604  768  0.590812524  0.775846344 #> 4605  768  0.590812524  0.752385121 #> 4606  768  0.611130539  0.740654509 #> 4607  768  0.631448555  0.752385121 #> 4608  768  0.631448555  0.775846344 #> 4609  769  0.651766570  0.787576956 #> 4610  769  0.631448555  0.775846344 #> 4611  769  0.631448555  0.752385121 #> 4612  769  0.651766570  0.740654509 #> 4613  769  0.672084586  0.752385121 #> 4614  769  0.672084586  0.775846344 #> 4615  770  0.692402601  0.787576956 #> 4616  770  0.672084586  0.775846344 #> 4617  770  0.672084586  0.752385121 #> 4618  770  0.692402601  0.740654509 #> 4619  770  0.712720616  0.752385121 #> 4620  770  0.712720616  0.775846344 #> 4621  771  0.733038632  0.787576956 #> 4622  771  0.712720616  0.775846344 #> 4623  771  0.712720616  0.752385121 #> 4624  771  0.733038632  0.740654509 #> 4625  771  0.753356647  0.752385121 #> 4626  771  0.753356647  0.775846344 #> 4627  772  0.773674663  0.787576956 #> 4628  772  0.753356647  0.775846344 #> 4629  772  0.753356647  0.752385121 #> 4630  772  0.773674663  0.740654509 #> 4631  772  0.793992678  0.752385121 #> 4632  772  0.793992678  0.775846344 #> 4633  773  0.814310694  0.787576956 #> 4634  773  0.793992678  0.775846344 #> 4635  773  0.793992678  0.752385121 #> 4636  773  0.814310694  0.740654509 #> 4637  773  0.834628709  0.752385121 #> 4638  773  0.834628709  0.775846344 #> 4639  774  0.854946724  0.787576956 #> 4640  774  0.834628709  0.775846344 #> 4641  774  0.834628709  0.752385121 #> 4642  774  0.854946724  0.740654509 #> 4643  774  0.875264740  0.752385121 #> 4644  774  0.875264740  0.775846344 #> 4645  775  0.895582755  0.787576956 #> 4646  775  0.875264740  0.775846344 #> 4647  775  0.875264740  0.752385121 #> 4648  775  0.895582755  0.740654509 #> 4649  775  0.915900771  0.752385121 #> 4650  775  0.915900771  0.775846344 #> 4651  776  0.936218786  0.787576956 #> 4652  776  0.915900771  0.775846344 #> 4653  776  0.915900771  0.752385121 #> 4654  776  0.936218786  0.740654509 #> 4655  776  0.956536801  0.752385121 #> 4656  776  0.956536801  0.775846344 #> 4657  777  0.976854817  0.787576956 #> 4658  777  0.956536801  0.775846344 #> 4659  777  0.956536801  0.752385121 #> 4660  777  0.976854817  0.740654509 #> 4661  777  0.997172832  0.752385121 #> 4662  777  0.997172832  0.775846344 #> 4663  778  1.017490848  0.787576956 #> 4664  778  0.997172832  0.775846344 #> 4665  778  0.997172832  0.752385121 #> 4666  778  1.017490848  0.740654509 #> 4667  778  1.037808863  0.752385121 #> 4668  778  1.037808863  0.775846344 #> 4669  779  1.058126878  0.787576956 #> 4670  779  1.037808863  0.775846344 #> 4671  779  1.037808863  0.752385121 #> 4672  779  1.058126878  0.740654509 #> 4673  779  1.078444894  0.752385121 #> 4674  779  1.078444894  0.775846344 #> 4675  780  1.098762909  0.787576956 #> 4676  780  1.078444894  0.775846344 #> 4677  780  1.078444894  0.752385121 #> 4678  780  1.098762909  0.740654509 #> 4679  780  1.119080925  0.752385121 #> 4680  780  1.119080925  0.775846344 #> 4681  781 -0.100000000  0.822768791 #> 4682  781 -0.120318015  0.811038179 #> 4683  781 -0.120318015  0.787576956 #> 4684  781 -0.100000000  0.775846344 #> 4685  781 -0.079681985  0.787576956 #> 4686  781 -0.079681985  0.811038179 #> 4687  782 -0.059363969  0.822768791 #> 4688  782 -0.079681985  0.811038179 #> 4689  782 -0.079681985  0.787576956 #> 4690  782 -0.059363969  0.775846344 #> 4691  782 -0.039045954  0.787576956 #> 4692  782 -0.039045954  0.811038179 #> 4693  783 -0.018727938  0.822768791 #> 4694  783 -0.039045954  0.811038179 #> 4695  783 -0.039045954  0.787576956 #> 4696  783 -0.018727938  0.775846344 #> 4697  783  0.001590077  0.787576956 #> 4698  783  0.001590077  0.811038179 #> 4699  784  0.021908092  0.822768791 #> 4700  784  0.001590077  0.811038179 #> 4701  784  0.001590077  0.787576956 #> 4702  784  0.021908092  0.775846344 #> 4703  784  0.042226108  0.787576956 #> 4704  784  0.042226108  0.811038179 #> 4705  785  0.062544123  0.822768791 #> 4706  785  0.042226108  0.811038179 #> 4707  785  0.042226108  0.787576956 #> 4708  785  0.062544123  0.775846344 #> 4709  785  0.082862139  0.787576956 #> 4710  785  0.082862139  0.811038179 #> 4711  786  0.103180154  0.822768791 #> 4712  786  0.082862139  0.811038179 #> 4713  786  0.082862139  0.787576956 #> 4714  786  0.103180154  0.775846344 #> 4715  786  0.123498170  0.787576956 #> 4716  786  0.123498170  0.811038179 #> 4717  787  0.143816185  0.822768791 #> 4718  787  0.123498170  0.811038179 #> 4719  787  0.123498170  0.787576956 #> 4720  787  0.143816185  0.775846344 #> 4721  787  0.164134200  0.787576956 #> 4722  787  0.164134200  0.811038179 #> 4723  788  0.184452216  0.822768791 #> 4724  788  0.164134200  0.811038179 #> 4725  788  0.164134200  0.787576956 #> 4726  788  0.184452216  0.775846344 #> 4727  788  0.204770231  0.787576956 #> 4728  788  0.204770231  0.811038179 #> 4729  789  0.225088247  0.822768791 #> 4730  789  0.204770231  0.811038179 #> 4731  789  0.204770231  0.787576956 #> 4732  789  0.225088247  0.775846344 #> 4733  789  0.245406262  0.787576956 #> 4734  789  0.245406262  0.811038179 #> 4735  790  0.265724277  0.822768791 #> 4736  790  0.245406262  0.811038179 #> 4737  790  0.245406262  0.787576956 #> 4738  790  0.265724277  0.775846344 #> 4739  790  0.286042293  0.787576956 #> 4740  790  0.286042293  0.811038179 #> 4741  791  0.306360308  0.822768791 #> 4742  791  0.286042293  0.811038179 #> 4743  791  0.286042293  0.787576956 #> 4744  791  0.306360308  0.775846344 #> 4745  791  0.326678324  0.787576956 #> 4746  791  0.326678324  0.811038179 #> 4747  792  0.346996339  0.822768791 #> 4748  792  0.326678324  0.811038179 #> 4749  792  0.326678324  0.787576956 #> 4750  792  0.346996339  0.775846344 #> 4751  792  0.367314354  0.787576956 #> 4752  792  0.367314354  0.811038179 #> 4753  793  0.387632370  0.822768791 #> 4754  793  0.367314354  0.811038179 #> 4755  793  0.367314354  0.787576956 #> 4756  793  0.387632370  0.775846344 #> 4757  793  0.407950385  0.787576956 #> 4758  793  0.407950385  0.811038179 #> 4759  794  0.428268401  0.822768791 #> 4760  794  0.407950385  0.811038179 #> 4761  794  0.407950385  0.787576956 #> 4762  794  0.428268401  0.775846344 #> 4763  794  0.448586416  0.787576956 #> 4764  794  0.448586416  0.811038179 #> 4765  795  0.468904432  0.822768791 #> 4766  795  0.448586416  0.811038179 #> 4767  795  0.448586416  0.787576956 #> 4768  795  0.468904432  0.775846344 #> 4769  795  0.489222447  0.787576956 #> 4770  795  0.489222447  0.811038179 #> 4771  796  0.509540462  0.822768791 #> 4772  796  0.489222447  0.811038179 #> 4773  796  0.489222447  0.787576956 #> 4774  796  0.509540462  0.775846344 #> 4775  796  0.529858478  0.787576956 #> 4776  796  0.529858478  0.811038179 #> 4777  797  0.550176493  0.822768791 #> 4778  797  0.529858478  0.811038179 #> 4779  797  0.529858478  0.787576956 #> 4780  797  0.550176493  0.775846344 #> 4781  797  0.570494509  0.787576956 #> 4782  797  0.570494509  0.811038179 #> 4783  798  0.590812524  0.822768791 #> 4784  798  0.570494509  0.811038179 #> 4785  798  0.570494509  0.787576956 #> 4786  798  0.590812524  0.775846344 #> 4787  798  0.611130539  0.787576956 #> 4788  798  0.611130539  0.811038179 #> 4789  799  0.631448555  0.822768791 #> 4790  799  0.611130539  0.811038179 #> 4791  799  0.611130539  0.787576956 #> 4792  799  0.631448555  0.775846344 #> 4793  799  0.651766570  0.787576956 #> 4794  799  0.651766570  0.811038179 #> 4795  800  0.672084586  0.822768791 #> 4796  800  0.651766570  0.811038179 #> 4797  800  0.651766570  0.787576956 #> 4798  800  0.672084586  0.775846344 #> 4799  800  0.692402601  0.787576956 #> 4800  800  0.692402601  0.811038179 #> 4801  801  0.712720616  0.822768791 #> 4802  801  0.692402601  0.811038179 #> 4803  801  0.692402601  0.787576956 #> 4804  801  0.712720616  0.775846344 #> 4805  801  0.733038632  0.787576956 #> 4806  801  0.733038632  0.811038179 #> 4807  802  0.753356647  0.822768791 #> 4808  802  0.733038632  0.811038179 #> 4809  802  0.733038632  0.787576956 #> 4810  802  0.753356647  0.775846344 #> 4811  802  0.773674663  0.787576956 #> 4812  802  0.773674663  0.811038179 #> 4813  803  0.793992678  0.822768791 #> 4814  803  0.773674663  0.811038179 #> 4815  803  0.773674663  0.787576956 #> 4816  803  0.793992678  0.775846344 #> 4817  803  0.814310694  0.787576956 #> 4818  803  0.814310694  0.811038179 #> 4819  804  0.834628709  0.822768791 #> 4820  804  0.814310694  0.811038179 #> 4821  804  0.814310694  0.787576956 #> 4822  804  0.834628709  0.775846344 #> 4823  804  0.854946724  0.787576956 #> 4824  804  0.854946724  0.811038179 #> 4825  805  0.875264740  0.822768791 #> 4826  805  0.854946724  0.811038179 #> 4827  805  0.854946724  0.787576956 #> 4828  805  0.875264740  0.775846344 #> 4829  805  0.895582755  0.787576956 #> 4830  805  0.895582755  0.811038179 #> 4831  806  0.915900771  0.822768791 #> 4832  806  0.895582755  0.811038179 #> 4833  806  0.895582755  0.787576956 #> 4834  806  0.915900771  0.775846344 #> 4835  806  0.936218786  0.787576956 #> 4836  806  0.936218786  0.811038179 #> 4837  807  0.956536801  0.822768791 #> 4838  807  0.936218786  0.811038179 #> 4839  807  0.936218786  0.787576956 #> 4840  807  0.956536801  0.775846344 #> 4841  807  0.976854817  0.787576956 #> 4842  807  0.976854817  0.811038179 #> 4843  808  0.997172832  0.822768791 #> 4844  808  0.976854817  0.811038179 #> 4845  808  0.976854817  0.787576956 #> 4846  808  0.997172832  0.775846344 #> 4847  808  1.017490848  0.787576956 #> 4848  808  1.017490848  0.811038179 #> 4849  809  1.037808863  0.822768791 #> 4850  809  1.017490848  0.811038179 #> 4851  809  1.017490848  0.787576956 #> 4852  809  1.037808863  0.775846344 #> 4853  809  1.058126878  0.787576956 #> 4854  809  1.058126878  0.811038179 #> 4855  810  1.078444894  0.822768791 #> 4856  810  1.058126878  0.811038179 #> 4857  810  1.058126878  0.787576956 #> 4858  810  1.078444894  0.775846344 #> 4859  810  1.098762909  0.787576956 #> 4860  810  1.098762909  0.811038179 #> 4861  811 -0.079681985  0.857960626 #> 4862  811 -0.100000000  0.846230014 #> 4863  811 -0.100000000  0.822768791 #> 4864  811 -0.079681985  0.811038179 #> 4865  811 -0.059363969  0.822768791 #> 4866  811 -0.059363969  0.846230014 #> 4867  812 -0.039045954  0.857960626 #> 4868  812 -0.059363969  0.846230014 #> 4869  812 -0.059363969  0.822768791 #> 4870  812 -0.039045954  0.811038179 #> 4871  812 -0.018727938  0.822768791 #> 4872  812 -0.018727938  0.846230014 #> 4873  813  0.001590077  0.857960626 #> 4874  813 -0.018727938  0.846230014 #> 4875  813 -0.018727938  0.822768791 #> 4876  813  0.001590077  0.811038179 #> 4877  813  0.021908092  0.822768791 #> 4878  813  0.021908092  0.846230014 #> 4879  814  0.042226108  0.857960626 #> 4880  814  0.021908092  0.846230014 #> 4881  814  0.021908092  0.822768791 #> 4882  814  0.042226108  0.811038179 #> 4883  814  0.062544123  0.822768791 #> 4884  814  0.062544123  0.846230014 #> 4885  815  0.082862139  0.857960626 #> 4886  815  0.062544123  0.846230014 #> 4887  815  0.062544123  0.822768791 #> 4888  815  0.082862139  0.811038179 #> 4889  815  0.103180154  0.822768791 #> 4890  815  0.103180154  0.846230014 #> 4891  816  0.123498170  0.857960626 #> 4892  816  0.103180154  0.846230014 #> 4893  816  0.103180154  0.822768791 #> 4894  816  0.123498170  0.811038179 #> 4895  816  0.143816185  0.822768791 #> 4896  816  0.143816185  0.846230014 #> 4897  817  0.164134200  0.857960626 #> 4898  817  0.143816185  0.846230014 #> 4899  817  0.143816185  0.822768791 #> 4900  817  0.164134200  0.811038179 #> 4901  817  0.184452216  0.822768791 #> 4902  817  0.184452216  0.846230014 #> 4903  818  0.204770231  0.857960626 #> 4904  818  0.184452216  0.846230014 #> 4905  818  0.184452216  0.822768791 #> 4906  818  0.204770231  0.811038179 #> 4907  818  0.225088247  0.822768791 #> 4908  818  0.225088247  0.846230014 #> 4909  819  0.245406262  0.857960626 #> 4910  819  0.225088247  0.846230014 #> 4911  819  0.225088247  0.822768791 #> 4912  819  0.245406262  0.811038179 #> 4913  819  0.265724277  0.822768791 #> 4914  819  0.265724277  0.846230014 #> 4915  820  0.286042293  0.857960626 #> 4916  820  0.265724277  0.846230014 #> 4917  820  0.265724277  0.822768791 #> 4918  820  0.286042293  0.811038179 #> 4919  820  0.306360308  0.822768791 #> 4920  820  0.306360308  0.846230014 #> 4921  821  0.326678324  0.857960626 #> 4922  821  0.306360308  0.846230014 #> 4923  821  0.306360308  0.822768791 #> 4924  821  0.326678324  0.811038179 #> 4925  821  0.346996339  0.822768791 #> 4926  821  0.346996339  0.846230014 #> 4927  822  0.367314354  0.857960626 #> 4928  822  0.346996339  0.846230014 #> 4929  822  0.346996339  0.822768791 #> 4930  822  0.367314354  0.811038179 #> 4931  822  0.387632370  0.822768791 #> 4932  822  0.387632370  0.846230014 #> 4933  823  0.407950385  0.857960626 #> 4934  823  0.387632370  0.846230014 #> 4935  823  0.387632370  0.822768791 #> 4936  823  0.407950385  0.811038179 #> 4937  823  0.428268401  0.822768791 #> 4938  823  0.428268401  0.846230014 #> 4939  824  0.448586416  0.857960626 #> 4940  824  0.428268401  0.846230014 #> 4941  824  0.428268401  0.822768791 #> 4942  824  0.448586416  0.811038179 #> 4943  824  0.468904432  0.822768791 #> 4944  824  0.468904432  0.846230014 #> 4945  825  0.489222447  0.857960626 #> 4946  825  0.468904432  0.846230014 #> 4947  825  0.468904432  0.822768791 #> 4948  825  0.489222447  0.811038179 #> 4949  825  0.509540462  0.822768791 #> 4950  825  0.509540462  0.846230014 #> 4951  826  0.529858478  0.857960626 #> 4952  826  0.509540462  0.846230014 #> 4953  826  0.509540462  0.822768791 #> 4954  826  0.529858478  0.811038179 #> 4955  826  0.550176493  0.822768791 #> 4956  826  0.550176493  0.846230014 #> 4957  827  0.570494509  0.857960626 #> 4958  827  0.550176493  0.846230014 #> 4959  827  0.550176493  0.822768791 #> 4960  827  0.570494509  0.811038179 #> 4961  827  0.590812524  0.822768791 #> 4962  827  0.590812524  0.846230014 #> 4963  828  0.611130539  0.857960626 #> 4964  828  0.590812524  0.846230014 #> 4965  828  0.590812524  0.822768791 #> 4966  828  0.611130539  0.811038179 #> 4967  828  0.631448555  0.822768791 #> 4968  828  0.631448555  0.846230014 #> 4969  829  0.651766570  0.857960626 #> 4970  829  0.631448555  0.846230014 #> 4971  829  0.631448555  0.822768791 #> 4972  829  0.651766570  0.811038179 #> 4973  829  0.672084586  0.822768791 #> 4974  829  0.672084586  0.846230014 #> 4975  830  0.692402601  0.857960626 #> 4976  830  0.672084586  0.846230014 #> 4977  830  0.672084586  0.822768791 #> 4978  830  0.692402601  0.811038179 #> 4979  830  0.712720616  0.822768791 #> 4980  830  0.712720616  0.846230014 #> 4981  831  0.733038632  0.857960626 #> 4982  831  0.712720616  0.846230014 #> 4983  831  0.712720616  0.822768791 #> 4984  831  0.733038632  0.811038179 #> 4985  831  0.753356647  0.822768791 #> 4986  831  0.753356647  0.846230014 #> 4987  832  0.773674663  0.857960626 #> 4988  832  0.753356647  0.846230014 #> 4989  832  0.753356647  0.822768791 #> 4990  832  0.773674663  0.811038179 #> 4991  832  0.793992678  0.822768791 #> 4992  832  0.793992678  0.846230014 #> 4993  833  0.814310694  0.857960626 #> 4994  833  0.793992678  0.846230014 #> 4995  833  0.793992678  0.822768791 #> 4996  833  0.814310694  0.811038179 #> 4997  833  0.834628709  0.822768791 #> 4998  833  0.834628709  0.846230014 #> 4999  834  0.854946724  0.857960626 #> 5000  834  0.834628709  0.846230014 #> 5001  834  0.834628709  0.822768791 #> 5002  834  0.854946724  0.811038179 #> 5003  834  0.875264740  0.822768791 #> 5004  834  0.875264740  0.846230014 #> 5005  835  0.895582755  0.857960626 #> 5006  835  0.875264740  0.846230014 #> 5007  835  0.875264740  0.822768791 #> 5008  835  0.895582755  0.811038179 #> 5009  835  0.915900771  0.822768791 #> 5010  835  0.915900771  0.846230014 #> 5011  836  0.936218786  0.857960626 #> 5012  836  0.915900771  0.846230014 #> 5013  836  0.915900771  0.822768791 #> 5014  836  0.936218786  0.811038179 #> 5015  836  0.956536801  0.822768791 #> 5016  836  0.956536801  0.846230014 #> 5017  837  0.976854817  0.857960626 #> 5018  837  0.956536801  0.846230014 #> 5019  837  0.956536801  0.822768791 #> 5020  837  0.976854817  0.811038179 #> 5021  837  0.997172832  0.822768791 #> 5022  837  0.997172832  0.846230014 #> 5023  838  1.017490848  0.857960626 #> 5024  838  0.997172832  0.846230014 #> 5025  838  0.997172832  0.822768791 #> 5026  838  1.017490848  0.811038179 #> 5027  838  1.037808863  0.822768791 #> 5028  838  1.037808863  0.846230014 #> 5029  839  1.058126878  0.857960626 #> 5030  839  1.037808863  0.846230014 #> 5031  839  1.037808863  0.822768791 #> 5032  839  1.058126878  0.811038179 #> 5033  839  1.078444894  0.822768791 #> 5034  839  1.078444894  0.846230014 #> 5035  840  1.098762909  0.857960626 #> 5036  840  1.078444894  0.846230014 #> 5037  840  1.078444894  0.822768791 #> 5038  840  1.098762909  0.811038179 #> 5039  840  1.119080925  0.822768791 #> 5040  840  1.119080925  0.846230014 #> 5041  841 -0.100000000  0.893152461 #> 5042  841 -0.120318015  0.881421849 #> 5043  841 -0.120318015  0.857960626 #> 5044  841 -0.100000000  0.846230014 #> 5045  841 -0.079681985  0.857960626 #> 5046  841 -0.079681985  0.881421849 #> 5047  842 -0.059363969  0.893152461 #> 5048  842 -0.079681985  0.881421849 #> 5049  842 -0.079681985  0.857960626 #> 5050  842 -0.059363969  0.846230014 #> 5051  842 -0.039045954  0.857960626 #> 5052  842 -0.039045954  0.881421849 #> 5053  843 -0.018727938  0.893152461 #> 5054  843 -0.039045954  0.881421849 #> 5055  843 -0.039045954  0.857960626 #> 5056  843 -0.018727938  0.846230014 #> 5057  843  0.001590077  0.857960626 #> 5058  843  0.001590077  0.881421849 #> 5059  844  0.021908092  0.893152461 #> 5060  844  0.001590077  0.881421849 #> 5061  844  0.001590077  0.857960626 #> 5062  844  0.021908092  0.846230014 #> 5063  844  0.042226108  0.857960626 #> 5064  844  0.042226108  0.881421849 #> 5065  845  0.062544123  0.893152461 #> 5066  845  0.042226108  0.881421849 #> 5067  845  0.042226108  0.857960626 #> 5068  845  0.062544123  0.846230014 #> 5069  845  0.082862139  0.857960626 #> 5070  845  0.082862139  0.881421849 #> 5071  846  0.103180154  0.893152461 #> 5072  846  0.082862139  0.881421849 #> 5073  846  0.082862139  0.857960626 #> 5074  846  0.103180154  0.846230014 #> 5075  846  0.123498170  0.857960626 #> 5076  846  0.123498170  0.881421849 #> 5077  847  0.143816185  0.893152461 #> 5078  847  0.123498170  0.881421849 #> 5079  847  0.123498170  0.857960626 #> 5080  847  0.143816185  0.846230014 #> 5081  847  0.164134200  0.857960626 #> 5082  847  0.164134200  0.881421849 #> 5083  848  0.184452216  0.893152461 #> 5084  848  0.164134200  0.881421849 #> 5085  848  0.164134200  0.857960626 #> 5086  848  0.184452216  0.846230014 #> 5087  848  0.204770231  0.857960626 #> 5088  848  0.204770231  0.881421849 #> 5089  849  0.225088247  0.893152461 #> 5090  849  0.204770231  0.881421849 #> 5091  849  0.204770231  0.857960626 #> 5092  849  0.225088247  0.846230014 #> 5093  849  0.245406262  0.857960626 #> 5094  849  0.245406262  0.881421849 #> 5095  850  0.265724277  0.893152461 #> 5096  850  0.245406262  0.881421849 #> 5097  850  0.245406262  0.857960626 #> 5098  850  0.265724277  0.846230014 #> 5099  850  0.286042293  0.857960626 #> 5100  850  0.286042293  0.881421849 #> 5101  851  0.306360308  0.893152461 #> 5102  851  0.286042293  0.881421849 #> 5103  851  0.286042293  0.857960626 #> 5104  851  0.306360308  0.846230014 #> 5105  851  0.326678324  0.857960626 #> 5106  851  0.326678324  0.881421849 #> 5107  852  0.346996339  0.893152461 #> 5108  852  0.326678324  0.881421849 #> 5109  852  0.326678324  0.857960626 #> 5110  852  0.346996339  0.846230014 #> 5111  852  0.367314354  0.857960626 #> 5112  852  0.367314354  0.881421849 #> 5113  853  0.387632370  0.893152461 #> 5114  853  0.367314354  0.881421849 #> 5115  853  0.367314354  0.857960626 #> 5116  853  0.387632370  0.846230014 #> 5117  853  0.407950385  0.857960626 #> 5118  853  0.407950385  0.881421849 #> 5119  854  0.428268401  0.893152461 #> 5120  854  0.407950385  0.881421849 #> 5121  854  0.407950385  0.857960626 #> 5122  854  0.428268401  0.846230014 #> 5123  854  0.448586416  0.857960626 #> 5124  854  0.448586416  0.881421849 #> 5125  855  0.468904432  0.893152461 #> 5126  855  0.448586416  0.881421849 #> 5127  855  0.448586416  0.857960626 #> 5128  855  0.468904432  0.846230014 #> 5129  855  0.489222447  0.857960626 #> 5130  855  0.489222447  0.881421849 #> 5131  856  0.509540462  0.893152461 #> 5132  856  0.489222447  0.881421849 #> 5133  856  0.489222447  0.857960626 #> 5134  856  0.509540462  0.846230014 #> 5135  856  0.529858478  0.857960626 #> 5136  856  0.529858478  0.881421849 #> 5137  857  0.550176493  0.893152461 #> 5138  857  0.529858478  0.881421849 #> 5139  857  0.529858478  0.857960626 #> 5140  857  0.550176493  0.846230014 #> 5141  857  0.570494509  0.857960626 #> 5142  857  0.570494509  0.881421849 #> 5143  858  0.590812524  0.893152461 #> 5144  858  0.570494509  0.881421849 #> 5145  858  0.570494509  0.857960626 #> 5146  858  0.590812524  0.846230014 #> 5147  858  0.611130539  0.857960626 #> 5148  858  0.611130539  0.881421849 #> 5149  859  0.631448555  0.893152461 #> 5150  859  0.611130539  0.881421849 #> 5151  859  0.611130539  0.857960626 #> 5152  859  0.631448555  0.846230014 #> 5153  859  0.651766570  0.857960626 #> 5154  859  0.651766570  0.881421849 #> 5155  860  0.672084586  0.893152461 #> 5156  860  0.651766570  0.881421849 #> 5157  860  0.651766570  0.857960626 #> 5158  860  0.672084586  0.846230014 #> 5159  860  0.692402601  0.857960626 #> 5160  860  0.692402601  0.881421849 #> 5161  861  0.712720616  0.893152461 #> 5162  861  0.692402601  0.881421849 #> 5163  861  0.692402601  0.857960626 #> 5164  861  0.712720616  0.846230014 #> 5165  861  0.733038632  0.857960626 #> 5166  861  0.733038632  0.881421849 #> 5167  862  0.753356647  0.893152461 #> 5168  862  0.733038632  0.881421849 #> 5169  862  0.733038632  0.857960626 #> 5170  862  0.753356647  0.846230014 #> 5171  862  0.773674663  0.857960626 #> 5172  862  0.773674663  0.881421849 #> 5173  863  0.793992678  0.893152461 #> 5174  863  0.773674663  0.881421849 #> 5175  863  0.773674663  0.857960626 #> 5176  863  0.793992678  0.846230014 #> 5177  863  0.814310694  0.857960626 #> 5178  863  0.814310694  0.881421849 #> 5179  864  0.834628709  0.893152461 #> 5180  864  0.814310694  0.881421849 #> 5181  864  0.814310694  0.857960626 #> 5182  864  0.834628709  0.846230014 #> 5183  864  0.854946724  0.857960626 #> 5184  864  0.854946724  0.881421849 #> 5185  865  0.875264740  0.893152461 #> 5186  865  0.854946724  0.881421849 #> 5187  865  0.854946724  0.857960626 #> 5188  865  0.875264740  0.846230014 #> 5189  865  0.895582755  0.857960626 #> 5190  865  0.895582755  0.881421849 #> 5191  866  0.915900771  0.893152461 #> 5192  866  0.895582755  0.881421849 #> 5193  866  0.895582755  0.857960626 #> 5194  866  0.915900771  0.846230014 #> 5195  866  0.936218786  0.857960626 #> 5196  866  0.936218786  0.881421849 #> 5197  867  0.956536801  0.893152461 #> 5198  867  0.936218786  0.881421849 #> 5199  867  0.936218786  0.857960626 #> 5200  867  0.956536801  0.846230014 #> 5201  867  0.976854817  0.857960626 #> 5202  867  0.976854817  0.881421849 #> 5203  868  0.997172832  0.893152461 #> 5204  868  0.976854817  0.881421849 #> 5205  868  0.976854817  0.857960626 #> 5206  868  0.997172832  0.846230014 #> 5207  868  1.017490848  0.857960626 #> 5208  868  1.017490848  0.881421849 #> 5209  869  1.037808863  0.893152461 #> 5210  869  1.017490848  0.881421849 #> 5211  869  1.017490848  0.857960626 #> 5212  869  1.037808863  0.846230014 #> 5213  869  1.058126878  0.857960626 #> 5214  869  1.058126878  0.881421849 #> 5215  870  1.078444894  0.893152461 #> 5216  870  1.058126878  0.881421849 #> 5217  870  1.058126878  0.857960626 #> 5218  870  1.078444894  0.846230014 #> 5219  870  1.098762909  0.857960626 #> 5220  870  1.098762909  0.881421849 #> 5221  871 -0.079681985  0.928344296 #> 5222  871 -0.100000000  0.916613684 #> 5223  871 -0.100000000  0.893152461 #> 5224  871 -0.079681985  0.881421849 #> 5225  871 -0.059363969  0.893152461 #> 5226  871 -0.059363969  0.916613684 #> 5227  872 -0.039045954  0.928344296 #> 5228  872 -0.059363969  0.916613684 #> 5229  872 -0.059363969  0.893152461 #> 5230  872 -0.039045954  0.881421849 #> 5231  872 -0.018727938  0.893152461 #> 5232  872 -0.018727938  0.916613684 #> 5233  873  0.001590077  0.928344296 #> 5234  873 -0.018727938  0.916613684 #> 5235  873 -0.018727938  0.893152461 #> 5236  873  0.001590077  0.881421849 #> 5237  873  0.021908092  0.893152461 #> 5238  873  0.021908092  0.916613684 #> 5239  874  0.042226108  0.928344296 #> 5240  874  0.021908092  0.916613684 #> 5241  874  0.021908092  0.893152461 #> 5242  874  0.042226108  0.881421849 #> 5243  874  0.062544123  0.893152461 #> 5244  874  0.062544123  0.916613684 #> 5245  875  0.082862139  0.928344296 #> 5246  875  0.062544123  0.916613684 #> 5247  875  0.062544123  0.893152461 #> 5248  875  0.082862139  0.881421849 #> 5249  875  0.103180154  0.893152461 #> 5250  875  0.103180154  0.916613684 #> 5251  876  0.123498170  0.928344296 #> 5252  876  0.103180154  0.916613684 #> 5253  876  0.103180154  0.893152461 #> 5254  876  0.123498170  0.881421849 #> 5255  876  0.143816185  0.893152461 #> 5256  876  0.143816185  0.916613684 #> 5257  877  0.164134200  0.928344296 #> 5258  877  0.143816185  0.916613684 #> 5259  877  0.143816185  0.893152461 #> 5260  877  0.164134200  0.881421849 #> 5261  877  0.184452216  0.893152461 #> 5262  877  0.184452216  0.916613684 #> 5263  878  0.204770231  0.928344296 #> 5264  878  0.184452216  0.916613684 #> 5265  878  0.184452216  0.893152461 #> 5266  878  0.204770231  0.881421849 #> 5267  878  0.225088247  0.893152461 #> 5268  878  0.225088247  0.916613684 #> 5269  879  0.245406262  0.928344296 #> 5270  879  0.225088247  0.916613684 #> 5271  879  0.225088247  0.893152461 #> 5272  879  0.245406262  0.881421849 #> 5273  879  0.265724277  0.893152461 #> 5274  879  0.265724277  0.916613684 #> 5275  880  0.286042293  0.928344296 #> 5276  880  0.265724277  0.916613684 #> 5277  880  0.265724277  0.893152461 #> 5278  880  0.286042293  0.881421849 #> 5279  880  0.306360308  0.893152461 #> 5280  880  0.306360308  0.916613684 #> 5281  881  0.326678324  0.928344296 #> 5282  881  0.306360308  0.916613684 #> 5283  881  0.306360308  0.893152461 #> 5284  881  0.326678324  0.881421849 #> 5285  881  0.346996339  0.893152461 #> 5286  881  0.346996339  0.916613684 #> 5287  882  0.367314354  0.928344296 #> 5288  882  0.346996339  0.916613684 #> 5289  882  0.346996339  0.893152461 #> 5290  882  0.367314354  0.881421849 #> 5291  882  0.387632370  0.893152461 #> 5292  882  0.387632370  0.916613684 #> 5293  883  0.407950385  0.928344296 #> 5294  883  0.387632370  0.916613684 #> 5295  883  0.387632370  0.893152461 #> 5296  883  0.407950385  0.881421849 #> 5297  883  0.428268401  0.893152461 #> 5298  883  0.428268401  0.916613684 #> 5299  884  0.448586416  0.928344296 #> 5300  884  0.428268401  0.916613684 #> 5301  884  0.428268401  0.893152461 #> 5302  884  0.448586416  0.881421849 #> 5303  884  0.468904432  0.893152461 #> 5304  884  0.468904432  0.916613684 #> 5305  885  0.489222447  0.928344296 #> 5306  885  0.468904432  0.916613684 #> 5307  885  0.468904432  0.893152461 #> 5308  885  0.489222447  0.881421849 #> 5309  885  0.509540462  0.893152461 #> 5310  885  0.509540462  0.916613684 #> 5311  886  0.529858478  0.928344296 #> 5312  886  0.509540462  0.916613684 #> 5313  886  0.509540462  0.893152461 #> 5314  886  0.529858478  0.881421849 #> 5315  886  0.550176493  0.893152461 #> 5316  886  0.550176493  0.916613684 #> 5317  887  0.570494509  0.928344296 #> 5318  887  0.550176493  0.916613684 #> 5319  887  0.550176493  0.893152461 #> 5320  887  0.570494509  0.881421849 #> 5321  887  0.590812524  0.893152461 #> 5322  887  0.590812524  0.916613684 #> 5323  888  0.611130539  0.928344296 #> 5324  888  0.590812524  0.916613684 #> 5325  888  0.590812524  0.893152461 #> 5326  888  0.611130539  0.881421849 #> 5327  888  0.631448555  0.893152461 #> 5328  888  0.631448555  0.916613684 #> 5329  889  0.651766570  0.928344296 #> 5330  889  0.631448555  0.916613684 #> 5331  889  0.631448555  0.893152461 #> 5332  889  0.651766570  0.881421849 #> 5333  889  0.672084586  0.893152461 #> 5334  889  0.672084586  0.916613684 #> 5335  890  0.692402601  0.928344296 #> 5336  890  0.672084586  0.916613684 #> 5337  890  0.672084586  0.893152461 #> 5338  890  0.692402601  0.881421849 #> 5339  890  0.712720616  0.893152461 #> 5340  890  0.712720616  0.916613684 #> 5341  891  0.733038632  0.928344296 #> 5342  891  0.712720616  0.916613684 #> 5343  891  0.712720616  0.893152461 #> 5344  891  0.733038632  0.881421849 #> 5345  891  0.753356647  0.893152461 #> 5346  891  0.753356647  0.916613684 #> 5347  892  0.773674663  0.928344296 #> 5348  892  0.753356647  0.916613684 #> 5349  892  0.753356647  0.893152461 #> 5350  892  0.773674663  0.881421849 #> 5351  892  0.793992678  0.893152461 #> 5352  892  0.793992678  0.916613684 #> 5353  893  0.814310694  0.928344296 #> 5354  893  0.793992678  0.916613684 #> 5355  893  0.793992678  0.893152461 #> 5356  893  0.814310694  0.881421849 #> 5357  893  0.834628709  0.893152461 #> 5358  893  0.834628709  0.916613684 #> 5359  894  0.854946724  0.928344296 #> 5360  894  0.834628709  0.916613684 #> 5361  894  0.834628709  0.893152461 #> 5362  894  0.854946724  0.881421849 #> 5363  894  0.875264740  0.893152461 #> 5364  894  0.875264740  0.916613684 #> 5365  895  0.895582755  0.928344296 #> 5366  895  0.875264740  0.916613684 #> 5367  895  0.875264740  0.893152461 #> 5368  895  0.895582755  0.881421849 #> 5369  895  0.915900771  0.893152461 #> 5370  895  0.915900771  0.916613684 #> 5371  896  0.936218786  0.928344296 #> 5372  896  0.915900771  0.916613684 #> 5373  896  0.915900771  0.893152461 #> 5374  896  0.936218786  0.881421849 #> 5375  896  0.956536801  0.893152461 #> 5376  896  0.956536801  0.916613684 #> 5377  897  0.976854817  0.928344296 #> 5378  897  0.956536801  0.916613684 #> 5379  897  0.956536801  0.893152461 #> 5380  897  0.976854817  0.881421849 #> 5381  897  0.997172832  0.893152461 #> 5382  897  0.997172832  0.916613684 #> 5383  898  1.017490848  0.928344296 #> 5384  898  0.997172832  0.916613684 #> 5385  898  0.997172832  0.893152461 #> 5386  898  1.017490848  0.881421849 #> 5387  898  1.037808863  0.893152461 #> 5388  898  1.037808863  0.916613684 #> 5389  899  1.058126878  0.928344296 #> 5390  899  1.037808863  0.916613684 #> 5391  899  1.037808863  0.893152461 #> 5392  899  1.058126878  0.881421849 #> 5393  899  1.078444894  0.893152461 #> 5394  899  1.078444894  0.916613684 #> 5395  900  1.098762909  0.928344296 #> 5396  900  1.078444894  0.916613684 #> 5397  900  1.078444894  0.893152461 #> 5398  900  1.098762909  0.881421849 #> 5399  900  1.119080925  0.893152461 #> 5400  900  1.119080925  0.916613684 #> 5401  901 -0.100000000  0.963536131 #> 5402  901 -0.120318015  0.951805519 #> 5403  901 -0.120318015  0.928344296 #> 5404  901 -0.100000000  0.916613684 #> 5405  901 -0.079681985  0.928344296 #> 5406  901 -0.079681985  0.951805519 #> 5407  902 -0.059363969  0.963536131 #> 5408  902 -0.079681985  0.951805519 #> 5409  902 -0.079681985  0.928344296 #> 5410  902 -0.059363969  0.916613684 #> 5411  902 -0.039045954  0.928344296 #> 5412  902 -0.039045954  0.951805519 #> 5413  903 -0.018727938  0.963536131 #> 5414  903 -0.039045954  0.951805519 #> 5415  903 -0.039045954  0.928344296 #> 5416  903 -0.018727938  0.916613684 #> 5417  903  0.001590077  0.928344296 #> 5418  903  0.001590077  0.951805519 #> 5419  904  0.021908092  0.963536131 #> 5420  904  0.001590077  0.951805519 #> 5421  904  0.001590077  0.928344296 #> 5422  904  0.021908092  0.916613684 #> 5423  904  0.042226108  0.928344296 #> 5424  904  0.042226108  0.951805519 #> 5425  905  0.062544123  0.963536131 #> 5426  905  0.042226108  0.951805519 #> 5427  905  0.042226108  0.928344296 #> 5428  905  0.062544123  0.916613684 #> 5429  905  0.082862139  0.928344296 #> 5430  905  0.082862139  0.951805519 #> 5431  906  0.103180154  0.963536131 #> 5432  906  0.082862139  0.951805519 #> 5433  906  0.082862139  0.928344296 #> 5434  906  0.103180154  0.916613684 #> 5435  906  0.123498170  0.928344296 #> 5436  906  0.123498170  0.951805519 #> 5437  907  0.143816185  0.963536131 #> 5438  907  0.123498170  0.951805519 #> 5439  907  0.123498170  0.928344296 #> 5440  907  0.143816185  0.916613684 #> 5441  907  0.164134200  0.928344296 #> 5442  907  0.164134200  0.951805519 #> 5443  908  0.184452216  0.963536131 #> 5444  908  0.164134200  0.951805519 #> 5445  908  0.164134200  0.928344296 #> 5446  908  0.184452216  0.916613684 #> 5447  908  0.204770231  0.928344296 #> 5448  908  0.204770231  0.951805519 #> 5449  909  0.225088247  0.963536131 #> 5450  909  0.204770231  0.951805519 #> 5451  909  0.204770231  0.928344296 #> 5452  909  0.225088247  0.916613684 #> 5453  909  0.245406262  0.928344296 #> 5454  909  0.245406262  0.951805519 #> 5455  910  0.265724277  0.963536131 #> 5456  910  0.245406262  0.951805519 #> 5457  910  0.245406262  0.928344296 #> 5458  910  0.265724277  0.916613684 #> 5459  910  0.286042293  0.928344296 #> 5460  910  0.286042293  0.951805519 #> 5461  911  0.306360308  0.963536131 #> 5462  911  0.286042293  0.951805519 #> 5463  911  0.286042293  0.928344296 #> 5464  911  0.306360308  0.916613684 #> 5465  911  0.326678324  0.928344296 #> 5466  911  0.326678324  0.951805519 #> 5467  912  0.346996339  0.963536131 #> 5468  912  0.326678324  0.951805519 #> 5469  912  0.326678324  0.928344296 #> 5470  912  0.346996339  0.916613684 #> 5471  912  0.367314354  0.928344296 #> 5472  912  0.367314354  0.951805519 #> 5473  913  0.387632370  0.963536131 #> 5474  913  0.367314354  0.951805519 #> 5475  913  0.367314354  0.928344296 #> 5476  913  0.387632370  0.916613684 #> 5477  913  0.407950385  0.928344296 #> 5478  913  0.407950385  0.951805519 #> 5479  914  0.428268401  0.963536131 #> 5480  914  0.407950385  0.951805519 #> 5481  914  0.407950385  0.928344296 #> 5482  914  0.428268401  0.916613684 #> 5483  914  0.448586416  0.928344296 #> 5484  914  0.448586416  0.951805519 #> 5485  915  0.468904432  0.963536131 #> 5486  915  0.448586416  0.951805519 #> 5487  915  0.448586416  0.928344296 #> 5488  915  0.468904432  0.916613684 #> 5489  915  0.489222447  0.928344296 #> 5490  915  0.489222447  0.951805519 #> 5491  916  0.509540462  0.963536131 #> 5492  916  0.489222447  0.951805519 #> 5493  916  0.489222447  0.928344296 #> 5494  916  0.509540462  0.916613684 #> 5495  916  0.529858478  0.928344296 #> 5496  916  0.529858478  0.951805519 #> 5497  917  0.550176493  0.963536131 #> 5498  917  0.529858478  0.951805519 #> 5499  917  0.529858478  0.928344296 #> 5500  917  0.550176493  0.916613684 #> 5501  917  0.570494509  0.928344296 #> 5502  917  0.570494509  0.951805519 #> 5503  918  0.590812524  0.963536131 #> 5504  918  0.570494509  0.951805519 #> 5505  918  0.570494509  0.928344296 #> 5506  918  0.590812524  0.916613684 #> 5507  918  0.611130539  0.928344296 #> 5508  918  0.611130539  0.951805519 #> 5509  919  0.631448555  0.963536131 #> 5510  919  0.611130539  0.951805519 #> 5511  919  0.611130539  0.928344296 #> 5512  919  0.631448555  0.916613684 #> 5513  919  0.651766570  0.928344296 #> 5514  919  0.651766570  0.951805519 #> 5515  920  0.672084586  0.963536131 #> 5516  920  0.651766570  0.951805519 #> 5517  920  0.651766570  0.928344296 #> 5518  920  0.672084586  0.916613684 #> 5519  920  0.692402601  0.928344296 #> 5520  920  0.692402601  0.951805519 #> 5521  921  0.712720616  0.963536131 #> 5522  921  0.692402601  0.951805519 #> 5523  921  0.692402601  0.928344296 #> 5524  921  0.712720616  0.916613684 #> 5525  921  0.733038632  0.928344296 #> 5526  921  0.733038632  0.951805519 #> 5527  922  0.753356647  0.963536131 #> 5528  922  0.733038632  0.951805519 #> 5529  922  0.733038632  0.928344296 #> 5530  922  0.753356647  0.916613684 #> 5531  922  0.773674663  0.928344296 #> 5532  922  0.773674663  0.951805519 #> 5533  923  0.793992678  0.963536131 #> 5534  923  0.773674663  0.951805519 #> 5535  923  0.773674663  0.928344296 #> 5536  923  0.793992678  0.916613684 #> 5537  923  0.814310694  0.928344296 #> 5538  923  0.814310694  0.951805519 #> 5539  924  0.834628709  0.963536131 #> 5540  924  0.814310694  0.951805519 #> 5541  924  0.814310694  0.928344296 #> 5542  924  0.834628709  0.916613684 #> 5543  924  0.854946724  0.928344296 #> 5544  924  0.854946724  0.951805519 #> 5545  925  0.875264740  0.963536131 #> 5546  925  0.854946724  0.951805519 #> 5547  925  0.854946724  0.928344296 #> 5548  925  0.875264740  0.916613684 #> 5549  925  0.895582755  0.928344296 #> 5550  925  0.895582755  0.951805519 #> 5551  926  0.915900771  0.963536131 #> 5552  926  0.895582755  0.951805519 #> 5553  926  0.895582755  0.928344296 #> 5554  926  0.915900771  0.916613684 #> 5555  926  0.936218786  0.928344296 #> 5556  926  0.936218786  0.951805519 #> 5557  927  0.956536801  0.963536131 #> 5558  927  0.936218786  0.951805519 #> 5559  927  0.936218786  0.928344296 #> 5560  927  0.956536801  0.916613684 #> 5561  927  0.976854817  0.928344296 #> 5562  927  0.976854817  0.951805519 #> 5563  928  0.997172832  0.963536131 #> 5564  928  0.976854817  0.951805519 #> 5565  928  0.976854817  0.928344296 #> 5566  928  0.997172832  0.916613684 #> 5567  928  1.017490848  0.928344296 #> 5568  928  1.017490848  0.951805519 #> 5569  929  1.037808863  0.963536131 #> 5570  929  1.017490848  0.951805519 #> 5571  929  1.017490848  0.928344296 #> 5572  929  1.037808863  0.916613684 #> 5573  929  1.058126878  0.928344296 #> 5574  929  1.058126878  0.951805519 #> 5575  930  1.078444894  0.963536131 #> 5576  930  1.058126878  0.951805519 #> 5577  930  1.058126878  0.928344296 #> 5578  930  1.078444894  0.916613684 #> 5579  930  1.098762909  0.928344296 #> 5580  930  1.098762909  0.951805519 #> 5581  931 -0.079681985  0.998727966 #> 5582  931 -0.100000000  0.986997354 #> 5583  931 -0.100000000  0.963536131 #> 5584  931 -0.079681985  0.951805519 #> 5585  931 -0.059363969  0.963536131 #> 5586  931 -0.059363969  0.986997354 #> 5587  932 -0.039045954  0.998727966 #> 5588  932 -0.059363969  0.986997354 #> 5589  932 -0.059363969  0.963536131 #> 5590  932 -0.039045954  0.951805519 #> 5591  932 -0.018727938  0.963536131 #> 5592  932 -0.018727938  0.986997354 #> 5593  933  0.001590077  0.998727966 #> 5594  933 -0.018727938  0.986997354 #> 5595  933 -0.018727938  0.963536131 #> 5596  933  0.001590077  0.951805519 #> 5597  933  0.021908092  0.963536131 #> 5598  933  0.021908092  0.986997354 #> 5599  934  0.042226108  0.998727966 #> 5600  934  0.021908092  0.986997354 #> 5601  934  0.021908092  0.963536131 #> 5602  934  0.042226108  0.951805519 #> 5603  934  0.062544123  0.963536131 #> 5604  934  0.062544123  0.986997354 #> 5605  935  0.082862139  0.998727966 #> 5606  935  0.062544123  0.986997354 #> 5607  935  0.062544123  0.963536131 #> 5608  935  0.082862139  0.951805519 #> 5609  935  0.103180154  0.963536131 #> 5610  935  0.103180154  0.986997354 #> 5611  936  0.123498170  0.998727966 #> 5612  936  0.103180154  0.986997354 #> 5613  936  0.103180154  0.963536131 #> 5614  936  0.123498170  0.951805519 #> 5615  936  0.143816185  0.963536131 #> 5616  936  0.143816185  0.986997354 #> 5617  937  0.164134200  0.998727966 #> 5618  937  0.143816185  0.986997354 #> 5619  937  0.143816185  0.963536131 #> 5620  937  0.164134200  0.951805519 #> 5621  937  0.184452216  0.963536131 #> 5622  937  0.184452216  0.986997354 #> 5623  938  0.204770231  0.998727966 #> 5624  938  0.184452216  0.986997354 #> 5625  938  0.184452216  0.963536131 #> 5626  938  0.204770231  0.951805519 #> 5627  938  0.225088247  0.963536131 #> 5628  938  0.225088247  0.986997354 #> 5629  939  0.245406262  0.998727966 #> 5630  939  0.225088247  0.986997354 #> 5631  939  0.225088247  0.963536131 #> 5632  939  0.245406262  0.951805519 #> 5633  939  0.265724277  0.963536131 #> 5634  939  0.265724277  0.986997354 #> 5635  940  0.286042293  0.998727966 #> 5636  940  0.265724277  0.986997354 #> 5637  940  0.265724277  0.963536131 #> 5638  940  0.286042293  0.951805519 #> 5639  940  0.306360308  0.963536131 #> 5640  940  0.306360308  0.986997354 #> 5641  941  0.326678324  0.998727966 #> 5642  941  0.306360308  0.986997354 #> 5643  941  0.306360308  0.963536131 #> 5644  941  0.326678324  0.951805519 #> 5645  941  0.346996339  0.963536131 #> 5646  941  0.346996339  0.986997354 #> 5647  942  0.367314354  0.998727966 #> 5648  942  0.346996339  0.986997354 #> 5649  942  0.346996339  0.963536131 #> 5650  942  0.367314354  0.951805519 #> 5651  942  0.387632370  0.963536131 #> 5652  942  0.387632370  0.986997354 #> 5653  943  0.407950385  0.998727966 #> 5654  943  0.387632370  0.986997354 #> 5655  943  0.387632370  0.963536131 #> 5656  943  0.407950385  0.951805519 #> 5657  943  0.428268401  0.963536131 #> 5658  943  0.428268401  0.986997354 #> 5659  944  0.448586416  0.998727966 #> 5660  944  0.428268401  0.986997354 #> 5661  944  0.428268401  0.963536131 #> 5662  944  0.448586416  0.951805519 #> 5663  944  0.468904432  0.963536131 #> 5664  944  0.468904432  0.986997354 #> 5665  945  0.489222447  0.998727966 #> 5666  945  0.468904432  0.986997354 #> 5667  945  0.468904432  0.963536131 #> 5668  945  0.489222447  0.951805519 #> 5669  945  0.509540462  0.963536131 #> 5670  945  0.509540462  0.986997354 #> 5671  946  0.529858478  0.998727966 #> 5672  946  0.509540462  0.986997354 #> 5673  946  0.509540462  0.963536131 #> 5674  946  0.529858478  0.951805519 #> 5675  946  0.550176493  0.963536131 #> 5676  946  0.550176493  0.986997354 #> 5677  947  0.570494509  0.998727966 #> 5678  947  0.550176493  0.986997354 #> 5679  947  0.550176493  0.963536131 #> 5680  947  0.570494509  0.951805519 #> 5681  947  0.590812524  0.963536131 #> 5682  947  0.590812524  0.986997354 #> 5683  948  0.611130539  0.998727966 #> 5684  948  0.590812524  0.986997354 #> 5685  948  0.590812524  0.963536131 #> 5686  948  0.611130539  0.951805519 #> 5687  948  0.631448555  0.963536131 #> 5688  948  0.631448555  0.986997354 #> 5689  949  0.651766570  0.998727966 #> 5690  949  0.631448555  0.986997354 #> 5691  949  0.631448555  0.963536131 #> 5692  949  0.651766570  0.951805519 #> 5693  949  0.672084586  0.963536131 #> 5694  949  0.672084586  0.986997354 #> 5695  950  0.692402601  0.998727966 #> 5696  950  0.672084586  0.986997354 #> 5697  950  0.672084586  0.963536131 #> 5698  950  0.692402601  0.951805519 #> 5699  950  0.712720616  0.963536131 #> 5700  950  0.712720616  0.986997354 #> 5701  951  0.733038632  0.998727966 #> 5702  951  0.712720616  0.986997354 #> 5703  951  0.712720616  0.963536131 #> 5704  951  0.733038632  0.951805519 #> 5705  951  0.753356647  0.963536131 #> 5706  951  0.753356647  0.986997354 #> 5707  952  0.773674663  0.998727966 #> 5708  952  0.753356647  0.986997354 #> 5709  952  0.753356647  0.963536131 #> 5710  952  0.773674663  0.951805519 #> 5711  952  0.793992678  0.963536131 #> 5712  952  0.793992678  0.986997354 #> 5713  953  0.814310694  0.998727966 #> 5714  953  0.793992678  0.986997354 #> 5715  953  0.793992678  0.963536131 #> 5716  953  0.814310694  0.951805519 #> 5717  953  0.834628709  0.963536131 #> 5718  953  0.834628709  0.986997354 #> 5719  954  0.854946724  0.998727966 #> 5720  954  0.834628709  0.986997354 #> 5721  954  0.834628709  0.963536131 #> 5722  954  0.854946724  0.951805519 #> 5723  954  0.875264740  0.963536131 #> 5724  954  0.875264740  0.986997354 #> 5725  955  0.895582755  0.998727966 #> 5726  955  0.875264740  0.986997354 #> 5727  955  0.875264740  0.963536131 #> 5728  955  0.895582755  0.951805519 #> 5729  955  0.915900771  0.963536131 #> 5730  955  0.915900771  0.986997354 #> 5731  956  0.936218786  0.998727966 #> 5732  956  0.915900771  0.986997354 #> 5733  956  0.915900771  0.963536131 #> 5734  956  0.936218786  0.951805519 #> 5735  956  0.956536801  0.963536131 #> 5736  956  0.956536801  0.986997354 #> 5737  957  0.976854817  0.998727966 #> 5738  957  0.956536801  0.986997354 #> 5739  957  0.956536801  0.963536131 #> 5740  957  0.976854817  0.951805519 #> 5741  957  0.997172832  0.963536131 #> 5742  957  0.997172832  0.986997354 #> 5743  958  1.017490848  0.998727966 #> 5744  958  0.997172832  0.986997354 #> 5745  958  0.997172832  0.963536131 #> 5746  958  1.017490848  0.951805519 #> 5747  958  1.037808863  0.963536131 #> 5748  958  1.037808863  0.986997354 #> 5749  959  1.058126878  0.998727966 #> 5750  959  1.037808863  0.986997354 #> 5751  959  1.037808863  0.963536131 #> 5752  959  1.058126878  0.951805519 #> 5753  959  1.078444894  0.963536131 #> 5754  959  1.078444894  0.986997354 #> 5755  960  1.098762909  0.998727966 #> 5756  960  1.078444894  0.986997354 #> 5757  960  1.078444894  0.963536131 #> 5758  960  1.098762909  0.951805519 #> 5759  960  1.119080925  0.963536131 #> 5760  960  1.119080925  0.986997354 #> 5761  961 -0.100000000  1.033919801 #> 5762  961 -0.120318015  1.022189189 #> 5763  961 -0.120318015  0.998727966 #> 5764  961 -0.100000000  0.986997354 #> 5765  961 -0.079681985  0.998727966 #> 5766  961 -0.079681985  1.022189189 #> 5767  962 -0.059363969  1.033919801 #> 5768  962 -0.079681985  1.022189189 #> 5769  962 -0.079681985  0.998727966 #> 5770  962 -0.059363969  0.986997354 #> 5771  962 -0.039045954  0.998727966 #> 5772  962 -0.039045954  1.022189189 #> 5773  963 -0.018727938  1.033919801 #> 5774  963 -0.039045954  1.022189189 #> 5775  963 -0.039045954  0.998727966 #> 5776  963 -0.018727938  0.986997354 #> 5777  963  0.001590077  0.998727966 #> 5778  963  0.001590077  1.022189189 #> 5779  964  0.021908092  1.033919801 #> 5780  964  0.001590077  1.022189189 #> 5781  964  0.001590077  0.998727966 #> 5782  964  0.021908092  0.986997354 #> 5783  964  0.042226108  0.998727966 #> 5784  964  0.042226108  1.022189189 #> 5785  965  0.062544123  1.033919801 #> 5786  965  0.042226108  1.022189189 #> 5787  965  0.042226108  0.998727966 #> 5788  965  0.062544123  0.986997354 #> 5789  965  0.082862139  0.998727966 #> 5790  965  0.082862139  1.022189189 #> 5791  966  0.103180154  1.033919801 #> 5792  966  0.082862139  1.022189189 #> 5793  966  0.082862139  0.998727966 #> 5794  966  0.103180154  0.986997354 #> 5795  966  0.123498170  0.998727966 #> 5796  966  0.123498170  1.022189189 #> 5797  967  0.143816185  1.033919801 #> 5798  967  0.123498170  1.022189189 #> 5799  967  0.123498170  0.998727966 #> 5800  967  0.143816185  0.986997354 #> 5801  967  0.164134200  0.998727966 #> 5802  967  0.164134200  1.022189189 #> 5803  968  0.184452216  1.033919801 #> 5804  968  0.164134200  1.022189189 #> 5805  968  0.164134200  0.998727966 #> 5806  968  0.184452216  0.986997354 #> 5807  968  0.204770231  0.998727966 #> 5808  968  0.204770231  1.022189189 #> 5809  969  0.225088247  1.033919801 #> 5810  969  0.204770231  1.022189189 #> 5811  969  0.204770231  0.998727966 #> 5812  969  0.225088247  0.986997354 #> 5813  969  0.245406262  0.998727966 #> 5814  969  0.245406262  1.022189189 #> 5815  970  0.265724277  1.033919801 #> 5816  970  0.245406262  1.022189189 #> 5817  970  0.245406262  0.998727966 #> 5818  970  0.265724277  0.986997354 #> 5819  970  0.286042293  0.998727966 #> 5820  970  0.286042293  1.022189189 #> 5821  971  0.306360308  1.033919801 #> 5822  971  0.286042293  1.022189189 #> 5823  971  0.286042293  0.998727966 #> 5824  971  0.306360308  0.986997354 #> 5825  971  0.326678324  0.998727966 #> 5826  971  0.326678324  1.022189189 #> 5827  972  0.346996339  1.033919801 #> 5828  972  0.326678324  1.022189189 #> 5829  972  0.326678324  0.998727966 #> 5830  972  0.346996339  0.986997354 #> 5831  972  0.367314354  0.998727966 #> 5832  972  0.367314354  1.022189189 #> 5833  973  0.387632370  1.033919801 #> 5834  973  0.367314354  1.022189189 #> 5835  973  0.367314354  0.998727966 #> 5836  973  0.387632370  0.986997354 #> 5837  973  0.407950385  0.998727966 #> 5838  973  0.407950385  1.022189189 #> 5839  974  0.428268401  1.033919801 #> 5840  974  0.407950385  1.022189189 #> 5841  974  0.407950385  0.998727966 #> 5842  974  0.428268401  0.986997354 #> 5843  974  0.448586416  0.998727966 #> 5844  974  0.448586416  1.022189189 #> 5845  975  0.468904432  1.033919801 #> 5846  975  0.448586416  1.022189189 #> 5847  975  0.448586416  0.998727966 #> 5848  975  0.468904432  0.986997354 #> 5849  975  0.489222447  0.998727966 #> 5850  975  0.489222447  1.022189189 #> 5851  976  0.509540462  1.033919801 #> 5852  976  0.489222447  1.022189189 #> 5853  976  0.489222447  0.998727966 #> 5854  976  0.509540462  0.986997354 #> 5855  976  0.529858478  0.998727966 #> 5856  976  0.529858478  1.022189189 #> 5857  977  0.550176493  1.033919801 #> 5858  977  0.529858478  1.022189189 #> 5859  977  0.529858478  0.998727966 #> 5860  977  0.550176493  0.986997354 #> 5861  977  0.570494509  0.998727966 #> 5862  977  0.570494509  1.022189189 #> 5863  978  0.590812524  1.033919801 #> 5864  978  0.570494509  1.022189189 #> 5865  978  0.570494509  0.998727966 #> 5866  978  0.590812524  0.986997354 #> 5867  978  0.611130539  0.998727966 #> 5868  978  0.611130539  1.022189189 #> 5869  979  0.631448555  1.033919801 #> 5870  979  0.611130539  1.022189189 #> 5871  979  0.611130539  0.998727966 #> 5872  979  0.631448555  0.986997354 #> 5873  979  0.651766570  0.998727966 #> 5874  979  0.651766570  1.022189189 #> 5875  980  0.672084586  1.033919801 #> 5876  980  0.651766570  1.022189189 #> 5877  980  0.651766570  0.998727966 #> 5878  980  0.672084586  0.986997354 #> 5879  980  0.692402601  0.998727966 #> 5880  980  0.692402601  1.022189189 #> 5881  981  0.712720616  1.033919801 #> 5882  981  0.692402601  1.022189189 #> 5883  981  0.692402601  0.998727966 #> 5884  981  0.712720616  0.986997354 #> 5885  981  0.733038632  0.998727966 #> 5886  981  0.733038632  1.022189189 #> 5887  982  0.753356647  1.033919801 #> 5888  982  0.733038632  1.022189189 #> 5889  982  0.733038632  0.998727966 #> 5890  982  0.753356647  0.986997354 #> 5891  982  0.773674663  0.998727966 #> 5892  982  0.773674663  1.022189189 #> 5893  983  0.793992678  1.033919801 #> 5894  983  0.773674663  1.022189189 #> 5895  983  0.773674663  0.998727966 #> 5896  983  0.793992678  0.986997354 #> 5897  983  0.814310694  0.998727966 #> 5898  983  0.814310694  1.022189189 #> 5899  984  0.834628709  1.033919801 #> 5900  984  0.814310694  1.022189189 #> 5901  984  0.814310694  0.998727966 #> 5902  984  0.834628709  0.986997354 #> 5903  984  0.854946724  0.998727966 #> 5904  984  0.854946724  1.022189189 #> 5905  985  0.875264740  1.033919801 #> 5906  985  0.854946724  1.022189189 #> 5907  985  0.854946724  0.998727966 #> 5908  985  0.875264740  0.986997354 #> 5909  985  0.895582755  0.998727966 #> 5910  985  0.895582755  1.022189189 #> 5911  986  0.915900771  1.033919801 #> 5912  986  0.895582755  1.022189189 #> 5913  986  0.895582755  0.998727966 #> 5914  986  0.915900771  0.986997354 #> 5915  986  0.936218786  0.998727966 #> 5916  986  0.936218786  1.022189189 #> 5917  987  0.956536801  1.033919801 #> 5918  987  0.936218786  1.022189189 #> 5919  987  0.936218786  0.998727966 #> 5920  987  0.956536801  0.986997354 #> 5921  987  0.976854817  0.998727966 #> 5922  987  0.976854817  1.022189189 #> 5923  988  0.997172832  1.033919801 #> 5924  988  0.976854817  1.022189189 #> 5925  988  0.976854817  0.998727966 #> 5926  988  0.997172832  0.986997354 #> 5927  988  1.017490848  0.998727966 #> 5928  988  1.017490848  1.022189189 #> 5929  989  1.037808863  1.033919801 #> 5930  989  1.017490848  1.022189189 #> 5931  989  1.017490848  0.998727966 #> 5932  989  1.037808863  0.986997354 #> 5933  989  1.058126878  0.998727966 #> 5934  989  1.058126878  1.022189189 #> 5935  990  1.078444894  1.033919801 #> 5936  990  1.058126878  1.022189189 #> 5937  990  1.058126878  0.998727966 #> 5938  990  1.078444894  0.986997354 #> 5939  990  1.098762909  0.998727966 #> 5940  990  1.098762909  1.022189189 #> 5941  991 -0.079681985  1.069111636 #> 5942  991 -0.100000000  1.057381024 #> 5943  991 -0.100000000  1.033919801 #> 5944  991 -0.079681985  1.022189189 #> 5945  991 -0.059363969  1.033919801 #> 5946  991 -0.059363969  1.057381024 #> 5947  992 -0.039045954  1.069111636 #> 5948  992 -0.059363969  1.057381024 #> 5949  992 -0.059363969  1.033919801 #> 5950  992 -0.039045954  1.022189189 #> 5951  992 -0.018727938  1.033919801 #> 5952  992 -0.018727938  1.057381024 #> 5953  993  0.001590077  1.069111636 #> 5954  993 -0.018727938  1.057381024 #> 5955  993 -0.018727938  1.033919801 #> 5956  993  0.001590077  1.022189189 #> 5957  993  0.021908092  1.033919801 #> 5958  993  0.021908092  1.057381024 #> 5959  994  0.042226108  1.069111636 #> 5960  994  0.021908092  1.057381024 #> 5961  994  0.021908092  1.033919801 #> 5962  994  0.042226108  1.022189189 #> 5963  994  0.062544123  1.033919801 #> 5964  994  0.062544123  1.057381024 #> 5965  995  0.082862139  1.069111636 #> 5966  995  0.062544123  1.057381024 #> 5967  995  0.062544123  1.033919801 #> 5968  995  0.082862139  1.022189189 #> 5969  995  0.103180154  1.033919801 #> 5970  995  0.103180154  1.057381024 #> 5971  996  0.123498170  1.069111636 #> 5972  996  0.103180154  1.057381024 #> 5973  996  0.103180154  1.033919801 #> 5974  996  0.123498170  1.022189189 #> 5975  996  0.143816185  1.033919801 #> 5976  996  0.143816185  1.057381024 #> 5977  997  0.164134200  1.069111636 #> 5978  997  0.143816185  1.057381024 #> 5979  997  0.143816185  1.033919801 #> 5980  997  0.164134200  1.022189189 #> 5981  997  0.184452216  1.033919801 #> 5982  997  0.184452216  1.057381024 #> 5983  998  0.204770231  1.069111636 #> 5984  998  0.184452216  1.057381024 #> 5985  998  0.184452216  1.033919801 #> 5986  998  0.204770231  1.022189189 #> 5987  998  0.225088247  1.033919801 #> 5988  998  0.225088247  1.057381024 #> 5989  999  0.245406262  1.069111636 #> 5990  999  0.225088247  1.057381024 #> 5991  999  0.225088247  1.033919801 #> 5992  999  0.245406262  1.022189189 #> 5993  999  0.265724277  1.033919801 #> 5994  999  0.265724277  1.057381024 #> 5995 1000  0.286042293  1.069111636 #> 5996 1000  0.265724277  1.057381024 #> 5997 1000  0.265724277  1.033919801 #> 5998 1000  0.286042293  1.022189189 #> 5999 1000  0.306360308  1.033919801 #> 6000 1000  0.306360308  1.057381024 #> 6001 1001  0.326678324  1.069111636 #> 6002 1001  0.306360308  1.057381024 #> 6003 1001  0.306360308  1.033919801 #> 6004 1001  0.326678324  1.022189189 #> 6005 1001  0.346996339  1.033919801 #> 6006 1001  0.346996339  1.057381024 #> 6007 1002  0.367314354  1.069111636 #> 6008 1002  0.346996339  1.057381024 #> 6009 1002  0.346996339  1.033919801 #> 6010 1002  0.367314354  1.022189189 #> 6011 1002  0.387632370  1.033919801 #> 6012 1002  0.387632370  1.057381024 #> 6013 1003  0.407950385  1.069111636 #> 6014 1003  0.387632370  1.057381024 #> 6015 1003  0.387632370  1.033919801 #> 6016 1003  0.407950385  1.022189189 #> 6017 1003  0.428268401  1.033919801 #> 6018 1003  0.428268401  1.057381024 #> 6019 1004  0.448586416  1.069111636 #> 6020 1004  0.428268401  1.057381024 #> 6021 1004  0.428268401  1.033919801 #> 6022 1004  0.448586416  1.022189189 #> 6023 1004  0.468904432  1.033919801 #> 6024 1004  0.468904432  1.057381024 #> 6025 1005  0.489222447  1.069111636 #> 6026 1005  0.468904432  1.057381024 #> 6027 1005  0.468904432  1.033919801 #> 6028 1005  0.489222447  1.022189189 #> 6029 1005  0.509540462  1.033919801 #> 6030 1005  0.509540462  1.057381024 #> 6031 1006  0.529858478  1.069111636 #> 6032 1006  0.509540462  1.057381024 #> 6033 1006  0.509540462  1.033919801 #> 6034 1006  0.529858478  1.022189189 #> 6035 1006  0.550176493  1.033919801 #> 6036 1006  0.550176493  1.057381024 #> 6037 1007  0.570494509  1.069111636 #> 6038 1007  0.550176493  1.057381024 #> 6039 1007  0.550176493  1.033919801 #> 6040 1007  0.570494509  1.022189189 #> 6041 1007  0.590812524  1.033919801 #> 6042 1007  0.590812524  1.057381024 #> 6043 1008  0.611130539  1.069111636 #> 6044 1008  0.590812524  1.057381024 #> 6045 1008  0.590812524  1.033919801 #> 6046 1008  0.611130539  1.022189189 #> 6047 1008  0.631448555  1.033919801 #> 6048 1008  0.631448555  1.057381024 #> 6049 1009  0.651766570  1.069111636 #> 6050 1009  0.631448555  1.057381024 #> 6051 1009  0.631448555  1.033919801 #> 6052 1009  0.651766570  1.022189189 #> 6053 1009  0.672084586  1.033919801 #> 6054 1009  0.672084586  1.057381024 #> 6055 1010  0.692402601  1.069111636 #> 6056 1010  0.672084586  1.057381024 #> 6057 1010  0.672084586  1.033919801 #> 6058 1010  0.692402601  1.022189189 #> 6059 1010  0.712720616  1.033919801 #> 6060 1010  0.712720616  1.057381024 #> 6061 1011  0.733038632  1.069111636 #> 6062 1011  0.712720616  1.057381024 #> 6063 1011  0.712720616  1.033919801 #> 6064 1011  0.733038632  1.022189189 #> 6065 1011  0.753356647  1.033919801 #> 6066 1011  0.753356647  1.057381024 #> 6067 1012  0.773674663  1.069111636 #> 6068 1012  0.753356647  1.057381024 #> 6069 1012  0.753356647  1.033919801 #> 6070 1012  0.773674663  1.022189189 #> 6071 1012  0.793992678  1.033919801 #> 6072 1012  0.793992678  1.057381024 #> 6073 1013  0.814310694  1.069111636 #> 6074 1013  0.793992678  1.057381024 #> 6075 1013  0.793992678  1.033919801 #> 6076 1013  0.814310694  1.022189189 #> 6077 1013  0.834628709  1.033919801 #> 6078 1013  0.834628709  1.057381024 #> 6079 1014  0.854946724  1.069111636 #> 6080 1014  0.834628709  1.057381024 #> 6081 1014  0.834628709  1.033919801 #> 6082 1014  0.854946724  1.022189189 #> 6083 1014  0.875264740  1.033919801 #> 6084 1014  0.875264740  1.057381024 #> 6085 1015  0.895582755  1.069111636 #> 6086 1015  0.875264740  1.057381024 #> 6087 1015  0.875264740  1.033919801 #> 6088 1015  0.895582755  1.022189189 #> 6089 1015  0.915900771  1.033919801 #> 6090 1015  0.915900771  1.057381024 #> 6091 1016  0.936218786  1.069111636 #> 6092 1016  0.915900771  1.057381024 #> 6093 1016  0.915900771  1.033919801 #> 6094 1016  0.936218786  1.022189189 #> 6095 1016  0.956536801  1.033919801 #> 6096 1016  0.956536801  1.057381024 #> 6097 1017  0.976854817  1.069111636 #> 6098 1017  0.956536801  1.057381024 #> 6099 1017  0.956536801  1.033919801 #> 6100 1017  0.976854817  1.022189189 #> 6101 1017  0.997172832  1.033919801 #> 6102 1017  0.997172832  1.057381024 #> 6103 1018  1.017490848  1.069111636 #> 6104 1018  0.997172832  1.057381024 #> 6105 1018  0.997172832  1.033919801 #> 6106 1018  1.017490848  1.022189189 #> 6107 1018  1.037808863  1.033919801 #> 6108 1018  1.037808863  1.057381024 #> 6109 1019  1.058126878  1.069111636 #> 6110 1019  1.037808863  1.057381024 #> 6111 1019  1.037808863  1.033919801 #> 6112 1019  1.058126878  1.022189189 #> 6113 1019  1.078444894  1.033919801 #> 6114 1019  1.078444894  1.057381024 #> 6115 1020  1.098762909  1.069111636 #> 6116 1020  1.078444894  1.057381024 #> 6117 1020  1.078444894  1.033919801 #> 6118 1020  1.098762909  1.022189189 #> 6119 1020  1.119080925  1.033919801 #> 6120 1020  1.119080925  1.057381024 #> 6121 1021 -0.100000000  1.104303471 #> 6122 1021 -0.120318015  1.092572859 #> 6123 1021 -0.120318015  1.069111636 #> 6124 1021 -0.100000000  1.057381024 #> 6125 1021 -0.079681985  1.069111636 #> 6126 1021 -0.079681985  1.092572859 #> 6127 1022 -0.059363969  1.104303471 #> 6128 1022 -0.079681985  1.092572859 #> 6129 1022 -0.079681985  1.069111636 #> 6130 1022 -0.059363969  1.057381024 #> 6131 1022 -0.039045954  1.069111636 #> 6132 1022 -0.039045954  1.092572859 #> 6133 1023 -0.018727938  1.104303471 #> 6134 1023 -0.039045954  1.092572859 #> 6135 1023 -0.039045954  1.069111636 #> 6136 1023 -0.018727938  1.057381024 #> 6137 1023  0.001590077  1.069111636 #> 6138 1023  0.001590077  1.092572859 #> 6139 1024  0.021908092  1.104303471 #> 6140 1024  0.001590077  1.092572859 #> 6141 1024  0.001590077  1.069111636 #> 6142 1024  0.021908092  1.057381024 #> 6143 1024  0.042226108  1.069111636 #> 6144 1024  0.042226108  1.092572859 #> 6145 1025  0.062544123  1.104303471 #> 6146 1025  0.042226108  1.092572859 #> 6147 1025  0.042226108  1.069111636 #> 6148 1025  0.062544123  1.057381024 #> 6149 1025  0.082862139  1.069111636 #> 6150 1025  0.082862139  1.092572859 #> 6151 1026  0.103180154  1.104303471 #> 6152 1026  0.082862139  1.092572859 #> 6153 1026  0.082862139  1.069111636 #> 6154 1026  0.103180154  1.057381024 #> 6155 1026  0.123498170  1.069111636 #> 6156 1026  0.123498170  1.092572859 #> 6157 1027  0.143816185  1.104303471 #> 6158 1027  0.123498170  1.092572859 #> 6159 1027  0.123498170  1.069111636 #> 6160 1027  0.143816185  1.057381024 #> 6161 1027  0.164134200  1.069111636 #> 6162 1027  0.164134200  1.092572859 #> 6163 1028  0.184452216  1.104303471 #> 6164 1028  0.164134200  1.092572859 #> 6165 1028  0.164134200  1.069111636 #> 6166 1028  0.184452216  1.057381024 #> 6167 1028  0.204770231  1.069111636 #> 6168 1028  0.204770231  1.092572859 #> 6169 1029  0.225088247  1.104303471 #> 6170 1029  0.204770231  1.092572859 #> 6171 1029  0.204770231  1.069111636 #> 6172 1029  0.225088247  1.057381024 #> 6173 1029  0.245406262  1.069111636 #> 6174 1029  0.245406262  1.092572859 #> 6175 1030  0.265724277  1.104303471 #> 6176 1030  0.245406262  1.092572859 #> 6177 1030  0.245406262  1.069111636 #> 6178 1030  0.265724277  1.057381024 #> 6179 1030  0.286042293  1.069111636 #> 6180 1030  0.286042293  1.092572859 #> 6181 1031  0.306360308  1.104303471 #> 6182 1031  0.286042293  1.092572859 #> 6183 1031  0.286042293  1.069111636 #> 6184 1031  0.306360308  1.057381024 #> 6185 1031  0.326678324  1.069111636 #> 6186 1031  0.326678324  1.092572859 #> 6187 1032  0.346996339  1.104303471 #> 6188 1032  0.326678324  1.092572859 #> 6189 1032  0.326678324  1.069111636 #> 6190 1032  0.346996339  1.057381024 #> 6191 1032  0.367314354  1.069111636 #> 6192 1032  0.367314354  1.092572859 #> 6193 1033  0.387632370  1.104303471 #> 6194 1033  0.367314354  1.092572859 #> 6195 1033  0.367314354  1.069111636 #> 6196 1033  0.387632370  1.057381024 #> 6197 1033  0.407950385  1.069111636 #> 6198 1033  0.407950385  1.092572859 #> 6199 1034  0.428268401  1.104303471 #> 6200 1034  0.407950385  1.092572859 #> 6201 1034  0.407950385  1.069111636 #> 6202 1034  0.428268401  1.057381024 #> 6203 1034  0.448586416  1.069111636 #> 6204 1034  0.448586416  1.092572859 #> 6205 1035  0.468904432  1.104303471 #> 6206 1035  0.448586416  1.092572859 #> 6207 1035  0.448586416  1.069111636 #> 6208 1035  0.468904432  1.057381024 #> 6209 1035  0.489222447  1.069111636 #> 6210 1035  0.489222447  1.092572859 #> 6211 1036  0.509540462  1.104303471 #> 6212 1036  0.489222447  1.092572859 #> 6213 1036  0.489222447  1.069111636 #> 6214 1036  0.509540462  1.057381024 #> 6215 1036  0.529858478  1.069111636 #> 6216 1036  0.529858478  1.092572859 #> 6217 1037  0.550176493  1.104303471 #> 6218 1037  0.529858478  1.092572859 #> 6219 1037  0.529858478  1.069111636 #> 6220 1037  0.550176493  1.057381024 #> 6221 1037  0.570494509  1.069111636 #> 6222 1037  0.570494509  1.092572859 #> 6223 1038  0.590812524  1.104303471 #> 6224 1038  0.570494509  1.092572859 #> 6225 1038  0.570494509  1.069111636 #> 6226 1038  0.590812524  1.057381024 #> 6227 1038  0.611130539  1.069111636 #> 6228 1038  0.611130539  1.092572859 #> 6229 1039  0.631448555  1.104303471 #> 6230 1039  0.611130539  1.092572859 #> 6231 1039  0.611130539  1.069111636 #> 6232 1039  0.631448555  1.057381024 #> 6233 1039  0.651766570  1.069111636 #> 6234 1039  0.651766570  1.092572859 #> 6235 1040  0.672084586  1.104303471 #> 6236 1040  0.651766570  1.092572859 #> 6237 1040  0.651766570  1.069111636 #> 6238 1040  0.672084586  1.057381024 #> 6239 1040  0.692402601  1.069111636 #> 6240 1040  0.692402601  1.092572859 #> 6241 1041  0.712720616  1.104303471 #> 6242 1041  0.692402601  1.092572859 #> 6243 1041  0.692402601  1.069111636 #> 6244 1041  0.712720616  1.057381024 #> 6245 1041  0.733038632  1.069111636 #> 6246 1041  0.733038632  1.092572859 #> 6247 1042  0.753356647  1.104303471 #> 6248 1042  0.733038632  1.092572859 #> 6249 1042  0.733038632  1.069111636 #> 6250 1042  0.753356647  1.057381024 #> 6251 1042  0.773674663  1.069111636 #> 6252 1042  0.773674663  1.092572859 #> 6253 1043  0.793992678  1.104303471 #> 6254 1043  0.773674663  1.092572859 #> 6255 1043  0.773674663  1.069111636 #> 6256 1043  0.793992678  1.057381024 #> 6257 1043  0.814310694  1.069111636 #> 6258 1043  0.814310694  1.092572859 #> 6259 1044  0.834628709  1.104303471 #> 6260 1044  0.814310694  1.092572859 #> 6261 1044  0.814310694  1.069111636 #> 6262 1044  0.834628709  1.057381024 #> 6263 1044  0.854946724  1.069111636 #> 6264 1044  0.854946724  1.092572859 #> 6265 1045  0.875264740  1.104303471 #> 6266 1045  0.854946724  1.092572859 #> 6267 1045  0.854946724  1.069111636 #> 6268 1045  0.875264740  1.057381024 #> 6269 1045  0.895582755  1.069111636 #> 6270 1045  0.895582755  1.092572859 #> 6271 1046  0.915900771  1.104303471 #> 6272 1046  0.895582755  1.092572859 #> 6273 1046  0.895582755  1.069111636 #> 6274 1046  0.915900771  1.057381024 #> 6275 1046  0.936218786  1.069111636 #> 6276 1046  0.936218786  1.092572859 #> 6277 1047  0.956536801  1.104303471 #> 6278 1047  0.936218786  1.092572859 #> 6279 1047  0.936218786  1.069111636 #> 6280 1047  0.956536801  1.057381024 #> 6281 1047  0.976854817  1.069111636 #> 6282 1047  0.976854817  1.092572859 #> 6283 1048  0.997172832  1.104303471 #> 6284 1048  0.976854817  1.092572859 #> 6285 1048  0.976854817  1.069111636 #> 6286 1048  0.997172832  1.057381024 #> 6287 1048  1.017490848  1.069111636 #> 6288 1048  1.017490848  1.092572859 #> 6289 1049  1.037808863  1.104303471 #> 6290 1049  1.017490848  1.092572859 #> 6291 1049  1.017490848  1.069111636 #> 6292 1049  1.037808863  1.057381024 #> 6293 1049  1.058126878  1.069111636 #> 6294 1049  1.058126878  1.092572859 #> 6295 1050  1.078444894  1.104303471 #> 6296 1050  1.058126878  1.092572859 #> 6297 1050  1.058126878  1.069111636 #> 6298 1050  1.078444894  1.057381024 #> 6299 1050  1.098762909  1.069111636 #> 6300 1050  1.098762909  1.092572859 #> 6301 1051 -0.079681985  1.139495306 #> 6302 1051 -0.100000000  1.127764694 #> 6303 1051 -0.100000000  1.104303471 #> 6304 1051 -0.079681985  1.092572859 #> 6305 1051 -0.059363969  1.104303471 #> 6306 1051 -0.059363969  1.127764694 #> 6307 1052 -0.039045954  1.139495306 #> 6308 1052 -0.059363969  1.127764694 #> 6309 1052 -0.059363969  1.104303471 #> 6310 1052 -0.039045954  1.092572859 #> 6311 1052 -0.018727938  1.104303471 #> 6312 1052 -0.018727938  1.127764694 #> 6313 1053  0.001590077  1.139495306 #> 6314 1053 -0.018727938  1.127764694 #> 6315 1053 -0.018727938  1.104303471 #> 6316 1053  0.001590077  1.092572859 #> 6317 1053  0.021908092  1.104303471 #> 6318 1053  0.021908092  1.127764694 #> 6319 1054  0.042226108  1.139495306 #> 6320 1054  0.021908092  1.127764694 #> 6321 1054  0.021908092  1.104303471 #> 6322 1054  0.042226108  1.092572859 #> 6323 1054  0.062544123  1.104303471 #> 6324 1054  0.062544123  1.127764694 #> 6325 1055  0.082862139  1.139495306 #> 6326 1055  0.062544123  1.127764694 #> 6327 1055  0.062544123  1.104303471 #> 6328 1055  0.082862139  1.092572859 #> 6329 1055  0.103180154  1.104303471 #> 6330 1055  0.103180154  1.127764694 #> 6331 1056  0.123498170  1.139495306 #> 6332 1056  0.103180154  1.127764694 #> 6333 1056  0.103180154  1.104303471 #> 6334 1056  0.123498170  1.092572859 #> 6335 1056  0.143816185  1.104303471 #> 6336 1056  0.143816185  1.127764694 #> 6337 1057  0.164134200  1.139495306 #> 6338 1057  0.143816185  1.127764694 #> 6339 1057  0.143816185  1.104303471 #> 6340 1057  0.164134200  1.092572859 #> 6341 1057  0.184452216  1.104303471 #> 6342 1057  0.184452216  1.127764694 #> 6343 1058  0.204770231  1.139495306 #> 6344 1058  0.184452216  1.127764694 #> 6345 1058  0.184452216  1.104303471 #> 6346 1058  0.204770231  1.092572859 #> 6347 1058  0.225088247  1.104303471 #> 6348 1058  0.225088247  1.127764694 #> 6349 1059  0.245406262  1.139495306 #> 6350 1059  0.225088247  1.127764694 #> 6351 1059  0.225088247  1.104303471 #> 6352 1059  0.245406262  1.092572859 #> 6353 1059  0.265724277  1.104303471 #> 6354 1059  0.265724277  1.127764694 #> 6355 1060  0.286042293  1.139495306 #> 6356 1060  0.265724277  1.127764694 #> 6357 1060  0.265724277  1.104303471 #> 6358 1060  0.286042293  1.092572859 #> 6359 1060  0.306360308  1.104303471 #> 6360 1060  0.306360308  1.127764694 #> 6361 1061  0.326678324  1.139495306 #> 6362 1061  0.306360308  1.127764694 #> 6363 1061  0.306360308  1.104303471 #> 6364 1061  0.326678324  1.092572859 #> 6365 1061  0.346996339  1.104303471 #> 6366 1061  0.346996339  1.127764694 #> 6367 1062  0.367314354  1.139495306 #> 6368 1062  0.346996339  1.127764694 #> 6369 1062  0.346996339  1.104303471 #> 6370 1062  0.367314354  1.092572859 #> 6371 1062  0.387632370  1.104303471 #> 6372 1062  0.387632370  1.127764694 #> 6373 1063  0.407950385  1.139495306 #> 6374 1063  0.387632370  1.127764694 #> 6375 1063  0.387632370  1.104303471 #> 6376 1063  0.407950385  1.092572859 #> 6377 1063  0.428268401  1.104303471 #> 6378 1063  0.428268401  1.127764694 #> 6379 1064  0.448586416  1.139495306 #> 6380 1064  0.428268401  1.127764694 #> 6381 1064  0.428268401  1.104303471 #> 6382 1064  0.448586416  1.092572859 #> 6383 1064  0.468904432  1.104303471 #> 6384 1064  0.468904432  1.127764694 #> 6385 1065  0.489222447  1.139495306 #> 6386 1065  0.468904432  1.127764694 #> 6387 1065  0.468904432  1.104303471 #> 6388 1065  0.489222447  1.092572859 #> 6389 1065  0.509540462  1.104303471 #> 6390 1065  0.509540462  1.127764694 #> 6391 1066  0.529858478  1.139495306 #> 6392 1066  0.509540462  1.127764694 #> 6393 1066  0.509540462  1.104303471 #> 6394 1066  0.529858478  1.092572859 #> 6395 1066  0.550176493  1.104303471 #> 6396 1066  0.550176493  1.127764694 #> 6397 1067  0.570494509  1.139495306 #> 6398 1067  0.550176493  1.127764694 #> 6399 1067  0.550176493  1.104303471 #> 6400 1067  0.570494509  1.092572859 #> 6401 1067  0.590812524  1.104303471 #> 6402 1067  0.590812524  1.127764694 #> 6403 1068  0.611130539  1.139495306 #> 6404 1068  0.590812524  1.127764694 #> 6405 1068  0.590812524  1.104303471 #> 6406 1068  0.611130539  1.092572859 #> 6407 1068  0.631448555  1.104303471 #> 6408 1068  0.631448555  1.127764694 #> 6409 1069  0.651766570  1.139495306 #> 6410 1069  0.631448555  1.127764694 #> 6411 1069  0.631448555  1.104303471 #> 6412 1069  0.651766570  1.092572859 #> 6413 1069  0.672084586  1.104303471 #> 6414 1069  0.672084586  1.127764694 #> 6415 1070  0.692402601  1.139495306 #> 6416 1070  0.672084586  1.127764694 #> 6417 1070  0.672084586  1.104303471 #> 6418 1070  0.692402601  1.092572859 #> 6419 1070  0.712720616  1.104303471 #> 6420 1070  0.712720616  1.127764694 #> 6421 1071  0.733038632  1.139495306 #> 6422 1071  0.712720616  1.127764694 #> 6423 1071  0.712720616  1.104303471 #> 6424 1071  0.733038632  1.092572859 #> 6425 1071  0.753356647  1.104303471 #> 6426 1071  0.753356647  1.127764694 #> 6427 1072  0.773674663  1.139495306 #> 6428 1072  0.753356647  1.127764694 #> 6429 1072  0.753356647  1.104303471 #> 6430 1072  0.773674663  1.092572859 #> 6431 1072  0.793992678  1.104303471 #> 6432 1072  0.793992678  1.127764694 #> 6433 1073  0.814310694  1.139495306 #> 6434 1073  0.793992678  1.127764694 #> 6435 1073  0.793992678  1.104303471 #> 6436 1073  0.814310694  1.092572859 #> 6437 1073  0.834628709  1.104303471 #> 6438 1073  0.834628709  1.127764694 #> 6439 1074  0.854946724  1.139495306 #> 6440 1074  0.834628709  1.127764694 #> 6441 1074  0.834628709  1.104303471 #> 6442 1074  0.854946724  1.092572859 #> 6443 1074  0.875264740  1.104303471 #> 6444 1074  0.875264740  1.127764694 #> 6445 1075  0.895582755  1.139495306 #> 6446 1075  0.875264740  1.127764694 #> 6447 1075  0.875264740  1.104303471 #> 6448 1075  0.895582755  1.092572859 #> 6449 1075  0.915900771  1.104303471 #> 6450 1075  0.915900771  1.127764694 #> 6451 1076  0.936218786  1.139495306 #> 6452 1076  0.915900771  1.127764694 #> 6453 1076  0.915900771  1.104303471 #> 6454 1076  0.936218786  1.092572859 #> 6455 1076  0.956536801  1.104303471 #> 6456 1076  0.956536801  1.127764694 #> 6457 1077  0.976854817  1.139495306 #> 6458 1077  0.956536801  1.127764694 #> 6459 1077  0.956536801  1.104303471 #> 6460 1077  0.976854817  1.092572859 #> 6461 1077  0.997172832  1.104303471 #> 6462 1077  0.997172832  1.127764694 #> 6463 1078  1.017490848  1.139495306 #> 6464 1078  0.997172832  1.127764694 #> 6465 1078  0.997172832  1.104303471 #> 6466 1078  1.017490848  1.092572859 #> 6467 1078  1.037808863  1.104303471 #> 6468 1078  1.037808863  1.127764694 #> 6469 1079  1.058126878  1.139495306 #> 6470 1079  1.037808863  1.127764694 #> 6471 1079  1.037808863  1.104303471 #> 6472 1079  1.058126878  1.092572859 #> 6473 1079  1.078444894  1.104303471 #> 6474 1079  1.078444894  1.127764694 #> 6475 1080  1.098762909  1.139495306 #> 6476 1080  1.078444894  1.127764694 #> 6477 1080  1.078444894  1.104303471 #> 6478 1080  1.098762909  1.092572859 #> 6479 1080  1.119080925  1.104303471 #> 6480 1080  1.119080925  1.127764694 #> 6481 1081 -0.100000000  1.174687141 #> 6482 1081 -0.120318015  1.162956529 #> 6483 1081 -0.120318015  1.139495306 #> 6484 1081 -0.100000000  1.127764694 #> 6485 1081 -0.079681985  1.139495306 #> 6486 1081 -0.079681985  1.162956529 #> 6487 1082 -0.059363969  1.174687141 #> 6488 1082 -0.079681985  1.162956529 #> 6489 1082 -0.079681985  1.139495306 #> 6490 1082 -0.059363969  1.127764694 #> 6491 1082 -0.039045954  1.139495306 #> 6492 1082 -0.039045954  1.162956529 #> 6493 1083 -0.018727938  1.174687141 #> 6494 1083 -0.039045954  1.162956529 #> 6495 1083 -0.039045954  1.139495306 #> 6496 1083 -0.018727938  1.127764694 #> 6497 1083  0.001590077  1.139495306 #> 6498 1083  0.001590077  1.162956529 #> 6499 1084  0.021908092  1.174687141 #> 6500 1084  0.001590077  1.162956529 #> 6501 1084  0.001590077  1.139495306 #> 6502 1084  0.021908092  1.127764694 #> 6503 1084  0.042226108  1.139495306 #> 6504 1084  0.042226108  1.162956529 #> 6505 1085  0.062544123  1.174687141 #> 6506 1085  0.042226108  1.162956529 #> 6507 1085  0.042226108  1.139495306 #> 6508 1085  0.062544123  1.127764694 #> 6509 1085  0.082862139  1.139495306 #> 6510 1085  0.082862139  1.162956529 #> 6511 1086  0.103180154  1.174687141 #> 6512 1086  0.082862139  1.162956529 #> 6513 1086  0.082862139  1.139495306 #> 6514 1086  0.103180154  1.127764694 #> 6515 1086  0.123498170  1.139495306 #> 6516 1086  0.123498170  1.162956529 #> 6517 1087  0.143816185  1.174687141 #> 6518 1087  0.123498170  1.162956529 #> 6519 1087  0.123498170  1.139495306 #> 6520 1087  0.143816185  1.127764694 #> 6521 1087  0.164134200  1.139495306 #> 6522 1087  0.164134200  1.162956529 #> 6523 1088  0.184452216  1.174687141 #> 6524 1088  0.164134200  1.162956529 #> 6525 1088  0.164134200  1.139495306 #> 6526 1088  0.184452216  1.127764694 #> 6527 1088  0.204770231  1.139495306 #> 6528 1088  0.204770231  1.162956529 #> 6529 1089  0.225088247  1.174687141 #> 6530 1089  0.204770231  1.162956529 #> 6531 1089  0.204770231  1.139495306 #> 6532 1089  0.225088247  1.127764694 #> 6533 1089  0.245406262  1.139495306 #> 6534 1089  0.245406262  1.162956529 #> 6535 1090  0.265724277  1.174687141 #> 6536 1090  0.245406262  1.162956529 #> 6537 1090  0.245406262  1.139495306 #> 6538 1090  0.265724277  1.127764694 #> 6539 1090  0.286042293  1.139495306 #> 6540 1090  0.286042293  1.162956529 #> 6541 1091  0.306360308  1.174687141 #> 6542 1091  0.286042293  1.162956529 #> 6543 1091  0.286042293  1.139495306 #> 6544 1091  0.306360308  1.127764694 #> 6545 1091  0.326678324  1.139495306 #> 6546 1091  0.326678324  1.162956529 #> 6547 1092  0.346996339  1.174687141 #> 6548 1092  0.326678324  1.162956529 #> 6549 1092  0.326678324  1.139495306 #> 6550 1092  0.346996339  1.127764694 #> 6551 1092  0.367314354  1.139495306 #> 6552 1092  0.367314354  1.162956529 #> 6553 1093  0.387632370  1.174687141 #> 6554 1093  0.367314354  1.162956529 #> 6555 1093  0.367314354  1.139495306 #> 6556 1093  0.387632370  1.127764694 #> 6557 1093  0.407950385  1.139495306 #> 6558 1093  0.407950385  1.162956529 #> 6559 1094  0.428268401  1.174687141 #> 6560 1094  0.407950385  1.162956529 #> 6561 1094  0.407950385  1.139495306 #> 6562 1094  0.428268401  1.127764694 #> 6563 1094  0.448586416  1.139495306 #> 6564 1094  0.448586416  1.162956529 #> 6565 1095  0.468904432  1.174687141 #> 6566 1095  0.448586416  1.162956529 #> 6567 1095  0.448586416  1.139495306 #> 6568 1095  0.468904432  1.127764694 #> 6569 1095  0.489222447  1.139495306 #> 6570 1095  0.489222447  1.162956529 #> 6571 1096  0.509540462  1.174687141 #> 6572 1096  0.489222447  1.162956529 #> 6573 1096  0.489222447  1.139495306 #> 6574 1096  0.509540462  1.127764694 #> 6575 1096  0.529858478  1.139495306 #> 6576 1096  0.529858478  1.162956529 #> 6577 1097  0.550176493  1.174687141 #> 6578 1097  0.529858478  1.162956529 #> 6579 1097  0.529858478  1.139495306 #> 6580 1097  0.550176493  1.127764694 #> 6581 1097  0.570494509  1.139495306 #> 6582 1097  0.570494509  1.162956529 #> 6583 1098  0.590812524  1.174687141 #> 6584 1098  0.570494509  1.162956529 #> 6585 1098  0.570494509  1.139495306 #> 6586 1098  0.590812524  1.127764694 #> 6587 1098  0.611130539  1.139495306 #> 6588 1098  0.611130539  1.162956529 #> 6589 1099  0.631448555  1.174687141 #> 6590 1099  0.611130539  1.162956529 #> 6591 1099  0.611130539  1.139495306 #> 6592 1099  0.631448555  1.127764694 #> 6593 1099  0.651766570  1.139495306 #> 6594 1099  0.651766570  1.162956529 #> 6595 1100  0.672084586  1.174687141 #> 6596 1100  0.651766570  1.162956529 #> 6597 1100  0.651766570  1.139495306 #> 6598 1100  0.672084586  1.127764694 #> 6599 1100  0.692402601  1.139495306 #> 6600 1100  0.692402601  1.162956529 #> 6601 1101  0.712720616  1.174687141 #> 6602 1101  0.692402601  1.162956529 #> 6603 1101  0.692402601  1.139495306 #> 6604 1101  0.712720616  1.127764694 #> 6605 1101  0.733038632  1.139495306 #> 6606 1101  0.733038632  1.162956529 #> 6607 1102  0.753356647  1.174687141 #> 6608 1102  0.733038632  1.162956529 #> 6609 1102  0.733038632  1.139495306 #> 6610 1102  0.753356647  1.127764694 #> 6611 1102  0.773674663  1.139495306 #> 6612 1102  0.773674663  1.162956529 #> 6613 1103  0.793992678  1.174687141 #> 6614 1103  0.773674663  1.162956529 #> 6615 1103  0.773674663  1.139495306 #> 6616 1103  0.793992678  1.127764694 #> 6617 1103  0.814310694  1.139495306 #> 6618 1103  0.814310694  1.162956529 #> 6619 1104  0.834628709  1.174687141 #> 6620 1104  0.814310694  1.162956529 #> 6621 1104  0.814310694  1.139495306 #> 6622 1104  0.834628709  1.127764694 #> 6623 1104  0.854946724  1.139495306 #> 6624 1104  0.854946724  1.162956529 #> 6625 1105  0.875264740  1.174687141 #> 6626 1105  0.854946724  1.162956529 #> 6627 1105  0.854946724  1.139495306 #> 6628 1105  0.875264740  1.127764694 #> 6629 1105  0.895582755  1.139495306 #> 6630 1105  0.895582755  1.162956529 #> 6631 1106  0.915900771  1.174687141 #> 6632 1106  0.895582755  1.162956529 #> 6633 1106  0.895582755  1.139495306 #> 6634 1106  0.915900771  1.127764694 #> 6635 1106  0.936218786  1.139495306 #> 6636 1106  0.936218786  1.162956529 #> 6637 1107  0.956536801  1.174687141 #> 6638 1107  0.936218786  1.162956529 #> 6639 1107  0.936218786  1.139495306 #> 6640 1107  0.956536801  1.127764694 #> 6641 1107  0.976854817  1.139495306 #> 6642 1107  0.976854817  1.162956529 #> 6643 1108  0.997172832  1.174687141 #> 6644 1108  0.976854817  1.162956529 #> 6645 1108  0.976854817  1.139495306 #> 6646 1108  0.997172832  1.127764694 #> 6647 1108  1.017490848  1.139495306 #> 6648 1108  1.017490848  1.162956529 #> 6649 1109  1.037808863  1.174687141 #> 6650 1109  1.017490848  1.162956529 #> 6651 1109  1.017490848  1.139495306 #> 6652 1109  1.037808863  1.127764694 #> 6653 1109  1.058126878  1.139495306 #> 6654 1109  1.058126878  1.162956529 #> 6655 1110  1.078444894  1.174687141 #> 6656 1110  1.058126878  1.162956529 #> 6657 1110  1.058126878  1.139495306 #> 6658 1110  1.078444894  1.127764694 #> 6659 1110  1.098762909  1.139495306 #> 6660 1110  1.098762909  1.162956529 #> 6661 1111 -0.079681985  1.209878976 #> 6662 1111 -0.100000000  1.198148364 #> 6663 1111 -0.100000000  1.174687141 #> 6664 1111 -0.079681985  1.162956529 #> 6665 1111 -0.059363969  1.174687141 #> 6666 1111 -0.059363969  1.198148364 #> 6667 1112 -0.039045954  1.209878976 #> 6668 1112 -0.059363969  1.198148364 #> 6669 1112 -0.059363969  1.174687141 #> 6670 1112 -0.039045954  1.162956529 #> 6671 1112 -0.018727938  1.174687141 #> 6672 1112 -0.018727938  1.198148364 #> 6673 1113  0.001590077  1.209878976 #> 6674 1113 -0.018727938  1.198148364 #> 6675 1113 -0.018727938  1.174687141 #> 6676 1113  0.001590077  1.162956529 #> 6677 1113  0.021908092  1.174687141 #> 6678 1113  0.021908092  1.198148364 #> 6679 1114  0.042226108  1.209878976 #> 6680 1114  0.021908092  1.198148364 #> 6681 1114  0.021908092  1.174687141 #> 6682 1114  0.042226108  1.162956529 #> 6683 1114  0.062544123  1.174687141 #> 6684 1114  0.062544123  1.198148364 #> 6685 1115  0.082862139  1.209878976 #> 6686 1115  0.062544123  1.198148364 #> 6687 1115  0.062544123  1.174687141 #> 6688 1115  0.082862139  1.162956529 #> 6689 1115  0.103180154  1.174687141 #> 6690 1115  0.103180154  1.198148364 #> 6691 1116  0.123498170  1.209878976 #> 6692 1116  0.103180154  1.198148364 #> 6693 1116  0.103180154  1.174687141 #> 6694 1116  0.123498170  1.162956529 #> 6695 1116  0.143816185  1.174687141 #> 6696 1116  0.143816185  1.198148364 #> 6697 1117  0.164134200  1.209878976 #> 6698 1117  0.143816185  1.198148364 #> 6699 1117  0.143816185  1.174687141 #> 6700 1117  0.164134200  1.162956529 #> 6701 1117  0.184452216  1.174687141 #> 6702 1117  0.184452216  1.198148364 #> 6703 1118  0.204770231  1.209878976 #> 6704 1118  0.184452216  1.198148364 #> 6705 1118  0.184452216  1.174687141 #> 6706 1118  0.204770231  1.162956529 #> 6707 1118  0.225088247  1.174687141 #> 6708 1118  0.225088247  1.198148364 #> 6709 1119  0.245406262  1.209878976 #> 6710 1119  0.225088247  1.198148364 #> 6711 1119  0.225088247  1.174687141 #> 6712 1119  0.245406262  1.162956529 #> 6713 1119  0.265724277  1.174687141 #> 6714 1119  0.265724277  1.198148364 #> 6715 1120  0.286042293  1.209878976 #> 6716 1120  0.265724277  1.198148364 #> 6717 1120  0.265724277  1.174687141 #> 6718 1120  0.286042293  1.162956529 #> 6719 1120  0.306360308  1.174687141 #> 6720 1120  0.306360308  1.198148364 #> 6721 1121  0.326678324  1.209878976 #> 6722 1121  0.306360308  1.198148364 #> 6723 1121  0.306360308  1.174687141 #> 6724 1121  0.326678324  1.162956529 #> 6725 1121  0.346996339  1.174687141 #> 6726 1121  0.346996339  1.198148364 #> 6727 1122  0.367314354  1.209878976 #> 6728 1122  0.346996339  1.198148364 #> 6729 1122  0.346996339  1.174687141 #> 6730 1122  0.367314354  1.162956529 #> 6731 1122  0.387632370  1.174687141 #> 6732 1122  0.387632370  1.198148364 #> 6733 1123  0.407950385  1.209878976 #> 6734 1123  0.387632370  1.198148364 #> 6735 1123  0.387632370  1.174687141 #> 6736 1123  0.407950385  1.162956529 #> 6737 1123  0.428268401  1.174687141 #> 6738 1123  0.428268401  1.198148364 #> 6739 1124  0.448586416  1.209878976 #> 6740 1124  0.428268401  1.198148364 #> 6741 1124  0.428268401  1.174687141 #> 6742 1124  0.448586416  1.162956529 #> 6743 1124  0.468904432  1.174687141 #> 6744 1124  0.468904432  1.198148364 #> 6745 1125  0.489222447  1.209878976 #> 6746 1125  0.468904432  1.198148364 #> 6747 1125  0.468904432  1.174687141 #> 6748 1125  0.489222447  1.162956529 #> 6749 1125  0.509540462  1.174687141 #> 6750 1125  0.509540462  1.198148364 #> 6751 1126  0.529858478  1.209878976 #> 6752 1126  0.509540462  1.198148364 #> 6753 1126  0.509540462  1.174687141 #> 6754 1126  0.529858478  1.162956529 #> 6755 1126  0.550176493  1.174687141 #> 6756 1126  0.550176493  1.198148364 #> 6757 1127  0.570494509  1.209878976 #> 6758 1127  0.550176493  1.198148364 #> 6759 1127  0.550176493  1.174687141 #> 6760 1127  0.570494509  1.162956529 #> 6761 1127  0.590812524  1.174687141 #> 6762 1127  0.590812524  1.198148364 #> 6763 1128  0.611130539  1.209878976 #> 6764 1128  0.590812524  1.198148364 #> 6765 1128  0.590812524  1.174687141 #> 6766 1128  0.611130539  1.162956529 #> 6767 1128  0.631448555  1.174687141 #> 6768 1128  0.631448555  1.198148364 #> 6769 1129  0.651766570  1.209878976 #> 6770 1129  0.631448555  1.198148364 #> 6771 1129  0.631448555  1.174687141 #> 6772 1129  0.651766570  1.162956529 #> 6773 1129  0.672084586  1.174687141 #> 6774 1129  0.672084586  1.198148364 #> 6775 1130  0.692402601  1.209878976 #> 6776 1130  0.672084586  1.198148364 #> 6777 1130  0.672084586  1.174687141 #> 6778 1130  0.692402601  1.162956529 #> 6779 1130  0.712720616  1.174687141 #> 6780 1130  0.712720616  1.198148364 #> 6781 1131  0.733038632  1.209878976 #> 6782 1131  0.712720616  1.198148364 #> 6783 1131  0.712720616  1.174687141 #> 6784 1131  0.733038632  1.162956529 #> 6785 1131  0.753356647  1.174687141 #> 6786 1131  0.753356647  1.198148364 #> 6787 1132  0.773674663  1.209878976 #> 6788 1132  0.753356647  1.198148364 #> 6789 1132  0.753356647  1.174687141 #> 6790 1132  0.773674663  1.162956529 #> 6791 1132  0.793992678  1.174687141 #> 6792 1132  0.793992678  1.198148364 #> 6793 1133  0.814310694  1.209878976 #> 6794 1133  0.793992678  1.198148364 #> 6795 1133  0.793992678  1.174687141 #> 6796 1133  0.814310694  1.162956529 #> 6797 1133  0.834628709  1.174687141 #> 6798 1133  0.834628709  1.198148364 #> 6799 1134  0.854946724  1.209878976 #> 6800 1134  0.834628709  1.198148364 #> 6801 1134  0.834628709  1.174687141 #> 6802 1134  0.854946724  1.162956529 #> 6803 1134  0.875264740  1.174687141 #> 6804 1134  0.875264740  1.198148364 #> 6805 1135  0.895582755  1.209878976 #> 6806 1135  0.875264740  1.198148364 #> 6807 1135  0.875264740  1.174687141 #> 6808 1135  0.895582755  1.162956529 #> 6809 1135  0.915900771  1.174687141 #> 6810 1135  0.915900771  1.198148364 #> 6811 1136  0.936218786  1.209878976 #> 6812 1136  0.915900771  1.198148364 #> 6813 1136  0.915900771  1.174687141 #> 6814 1136  0.936218786  1.162956529 #> 6815 1136  0.956536801  1.174687141 #> 6816 1136  0.956536801  1.198148364 #> 6817 1137  0.976854817  1.209878976 #> 6818 1137  0.956536801  1.198148364 #> 6819 1137  0.956536801  1.174687141 #> 6820 1137  0.976854817  1.162956529 #> 6821 1137  0.997172832  1.174687141 #> 6822 1137  0.997172832  1.198148364 #> 6823 1138  1.017490848  1.209878976 #> 6824 1138  0.997172832  1.198148364 #> 6825 1138  0.997172832  1.174687141 #> 6826 1138  1.017490848  1.162956529 #> 6827 1138  1.037808863  1.174687141 #> 6828 1138  1.037808863  1.198148364 #> 6829 1139  1.058126878  1.209878976 #> 6830 1139  1.037808863  1.198148364 #> 6831 1139  1.037808863  1.174687141 #> 6832 1139  1.058126878  1.162956529 #> 6833 1139  1.078444894  1.174687141 #> 6834 1139  1.078444894  1.198148364 #> 6835 1140  1.098762909  1.209878976 #> 6836 1140  1.078444894  1.198148364 #> 6837 1140  1.078444894  1.174687141 #> 6838 1140  1.098762909  1.162956529 #> 6839 1140  1.119080925  1.174687141 #> 6840 1140  1.119080925  1.198148364 #> 6841 1141 -0.100000000  1.245070811 #> 6842 1141 -0.120318015  1.233340199 #> 6843 1141 -0.120318015  1.209878976 #> 6844 1141 -0.100000000  1.198148364 #> 6845 1141 -0.079681985  1.209878976 #> 6846 1141 -0.079681985  1.233340199 #> 6847 1142 -0.059363969  1.245070811 #> 6848 1142 -0.079681985  1.233340199 #> 6849 1142 -0.079681985  1.209878976 #> 6850 1142 -0.059363969  1.198148364 #> 6851 1142 -0.039045954  1.209878976 #> 6852 1142 -0.039045954  1.233340199 #> 6853 1143 -0.018727938  1.245070811 #> 6854 1143 -0.039045954  1.233340199 #> 6855 1143 -0.039045954  1.209878976 #> 6856 1143 -0.018727938  1.198148364 #> 6857 1143  0.001590077  1.209878976 #> 6858 1143  0.001590077  1.233340199 #> 6859 1144  0.021908092  1.245070811 #> 6860 1144  0.001590077  1.233340199 #> 6861 1144  0.001590077  1.209878976 #> 6862 1144  0.021908092  1.198148364 #> 6863 1144  0.042226108  1.209878976 #> 6864 1144  0.042226108  1.233340199 #> 6865 1145  0.062544123  1.245070811 #> 6866 1145  0.042226108  1.233340199 #> 6867 1145  0.042226108  1.209878976 #> 6868 1145  0.062544123  1.198148364 #> 6869 1145  0.082862139  1.209878976 #> 6870 1145  0.082862139  1.233340199 #> 6871 1146  0.103180154  1.245070811 #> 6872 1146  0.082862139  1.233340199 #> 6873 1146  0.082862139  1.209878976 #> 6874 1146  0.103180154  1.198148364 #> 6875 1146  0.123498170  1.209878976 #> 6876 1146  0.123498170  1.233340199 #> 6877 1147  0.143816185  1.245070811 #> 6878 1147  0.123498170  1.233340199 #> 6879 1147  0.123498170  1.209878976 #> 6880 1147  0.143816185  1.198148364 #> 6881 1147  0.164134200  1.209878976 #> 6882 1147  0.164134200  1.233340199 #> 6883 1148  0.184452216  1.245070811 #> 6884 1148  0.164134200  1.233340199 #> 6885 1148  0.164134200  1.209878976 #> 6886 1148  0.184452216  1.198148364 #> 6887 1148  0.204770231  1.209878976 #> 6888 1148  0.204770231  1.233340199 #> 6889 1149  0.225088247  1.245070811 #> 6890 1149  0.204770231  1.233340199 #> 6891 1149  0.204770231  1.209878976 #> 6892 1149  0.225088247  1.198148364 #> 6893 1149  0.245406262  1.209878976 #> 6894 1149  0.245406262  1.233340199 #> 6895 1150  0.265724277  1.245070811 #> 6896 1150  0.245406262  1.233340199 #> 6897 1150  0.245406262  1.209878976 #> 6898 1150  0.265724277  1.198148364 #> 6899 1150  0.286042293  1.209878976 #> 6900 1150  0.286042293  1.233340199 #> 6901 1151  0.306360308  1.245070811 #> 6902 1151  0.286042293  1.233340199 #> 6903 1151  0.286042293  1.209878976 #> 6904 1151  0.306360308  1.198148364 #> 6905 1151  0.326678324  1.209878976 #> 6906 1151  0.326678324  1.233340199 #> 6907 1152  0.346996339  1.245070811 #> 6908 1152  0.326678324  1.233340199 #> 6909 1152  0.326678324  1.209878976 #> 6910 1152  0.346996339  1.198148364 #> 6911 1152  0.367314354  1.209878976 #> 6912 1152  0.367314354  1.233340199 #> 6913 1153  0.387632370  1.245070811 #> 6914 1153  0.367314354  1.233340199 #> 6915 1153  0.367314354  1.209878976 #> 6916 1153  0.387632370  1.198148364 #> 6917 1153  0.407950385  1.209878976 #> 6918 1153  0.407950385  1.233340199 #> 6919 1154  0.428268401  1.245070811 #> 6920 1154  0.407950385  1.233340199 #> 6921 1154  0.407950385  1.209878976 #> 6922 1154  0.428268401  1.198148364 #> 6923 1154  0.448586416  1.209878976 #> 6924 1154  0.448586416  1.233340199 #> 6925 1155  0.468904432  1.245070811 #> 6926 1155  0.448586416  1.233340199 #> 6927 1155  0.448586416  1.209878976 #> 6928 1155  0.468904432  1.198148364 #> 6929 1155  0.489222447  1.209878976 #> 6930 1155  0.489222447  1.233340199 #> 6931 1156  0.509540462  1.245070811 #> 6932 1156  0.489222447  1.233340199 #> 6933 1156  0.489222447  1.209878976 #> 6934 1156  0.509540462  1.198148364 #> 6935 1156  0.529858478  1.209878976 #> 6936 1156  0.529858478  1.233340199 #> 6937 1157  0.550176493  1.245070811 #> 6938 1157  0.529858478  1.233340199 #> 6939 1157  0.529858478  1.209878976 #> 6940 1157  0.550176493  1.198148364 #> 6941 1157  0.570494509  1.209878976 #> 6942 1157  0.570494509  1.233340199 #> 6943 1158  0.590812524  1.245070811 #> 6944 1158  0.570494509  1.233340199 #> 6945 1158  0.570494509  1.209878976 #> 6946 1158  0.590812524  1.198148364 #> 6947 1158  0.611130539  1.209878976 #> 6948 1158  0.611130539  1.233340199 #> 6949 1159  0.631448555  1.245070811 #> 6950 1159  0.611130539  1.233340199 #> 6951 1159  0.611130539  1.209878976 #> 6952 1159  0.631448555  1.198148364 #> 6953 1159  0.651766570  1.209878976 #> 6954 1159  0.651766570  1.233340199 #> 6955 1160  0.672084586  1.245070811 #> 6956 1160  0.651766570  1.233340199 #> 6957 1160  0.651766570  1.209878976 #> 6958 1160  0.672084586  1.198148364 #> 6959 1160  0.692402601  1.209878976 #> 6960 1160  0.692402601  1.233340199 #> 6961 1161  0.712720616  1.245070811 #> 6962 1161  0.692402601  1.233340199 #> 6963 1161  0.692402601  1.209878976 #> 6964 1161  0.712720616  1.198148364 #> 6965 1161  0.733038632  1.209878976 #> 6966 1161  0.733038632  1.233340199 #> 6967 1162  0.753356647  1.245070811 #> 6968 1162  0.733038632  1.233340199 #> 6969 1162  0.733038632  1.209878976 #> 6970 1162  0.753356647  1.198148364 #> 6971 1162  0.773674663  1.209878976 #> 6972 1162  0.773674663  1.233340199 #> 6973 1163  0.793992678  1.245070811 #> 6974 1163  0.773674663  1.233340199 #> 6975 1163  0.773674663  1.209878976 #> 6976 1163  0.793992678  1.198148364 #> 6977 1163  0.814310694  1.209878976 #> 6978 1163  0.814310694  1.233340199 #> 6979 1164  0.834628709  1.245070811 #> 6980 1164  0.814310694  1.233340199 #> 6981 1164  0.814310694  1.209878976 #> 6982 1164  0.834628709  1.198148364 #> 6983 1164  0.854946724  1.209878976 #> 6984 1164  0.854946724  1.233340199 #> 6985 1165  0.875264740  1.245070811 #> 6986 1165  0.854946724  1.233340199 #> 6987 1165  0.854946724  1.209878976 #> 6988 1165  0.875264740  1.198148364 #> 6989 1165  0.895582755  1.209878976 #> 6990 1165  0.895582755  1.233340199 #> 6991 1166  0.915900771  1.245070811 #> 6992 1166  0.895582755  1.233340199 #> 6993 1166  0.895582755  1.209878976 #> 6994 1166  0.915900771  1.198148364 #> 6995 1166  0.936218786  1.209878976 #> 6996 1166  0.936218786  1.233340199 #> 6997 1167  0.956536801  1.245070811 #> 6998 1167  0.936218786  1.233340199 #> 6999 1167  0.936218786  1.209878976 #> 7000 1167  0.956536801  1.198148364 #> 7001 1167  0.976854817  1.209878976 #> 7002 1167  0.976854817  1.233340199 #> 7003 1168  0.997172832  1.245070811 #> 7004 1168  0.976854817  1.233340199 #> 7005 1168  0.976854817  1.209878976 #> 7006 1168  0.997172832  1.198148364 #> 7007 1168  1.017490848  1.209878976 #> 7008 1168  1.017490848  1.233340199 #> 7009 1169  1.037808863  1.245070811 #> 7010 1169  1.017490848  1.233340199 #> 7011 1169  1.017490848  1.209878976 #> 7012 1169  1.037808863  1.198148364 #> 7013 1169  1.058126878  1.209878976 #> 7014 1169  1.058126878  1.233340199 #> 7015 1170  1.078444894  1.245070811 #> 7016 1170  1.058126878  1.233340199 #> 7017 1170  1.058126878  1.209878976 #> 7018 1170  1.078444894  1.198148364 #> 7019 1170  1.098762909  1.209878976 #> 7020 1170  1.098762909  1.233340199 #> 7021 1171 -0.079681985  1.280262646 #> 7022 1171 -0.100000000  1.268532034 #> 7023 1171 -0.100000000  1.245070811 #> 7024 1171 -0.079681985  1.233340199 #> 7025 1171 -0.059363969  1.245070811 #> 7026 1171 -0.059363969  1.268532034 #> 7027 1172 -0.039045954  1.280262646 #> 7028 1172 -0.059363969  1.268532034 #> 7029 1172 -0.059363969  1.245070811 #> 7030 1172 -0.039045954  1.233340199 #> 7031 1172 -0.018727938  1.245070811 #> 7032 1172 -0.018727938  1.268532034 #> 7033 1173  0.001590077  1.280262646 #> 7034 1173 -0.018727938  1.268532034 #> 7035 1173 -0.018727938  1.245070811 #> 7036 1173  0.001590077  1.233340199 #> 7037 1173  0.021908092  1.245070811 #> 7038 1173  0.021908092  1.268532034 #> 7039 1174  0.042226108  1.280262646 #> 7040 1174  0.021908092  1.268532034 #> 7041 1174  0.021908092  1.245070811 #> 7042 1174  0.042226108  1.233340199 #> 7043 1174  0.062544123  1.245070811 #> 7044 1174  0.062544123  1.268532034 #> 7045 1175  0.082862139  1.280262646 #> 7046 1175  0.062544123  1.268532034 #> 7047 1175  0.062544123  1.245070811 #> 7048 1175  0.082862139  1.233340199 #> 7049 1175  0.103180154  1.245070811 #> 7050 1175  0.103180154  1.268532034 #> 7051 1176  0.123498170  1.280262646 #> 7052 1176  0.103180154  1.268532034 #> 7053 1176  0.103180154  1.245070811 #> 7054 1176  0.123498170  1.233340199 #> 7055 1176  0.143816185  1.245070811 #> 7056 1176  0.143816185  1.268532034 #> 7057 1177  0.164134200  1.280262646 #> 7058 1177  0.143816185  1.268532034 #> 7059 1177  0.143816185  1.245070811 #> 7060 1177  0.164134200  1.233340199 #> 7061 1177  0.184452216  1.245070811 #> 7062 1177  0.184452216  1.268532034 #> 7063 1178  0.204770231  1.280262646 #> 7064 1178  0.184452216  1.268532034 #> 7065 1178  0.184452216  1.245070811 #> 7066 1178  0.204770231  1.233340199 #> 7067 1178  0.225088247  1.245070811 #> 7068 1178  0.225088247  1.268532034 #> 7069 1179  0.245406262  1.280262646 #> 7070 1179  0.225088247  1.268532034 #> 7071 1179  0.225088247  1.245070811 #> 7072 1179  0.245406262  1.233340199 #> 7073 1179  0.265724277  1.245070811 #> 7074 1179  0.265724277  1.268532034 #> 7075 1180  0.286042293  1.280262646 #> 7076 1180  0.265724277  1.268532034 #> 7077 1180  0.265724277  1.245070811 #> 7078 1180  0.286042293  1.233340199 #> 7079 1180  0.306360308  1.245070811 #> 7080 1180  0.306360308  1.268532034 #> 7081 1181  0.326678324  1.280262646 #> 7082 1181  0.306360308  1.268532034 #> 7083 1181  0.306360308  1.245070811 #> 7084 1181  0.326678324  1.233340199 #> 7085 1181  0.346996339  1.245070811 #> 7086 1181  0.346996339  1.268532034 #> 7087 1182  0.367314354  1.280262646 #> 7088 1182  0.346996339  1.268532034 #> 7089 1182  0.346996339  1.245070811 #> 7090 1182  0.367314354  1.233340199 #> 7091 1182  0.387632370  1.245070811 #> 7092 1182  0.387632370  1.268532034 #> 7093 1183  0.407950385  1.280262646 #> 7094 1183  0.387632370  1.268532034 #> 7095 1183  0.387632370  1.245070811 #> 7096 1183  0.407950385  1.233340199 #> 7097 1183  0.428268401  1.245070811 #> 7098 1183  0.428268401  1.268532034 #> 7099 1184  0.448586416  1.280262646 #> 7100 1184  0.428268401  1.268532034 #> 7101 1184  0.428268401  1.245070811 #> 7102 1184  0.448586416  1.233340199 #> 7103 1184  0.468904432  1.245070811 #> 7104 1184  0.468904432  1.268532034 #> 7105 1185  0.489222447  1.280262646 #> 7106 1185  0.468904432  1.268532034 #> 7107 1185  0.468904432  1.245070811 #> 7108 1185  0.489222447  1.233340199 #> 7109 1185  0.509540462  1.245070811 #> 7110 1185  0.509540462  1.268532034 #> 7111 1186  0.529858478  1.280262646 #> 7112 1186  0.509540462  1.268532034 #> 7113 1186  0.509540462  1.245070811 #> 7114 1186  0.529858478  1.233340199 #> 7115 1186  0.550176493  1.245070811 #> 7116 1186  0.550176493  1.268532034 #> 7117 1187  0.570494509  1.280262646 #> 7118 1187  0.550176493  1.268532034 #> 7119 1187  0.550176493  1.245070811 #> 7120 1187  0.570494509  1.233340199 #> 7121 1187  0.590812524  1.245070811 #> 7122 1187  0.590812524  1.268532034 #> 7123 1188  0.611130539  1.280262646 #> 7124 1188  0.590812524  1.268532034 #> 7125 1188  0.590812524  1.245070811 #> 7126 1188  0.611130539  1.233340199 #> 7127 1188  0.631448555  1.245070811 #> 7128 1188  0.631448555  1.268532034 #> 7129 1189  0.651766570  1.280262646 #> 7130 1189  0.631448555  1.268532034 #> 7131 1189  0.631448555  1.245070811 #> 7132 1189  0.651766570  1.233340199 #> 7133 1189  0.672084586  1.245070811 #> 7134 1189  0.672084586  1.268532034 #> 7135 1190  0.692402601  1.280262646 #> 7136 1190  0.672084586  1.268532034 #> 7137 1190  0.672084586  1.245070811 #> 7138 1190  0.692402601  1.233340199 #> 7139 1190  0.712720616  1.245070811 #> 7140 1190  0.712720616  1.268532034 #> 7141 1191  0.733038632  1.280262646 #> 7142 1191  0.712720616  1.268532034 #> 7143 1191  0.712720616  1.245070811 #> 7144 1191  0.733038632  1.233340199 #> 7145 1191  0.753356647  1.245070811 #> 7146 1191  0.753356647  1.268532034 #> 7147 1192  0.773674663  1.280262646 #> 7148 1192  0.753356647  1.268532034 #> 7149 1192  0.753356647  1.245070811 #> 7150 1192  0.773674663  1.233340199 #> 7151 1192  0.793992678  1.245070811 #> 7152 1192  0.793992678  1.268532034 #> 7153 1193  0.814310694  1.280262646 #> 7154 1193  0.793992678  1.268532034 #> 7155 1193  0.793992678  1.245070811 #> 7156 1193  0.814310694  1.233340199 #> 7157 1193  0.834628709  1.245070811 #> 7158 1193  0.834628709  1.268532034 #> 7159 1194  0.854946724  1.280262646 #> 7160 1194  0.834628709  1.268532034 #> 7161 1194  0.834628709  1.245070811 #> 7162 1194  0.854946724  1.233340199 #> 7163 1194  0.875264740  1.245070811 #> 7164 1194  0.875264740  1.268532034 #> 7165 1195  0.895582755  1.280262646 #> 7166 1195  0.875264740  1.268532034 #> 7167 1195  0.875264740  1.245070811 #> 7168 1195  0.895582755  1.233340199 #> 7169 1195  0.915900771  1.245070811 #> 7170 1195  0.915900771  1.268532034 #> 7171 1196  0.936218786  1.280262646 #> 7172 1196  0.915900771  1.268532034 #> 7173 1196  0.915900771  1.245070811 #> 7174 1196  0.936218786  1.233340199 #> 7175 1196  0.956536801  1.245070811 #> 7176 1196  0.956536801  1.268532034 #> 7177 1197  0.976854817  1.280262646 #> 7178 1197  0.956536801  1.268532034 #> 7179 1197  0.956536801  1.245070811 #> 7180 1197  0.976854817  1.233340199 #> 7181 1197  0.997172832  1.245070811 #> 7182 1197  0.997172832  1.268532034 #> 7183 1198  1.017490848  1.280262646 #> 7184 1198  0.997172832  1.268532034 #> 7185 1198  0.997172832  1.245070811 #> 7186 1198  1.017490848  1.233340199 #> 7187 1198  1.037808863  1.245070811 #> 7188 1198  1.037808863  1.268532034 #> 7189 1199  1.058126878  1.280262646 #> 7190 1199  1.037808863  1.268532034 #> 7191 1199  1.037808863  1.245070811 #> 7192 1199  1.058126878  1.233340199 #> 7193 1199  1.078444894  1.245070811 #> 7194 1199  1.078444894  1.268532034 #> 7195 1200  1.098762909  1.280262646 #> 7196 1200  1.078444894  1.268532034 #> 7197 1200  1.078444894  1.245070811 #> 7198 1200  1.098762909  1.233340199 #> 7199 1200  1.119080925  1.245070811 #> 7200 1200  1.119080925  1.268532034 #>  #> $data_hb_id #> # A tibble: 1,000 × 4 #>     emb1  emb2    ID     h #>    <dbl> <dbl> <int> <int> #>  1 0.277 0.913     1   880 #>  2 0.697 0.538     2   590 #>  3 0.779 0.399     3   472 #>  4 0.173 0.953     4   908 #>  5 0.218 0.983     5   938 #>  6 0.593 1.05      6  1008 #>  7 0.180 0.210     7   277 #>  8 0.976 0.571     8   597 #>  9 0.803 0.829     9   833 #> 10 0.932 0.410    10   476 #> # ℹ 990 more rows #>  #> $std_cts #> # A tibble: 438 × 3 #>        h   n_h   w_h #>    <int> <int> <dbl> #>  1   112     1 0.001 #>  2   113     1 0.001 #>  3   128     1 0.001 #>  4   129     3 0.003 #>  5   130     5 0.005 #>  6   131     3 0.003 #>  7   132     2 0.002 #>  8   133     3 0.003 #>  9   134     1 0.001 #> 10   142     1 0.001 #> # ℹ 428 more rows #>  #> $b #> [1] 1200 #>  #> $m #> [1] 438 #>  #> $pts_bins #> # A tibble: 438 × 2 #>        h pts_list  #>    <int> <list>    #>  1   112 <int [1]> #>  2   113 <int [1]> #>  3   128 <int [1]> #>  4   129 <int [3]> #>  5   130 <int [5]> #>  6   131 <int [3]> #>  7   132 <int [2]> #>  8   133 <int [3]> #>  9   134 <int [1]> #> 10   142 <int [1]> #> # ℹ 428 more rows #>  #> attr(,\"class\") #> [1] \"hex_bin_obj\" #>  #> $model_highd #> # A tibble: 438 × 8 #>        h     x1     x2    x3       x4       x5       x6        x7 #>    <int>  <dbl>  <dbl> <dbl>    <dbl>    <dbl>    <dbl>     <dbl> #>  1   112 -0.268 1.97    1.96 -0.0191   0.00278  0.0870  -0.00503  #>  2   113 -0.447 1.82    1.89 -0.00126  0.00294  0.0273   0.00571  #>  3   128  0.958 0.0854  1.29  0.00265  0.0171   0.0876  -0.00249  #>  4   129  0.850 0.120   1.52  0.0114  -0.00890  0.00305 -0.00463  #>  5   130  0.773 0.103   1.63 -0.00759  0.00695 -0.0573  -0.00250  #>  6   131  0.633 0.131   1.77 -0.00747  0.00269 -0.0182  -0.00207  #>  7   132  0.472 0.0133  1.88  0.00120 -0.00613  0.0225   0.000932 #>  8   133  0.306 0.106   1.95 -0.00583  0.00688 -0.0185  -0.00306  #>  9   134  0.205 0.109   1.98  0.0113  -0.00702  0.00715 -0.00575  #> 10   142 -0.235 1.75    1.97 -0.0120   0.0128   0.0883  -0.00262  #> # ℹ 428 more rows #>  #> $model_2d #>        h          c_x         c_y n_h   w_h #> 1    112  0.773674663 -0.01010464   1 0.001 #> 2    113  0.814310694 -0.01010464   1 0.001 #> 3    128  0.184452216  0.02508720   1 0.001 #> 4    129  0.225088247  0.02508720   3 0.003 #> 5    130  0.265724277  0.02508720   5 0.005 #> 6    131  0.306360308  0.02508720   3 0.003 #> 7    132  0.346996339  0.02508720   2 0.002 #> 8    133  0.387632370  0.02508720   3 0.003 #> 9    134  0.428268401  0.02508720   1 0.001 #> 10   142  0.753356647  0.02508720   1 0.001 #> 11   143  0.793992678  0.02508720   3 0.003 #> 12   144  0.834628709  0.02508720   3 0.003 #> 13   157  0.164134200  0.06027903   1 0.001 #> 14   158  0.204770231  0.06027903   3 0.003 #> 15   159  0.245406262  0.06027903   3 0.003 #> 16   161  0.326678324  0.06027903   3 0.003 #> 17   162  0.367314354  0.06027903   3 0.003 #> 18   163  0.407950385  0.06027903   2 0.002 #> 19   164  0.448586416  0.06027903   4 0.004 #> 20   165  0.489222447  0.06027903   3 0.003 #> 21   172  0.773674663  0.06027903   5 0.005 #> 22   173  0.814310694  0.06027903   1 0.001 #> 23   174  0.854946724  0.06027903   2 0.002 #> 24   188  0.184452216  0.09547087   4 0.004 #> 25   189  0.225088247  0.09547087   2 0.002 #> 26   190  0.265724277  0.09547087   2 0.002 #> 27   191  0.306360308  0.09547087   2 0.002 #> 28   193  0.387632370  0.09547087   1 0.001 #> 29   194  0.428268401  0.09547087   3 0.003 #> 30   195  0.468904432  0.09547087   3 0.003 #> 31   196  0.509540462  0.09547087   4 0.004 #> 32   200  0.672084586  0.09547087   1 0.001 #> 33   201  0.712720616  0.09547087   2 0.002 #> 34   202  0.753356647  0.09547087   5 0.005 #> 35   203  0.793992678  0.09547087   2 0.002 #> 36   204  0.834628709  0.09547087   5 0.005 #> 37   205  0.875264740  0.09547087   4 0.004 #> 38   217  0.164134200  0.13066270   1 0.001 #> 39   218  0.204770231  0.13066270   3 0.003 #> 40   219  0.245406262  0.13066270   3 0.003 #> 41   220  0.286042293  0.13066270   2 0.002 #> 42   223  0.407950385  0.13066270   2 0.002 #> 43   224  0.448586416  0.13066270   1 0.001 #> 44   225  0.489222447  0.13066270   3 0.003 #> 45   226  0.529858478  0.13066270   5 0.005 #> 46   227  0.570494509  0.13066270   2 0.002 #> 47   228  0.611130539  0.13066270   1 0.001 #> 48   229  0.651766570  0.13066270   2 0.002 #> 49   230  0.692402601  0.13066270   1 0.001 #> 50   231  0.733038632  0.13066270   1 0.001 #> 51   232  0.773674663  0.13066270   3 0.003 #> 52   233  0.814310694  0.13066270   1 0.001 #> 53   234  0.854946724  0.13066270   1 0.001 #> 54   235  0.895582755  0.13066270   1 0.001 #> 55   247  0.143816185  0.16585454   2 0.002 #> 56   248  0.184452216  0.16585454   3 0.003 #> 57   249  0.225088247  0.16585454   3 0.003 #> 58   250  0.265724277  0.16585454   2 0.002 #> 59   251  0.306360308  0.16585454   2 0.002 #> 60   252  0.346996339  0.16585454   2 0.002 #> 61   253  0.387632370  0.16585454   4 0.004 #> 62   254  0.428268401  0.16585454   2 0.002 #> 63   255  0.468904432  0.16585454   2 0.002 #> 64   257  0.550176493  0.16585454   4 0.004 #> 65   258  0.590812524  0.16585454   2 0.002 #> 66   259  0.631448555  0.16585454   3 0.003 #> 67   260  0.672084586  0.16585454   3 0.003 #> 68   261  0.712720616  0.16585454   2 0.002 #> 69   262  0.753356647  0.16585454   4 0.004 #> 70   263  0.793992678  0.16585454   2 0.002 #> 71   264  0.834628709  0.16585454   1 0.001 #> 72   265  0.875264740  0.16585454   3 0.003 #> 73   266  0.915900771  0.16585454   2 0.002 #> 74   277  0.164134200  0.20104637   1 0.001 #> 75   278  0.204770231  0.20104637   5 0.005 #> 76   280  0.286042293  0.20104637   1 0.001 #> 77   281  0.326678324  0.20104637   4 0.004 #> 78   282  0.367314354  0.20104637   1 0.001 #> 79   283  0.407950385  0.20104637   2 0.002 #> 80   284  0.448586416  0.20104637   2 0.002 #> 81   285  0.489222447  0.20104637   2 0.002 #> 82   287  0.570494509  0.20104637   6 0.006 #> 83   288  0.611130539  0.20104637   3 0.003 #> 84   289  0.651766570  0.20104637   2 0.002 #> 85   290  0.692402601  0.20104637   2 0.002 #> 86   291  0.733038632  0.20104637   1 0.001 #> 87   292  0.773674663  0.20104637   1 0.001 #> 88   294  0.854946724  0.20104637   1 0.001 #> 89   295  0.895582755  0.20104637   1 0.001 #> 90   296  0.936218786  0.20104637   5 0.005 #> 91   307  0.143816185  0.23623821   2 0.002 #> 92   308  0.184452216  0.23623821   1 0.001 #> 93   309  0.225088247  0.23623821   2 0.002 #> 94   311  0.306360308  0.23623821   3 0.003 #> 95   312  0.346996339  0.23623821   2 0.002 #> 96   313  0.387632370  0.23623821   1 0.001 #> 97   314  0.428268401  0.23623821   3 0.003 #> 98   315  0.468904432  0.23623821   1 0.001 #> 99   317  0.550176493  0.23623821   1 0.001 #> 100  318  0.590812524  0.23623821   5 0.005 #> 101  319  0.631448555  0.23623821   1 0.001 #> 102  321  0.712720616  0.23623821   2 0.002 #> 103  322  0.753356647  0.23623821   3 0.003 #> 104  323  0.793992678  0.23623821   4 0.004 #> 105  324  0.834628709  0.23623821   2 0.002 #> 106  325  0.875264740  0.23623821   2 0.002 #> 107  326  0.915900771  0.23623821   2 0.002 #> 108  337  0.164134200  0.27143004   5 0.005 #> 109  338  0.204770231  0.27143004   2 0.002 #> 110  339  0.245406262  0.27143004   1 0.001 #> 111  340  0.286042293  0.27143004   3 0.003 #> 112  341  0.326678324  0.27143004   2 0.002 #> 113  342  0.367314354  0.27143004   3 0.003 #> 114  343  0.407950385  0.27143004   2 0.002 #> 115  344  0.448586416  0.27143004   2 0.002 #> 116  348  0.611130539  0.27143004   2 0.002 #> 117  350  0.692402601  0.27143004   1 0.001 #> 118  351  0.733038632  0.27143004   2 0.002 #> 119  352  0.773674663  0.27143004   2 0.002 #> 120  353  0.814310694  0.27143004   2 0.002 #> 121  354  0.854946724  0.27143004   2 0.002 #> 122  355  0.895582755  0.27143004   2 0.002 #> 123  356  0.936218786  0.27143004   3 0.003 #> 124  367  0.143816185  0.30662188   1 0.001 #> 125  368  0.184452216  0.30662188   3 0.003 #> 126  369  0.225088247  0.30662188   4 0.004 #> 127  370  0.265724277  0.30662188   1 0.001 #> 128  371  0.306360308  0.30662188   2 0.002 #> 129  372  0.346996339  0.30662188   2 0.002 #> 130  373  0.387632370  0.30662188   2 0.002 #> 131  379  0.631448555  0.30662188   3 0.003 #> 132  380  0.672084586  0.30662188   4 0.004 #> 133  381  0.712720616  0.30662188   3 0.003 #> 134  382  0.753356647  0.30662188   2 0.002 #> 135  383  0.793992678  0.30662188   1 0.001 #> 136  385  0.875264740  0.30662188   1 0.001 #> 137  386  0.915900771  0.30662188   4 0.004 #> 138  387  0.956536801  0.30662188   1 0.001 #> 139  397  0.164134200  0.34181371   6 0.006 #> 140  398  0.204770231  0.34181371   3 0.003 #> 141  399  0.245406262  0.34181371   1 0.001 #> 142  400  0.286042293  0.34181371   4 0.004 #> 143  401  0.326678324  0.34181371   3 0.003 #> 144  402  0.367314354  0.34181371   5 0.005 #> 145  409  0.651766570  0.34181371   2 0.002 #> 146  410  0.692402601  0.34181371   2 0.002 #> 147  411  0.733038632  0.34181371   4 0.004 #> 148  412  0.773674663  0.34181371   1 0.001 #> 149  414  0.854946724  0.34181371   4 0.004 #> 150  415  0.895582755  0.34181371   3 0.003 #> 151  416  0.936218786  0.34181371   3 0.003 #> 152  417  0.976854817  0.34181371   1 0.001 #> 153  428  0.184452216  0.37700555   3 0.003 #> 154  429  0.225088247  0.37700555   1 0.001 #> 155  440  0.672084586  0.37700555   1 0.001 #> 156  441  0.712720616  0.37700555   2 0.002 #> 157  442  0.753356647  0.37700555   1 0.001 #> 158  443  0.793992678  0.37700555   3 0.003 #> 159  444  0.834628709  0.37700555   2 0.002 #> 160  445  0.875264740  0.37700555   3 0.003 #> 161  446  0.915900771  0.37700555   1 0.001 #> 162  447  0.956536801  0.37700555   2 0.002 #> 163  470  0.692402601  0.41219738   1 0.001 #> 164  471  0.733038632  0.41219738   3 0.003 #> 165  472  0.773674663  0.41219738   1 0.001 #> 166  473  0.814310694  0.41219738   3 0.003 #> 167  475  0.895582755  0.41219738   3 0.003 #> 168  476  0.936218786  0.41219738   1 0.001 #> 169  477  0.976854817  0.41219738   3 0.003 #> 170  500  0.672084586  0.44738922   4 0.004 #> 171  501  0.712720616  0.44738922   5 0.005 #> 172  502  0.753356647  0.44738922   2 0.002 #> 173  503  0.793992678  0.44738922   1 0.001 #> 174  505  0.875264740  0.44738922   2 0.002 #> 175  507  0.956536801  0.44738922   4 0.004 #> 176  530  0.692402601  0.48258105   4 0.004 #> 177  531  0.733038632  0.48258105   3 0.003 #> 178  532  0.773674663  0.48258105   3 0.003 #> 179  533  0.814310694  0.48258105   1 0.001 #> 180  534  0.854946724  0.48258105   1 0.001 #> 181  535  0.895582755  0.48258105   2 0.002 #> 182  536  0.936218786  0.48258105   2 0.002 #> 183  537  0.976854817  0.48258105   3 0.003 #> 184  560  0.672084586  0.51777289   2 0.002 #> 185  561  0.712720616  0.51777289   3 0.003 #> 186  562  0.753356647  0.51777289   1 0.001 #> 187  563  0.793992678  0.51777289   4 0.004 #> 188  564  0.834628709  0.51777289   2 0.002 #> 189  567  0.956536801  0.51777289   1 0.001 #> 190  568  0.997172832  0.51777289   2 0.002 #> 191  590  0.692402601  0.55296472   4 0.004 #> 192  591  0.733038632  0.55296472   1 0.001 #> 193  592  0.773674663  0.55296472   2 0.002 #> 194  593  0.814310694  0.55296472   3 0.003 #> 195  594  0.854946724  0.55296472   2 0.002 #> 196  595  0.895582755  0.55296472   2 0.002 #> 197  596  0.936218786  0.55296472   2 0.002 #> 198  597  0.976854817  0.55296472   3 0.003 #> 199  620  0.672084586  0.58815656   4 0.004 #> 200  621  0.712720616  0.58815656   5 0.005 #> 201  622  0.753356647  0.58815656   1 0.001 #> 202  623  0.793992678  0.58815656   3 0.003 #> 203  624  0.834628709  0.58815656   1 0.001 #> 204  626  0.915900771  0.58815656   1 0.001 #> 205  627  0.956536801  0.58815656   2 0.002 #> 206  628  0.997172832  0.58815656   2 0.002 #> 207  648  0.611130539  0.62334839   1 0.001 #> 208  649  0.651766570  0.62334839   5 0.005 #> 209  651  0.733038632  0.62334839   3 0.003 #> 210  655  0.895582755  0.62334839   2 0.002 #> 211  656  0.936218786  0.62334839   2 0.002 #> 212  657  0.976854817  0.62334839   2 0.002 #> 213  679  0.631448555  0.65854023   4 0.004 #> 214  680  0.672084586  0.65854023   3 0.003 #> 215  681  0.712720616  0.65854023   1 0.001 #> 216  683  0.793992678  0.65854023   1 0.001 #> 217  684  0.834628709  0.65854023   2 0.002 #> 218  685  0.875264740  0.65854023   2 0.002 #> 219  686  0.915900771  0.65854023   2 0.002 #> 220  687  0.956536801  0.65854023   1 0.001 #> 221  707  0.570494509  0.69373206   5 0.005 #> 222  708  0.611130539  0.69373206   3 0.003 #> 223  710  0.692402601  0.69373206   2 0.002 #> 224  711  0.733038632  0.69373206   6 0.006 #> 225  712  0.773674663  0.69373206   1 0.001 #> 226  713  0.814310694  0.69373206   2 0.002 #> 227  714  0.854946724  0.69373206   3 0.003 #> 228  715  0.895582755  0.69373206   4 0.004 #> 229  716  0.936218786  0.69373206   1 0.001 #> 230  737  0.550176493  0.72892390   2 0.002 #> 231  738  0.590812524  0.72892390   3 0.003 #> 232  739  0.631448555  0.72892390   3 0.003 #> 233  740  0.672084586  0.72892390   1 0.001 #> 234  742  0.753356647  0.72892390   1 0.001 #> 235  743  0.793992678  0.72892390   2 0.002 #> 236  744  0.834628709  0.72892390   2 0.002 #> 237  745  0.875264740  0.72892390   2 0.002 #> 238  746  0.915900771  0.72892390   3 0.003 #> 239  757  0.164134200  0.76411573   1 0.001 #> 240  758  0.204770231  0.76411573   1 0.001 #> 241  759  0.245406262  0.76411573   1 0.001 #> 242  760  0.286042293  0.76411573   5 0.005 #> 243  761  0.326678324  0.76411573   1 0.001 #> 244  762  0.367314354  0.76411573   5 0.005 #> 245  763  0.407950385  0.76411573   4 0.004 #> 246  764  0.448586416  0.76411573   3 0.003 #> 247  765  0.489222447  0.76411573   1 0.001 #> 248  766  0.529858478  0.76411573   1 0.001 #> 249  767  0.570494509  0.76411573   4 0.004 #> 250  768  0.611130539  0.76411573   2 0.002 #> 251  769  0.651766570  0.76411573   1 0.001 #> 252  770  0.692402601  0.76411573   2 0.002 #> 253  771  0.733038632  0.76411573   1 0.001 #> 254  772  0.773674663  0.76411573   1 0.001 #> 255  773  0.814310694  0.76411573   1 0.001 #> 256  774  0.854946724  0.76411573   3 0.003 #> 257  775  0.895582755  0.76411573   2 0.002 #> 258  784  0.021908092  0.79930757   2 0.002 #> 259  785  0.062544123  0.79930757   2 0.002 #> 260  786  0.103180154  0.79930757   1 0.001 #> 261  787  0.143816185  0.79930757   4 0.004 #> 262  788  0.184452216  0.79930757   5 0.005 #> 263  789  0.225088247  0.79930757   1 0.001 #> 264  790  0.265724277  0.79930757   2 0.002 #> 265  791  0.306360308  0.79930757   1 0.001 #> 266  792  0.346996339  0.79930757   2 0.002 #> 267  794  0.428268401  0.79930757   2 0.002 #> 268  795  0.468904432  0.79930757   3 0.003 #> 269  797  0.550176493  0.79930757   1 0.001 #> 270  798  0.590812524  0.79930757   1 0.001 #> 271  799  0.631448555  0.79930757   1 0.001 #> 272  800  0.672084586  0.79930757   2 0.002 #> 273  801  0.712720616  0.79930757   2 0.002 #> 274  803  0.793992678  0.79930757   1 0.001 #> 275  804  0.834628709  0.79930757   1 0.001 #> 276  805  0.875264740  0.79930757   2 0.002 #> 277  806  0.915900771  0.79930757   2 0.002 #> 278  813  0.001590077  0.83449940   2 0.002 #> 279  814  0.042226108  0.83449940   4 0.004 #> 280  815  0.082862139  0.83449940   1 0.001 #> 281  816  0.123498170  0.83449940   6 0.006 #> 282  818  0.204770231  0.83449940   3 0.003 #> 283  819  0.245406262  0.83449940   3 0.003 #> 284  820  0.286042293  0.83449940   4 0.004 #> 285  821  0.326678324  0.83449940   3 0.003 #> 286  822  0.367314354  0.83449940   2 0.002 #> 287  823  0.407950385  0.83449940   2 0.002 #> 288  824  0.448586416  0.83449940   4 0.004 #> 289  825  0.489222447  0.83449940   4 0.004 #> 290  826  0.529858478  0.83449940   2 0.002 #> 291  827  0.570494509  0.83449940   1 0.001 #> 292  828  0.611130539  0.83449940   2 0.002 #> 293  829  0.651766570  0.83449940   4 0.004 #> 294  830  0.692402601  0.83449940   3 0.003 #> 295  831  0.733038632  0.83449940   3 0.003 #> 296  832  0.773674663  0.83449940   1 0.001 #> 297  833  0.814310694  0.83449940   2 0.002 #> 298  834  0.854946724  0.83449940   2 0.002 #> 299  844  0.021908092  0.86969124   5 0.005 #> 300  845  0.062544123  0.86969124   1 0.001 #> 301  846  0.103180154  0.86969124   1 0.001 #> 302  847  0.143816185  0.86969124   2 0.002 #> 303  848  0.184452216  0.86969124   1 0.001 #> 304  849  0.225088247  0.86969124   1 0.001 #> 305  850  0.265724277  0.86969124   2 0.002 #> 306  851  0.306360308  0.86969124   4 0.004 #> 307  852  0.346996339  0.86969124   1 0.001 #> 308  853  0.387632370  0.86969124   1 0.001 #> 309  854  0.428268401  0.86969124   1 0.001 #> 310  855  0.468904432  0.86969124   2 0.002 #> 311  856  0.509540462  0.86969124   3 0.003 #> 312  857  0.550176493  0.86969124   1 0.001 #> 313  858  0.590812524  0.86969124   1 0.001 #> 314  859  0.631448555  0.86969124   1 0.001 #> 315  860  0.672084586  0.86969124   2 0.002 #> 316  861  0.712720616  0.86969124   1 0.001 #> 317  863  0.793992678  0.86969124   4 0.004 #> 318  864  0.834628709  0.86969124   2 0.002 #> 319  865  0.875264740  0.86969124   1 0.001 #> 320  873  0.001590077  0.90488307   1 0.001 #> 321  874  0.042226108  0.90488307   3 0.003 #> 322  875  0.082862139  0.90488307   2 0.002 #> 323  876  0.123498170  0.90488307   1 0.001 #> 324  877  0.164134200  0.90488307   1 0.001 #> 325  879  0.245406262  0.90488307   3 0.003 #> 326  880  0.286042293  0.90488307   1 0.001 #> 327  881  0.326678324  0.90488307   2 0.002 #> 328  882  0.367314354  0.90488307   2 0.002 #> 329  883  0.407950385  0.90488307   2 0.002 #> 330  884  0.448586416  0.90488307   3 0.003 #> 331  885  0.489222447  0.90488307   2 0.002 #> 332  886  0.529858478  0.90488307   4 0.004 #> 333  887  0.570494509  0.90488307   3 0.003 #> 334  888  0.611130539  0.90488307   1 0.001 #> 335  889  0.651766570  0.90488307   1 0.001 #> 336  890  0.692402601  0.90488307   1 0.001 #> 337  891  0.733038632  0.90488307   2 0.002 #> 338  892  0.773674663  0.90488307   2 0.002 #> 339  893  0.814310694  0.90488307   3 0.003 #> 340  894  0.854946724  0.90488307   3 0.003 #> 341  903 -0.018727938  0.94007491   1 0.001 #> 342  904  0.021908092  0.94007491   3 0.003 #> 343  905  0.062544123  0.94007491   1 0.001 #> 344  908  0.184452216  0.94007491   1 0.001 #> 345  909  0.225088247  0.94007491   1 0.001 #> 346  910  0.265724277  0.94007491   3 0.003 #> 347  911  0.306360308  0.94007491   2 0.002 #> 348  912  0.346996339  0.94007491   1 0.001 #> 349  913  0.387632370  0.94007491   1 0.001 #> 350  914  0.428268401  0.94007491   5 0.005 #> 351  915  0.468904432  0.94007491   3 0.003 #> 352  918  0.590812524  0.94007491   1 0.001 #> 353  919  0.631448555  0.94007491   4 0.004 #> 354  920  0.672084586  0.94007491   4 0.004 #> 355  921  0.712720616  0.94007491   2 0.002 #> 356  922  0.753356647  0.94007491   5 0.005 #> 357  923  0.793992678  0.94007491   4 0.004 #> 358  924  0.834628709  0.94007491   2 0.002 #> 359  933  0.001590077  0.97526674   3 0.003 #> 360  934  0.042226108  0.97526674   3 0.003 #> 361  935  0.082862139  0.97526674   3 0.003 #> 362  936  0.123498170  0.97526674   2 0.002 #> 363  937  0.164134200  0.97526674   1 0.001 #> 364  938  0.204770231  0.97526674   2 0.002 #> 365  939  0.245406262  0.97526674   1 0.001 #> 366  940  0.286042293  0.97526674   1 0.001 #> 367  941  0.326678324  0.97526674   2 0.002 #> 368  942  0.367314354  0.97526674   2 0.002 #> 369  943  0.407950385  0.97526674   1 0.001 #> 370  944  0.448586416  0.97526674   4 0.004 #> 371  946  0.529858478  0.97526674   3 0.003 #> 372  951  0.733038632  0.97526674   1 0.001 #> 373  952  0.773674663  0.97526674   1 0.001 #> 374  964  0.021908092  1.01045858   5 0.005 #> 375  965  0.062544123  1.01045858   1 0.001 #> 376  966  0.103180154  1.01045858   3 0.003 #> 377  967  0.143816185  1.01045858   2 0.002 #> 378  968  0.184452216  1.01045858   2 0.002 #> 379  970  0.265724277  1.01045858   2 0.002 #> 380  971  0.306360308  1.01045858   3 0.003 #> 381  972  0.346996339  1.01045858   1 0.001 #> 382  973  0.387632370  1.01045858   1 0.001 #> 383  975  0.468904432  1.01045858   2 0.002 #> 384  977  0.550176493  1.01045858   1 0.001 #> 385  978  0.590812524  1.01045858   1 0.001 #> 386  979  0.631448555  1.01045858   2 0.002 #> 387  980  0.672084586  1.01045858   4 0.004 #> 388  981  0.712720616  1.01045858   2 0.002 #> 389  993  0.001590077  1.04565041   1 0.001 #> 390  995  0.082862139  1.04565041   3 0.003 #> 391  997  0.164134200  1.04565041   4 0.004 #> 392  998  0.204770231  1.04565041   1 0.001 #> 393  999  0.245406262  1.04565041   2 0.002 #> 394 1000  0.286042293  1.04565041   2 0.002 #> 395 1002  0.367314354  1.04565041   2 0.002 #> 396 1003  0.407950385  1.04565041   5 0.005 #> 397 1005  0.489222447  1.04565041   2 0.002 #> 398 1006  0.529858478  1.04565041   2 0.002 #> 399 1007  0.570494509  1.04565041   1 0.001 #> 400 1008  0.611130539  1.04565041   1 0.001 #> 401 1009  0.651766570  1.04565041   1 0.001 #> 402 1024  0.021908092  1.08084225   3 0.003 #> 403 1025  0.062544123  1.08084225   3 0.003 #> 404 1026  0.103180154  1.08084225   3 0.003 #> 405 1027  0.143816185  1.08084225   1 0.001 #> 406 1028  0.184452216  1.08084225   3 0.003 #> 407 1029  0.225088247  1.08084225   3 0.003 #> 408 1030  0.265724277  1.08084225   2 0.002 #> 409 1031  0.306360308  1.08084225   5 0.005 #> 410 1032  0.346996339  1.08084225   1 0.001 #> 411 1033  0.387632370  1.08084225   1 0.001 #> 412 1034  0.428268401  1.08084225   1 0.001 #> 413 1035  0.468904432  1.08084225   5 0.005 #> 414 1037  0.550176493  1.08084225   3 0.003 #> 415 1054  0.042226108  1.11603408   2 0.002 #> 416 1055  0.082862139  1.11603408   3 0.003 #> 417 1056  0.123498170  1.11603408   2 0.002 #> 418 1057  0.164134200  1.11603408   2 0.002 #> 419 1058  0.204770231  1.11603408   3 0.003 #> 420 1059  0.245406262  1.11603408   1 0.001 #> 421 1060  0.286042293  1.11603408   1 0.001 #> 422 1061  0.326678324  1.11603408   3 0.003 #> 423 1062  0.367314354  1.11603408   1 0.001 #> 424 1063  0.407950385  1.11603408   1 0.001 #> 425 1064  0.448586416  1.11603408   4 0.004 #> 426 1065  0.489222447  1.11603408   4 0.004 #> 427 1066  0.529858478  1.11603408   2 0.002 #> 428 1085  0.062544123  1.15122592   1 0.001 #> 429 1086  0.103180154  1.15122592   6 0.006 #> 430 1087  0.143816185  1.15122592   1 0.001 #> 431 1088  0.184452216  1.15122592   2 0.002 #> 432 1089  0.225088247  1.15122592   3 0.003 #> 433 1090  0.265724277  1.15122592   1 0.001 #> 434 1091  0.306360308  1.15122592   1 0.001 #> 435 1092  0.346996339  1.15122592   1 0.001 #> 436 1093  0.387632370  1.15122592   1 0.001 #> 437 1095  0.468904432  1.15122592   1 0.001 #> 438 1096  0.509540462  1.15122592   1 0.001 #>  #> $trimesh_data #> # A tibble: 1,053 × 10 #>     from    to x_from y_from  x_to   y_to from_count to_count from_reindexed #>    <int> <int>  <dbl>  <dbl> <dbl>  <dbl>      <dbl>    <dbl>          <int> #>  1   157   158  0.164 0.0603 0.205 0.0603          1        3             13 #>  2   158   188  0.205 0.0603 0.184 0.0955          3        4             14 #>  3   129   158  0.225 0.0251 0.205 0.0603          3        3              4 #>  4   128   129  0.184 0.0251 0.225 0.0251          1        3              3 #>  5   217   218  0.164 0.131  0.205 0.131           1        3             38 #>  6   188   189  0.184 0.0955 0.225 0.0955          4        2             24 #>  7   130   159  0.266 0.0251 0.245 0.0603          5        3              5 #>  8   188   218  0.184 0.0955 0.205 0.131           4        3             24 #>  9   159   189  0.245 0.0603 0.225 0.0955          3        2             15 #> 10   129   130  0.225 0.0251 0.266 0.0251          3        5              4 #> # ℹ 1,043 more rows #> # ℹ 1 more variable: to_reindexed <int> #>  #> attr(,\"class\") #> [1] \"highd_vis_model\""},{"path":"https://jayanilakshika.github.io/quollr/reference/full_hex_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Hexagonal Coordinates — full_hex_grid","title":"Generate Hexagonal Coordinates — full_hex_grid","text":"function generates coordinates hexagons passing hexagonal centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/full_hex_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Hexagonal Coordinates — full_hex_grid","text":"","code":"full_hex_grid(hexdf_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/full_hex_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Hexagonal Coordinates — full_hex_grid","text":"hexdf_data dataset hexbin ID centroid coordinates.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/full_hex_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Hexagonal Coordinates — full_hex_grid","text":"tibble containing coordinates hexagons based hexagonal centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/full_hex_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Hexagonal Coordinates — full_hex_grid","text":"","code":"num_bins_x <- 4 shape_value <- 1.833091 hexbin_data_object <- extract_hexbin_centroids(nldr_df = s_curve_noise_umap, num_bins = num_bins_x, shape_val = shape_value) df_bin_centroids <- hexbin_data_object$hexdf_data full_centroid_df <- generate_full_grid_centroids(df_bin_centroids) full_hex_grid(full_centroid_df) #> # A tibble: 300 × 3 #>        x     y    id #>    <dbl> <dbl> <int> #>  1 -2.55 -5.29     1 #>  2 -2.55 -6.20     1 #>  3 -3.27 -6.65     1 #>  4 -3.99 -6.20     1 #>  5 -3.99 -5.29     1 #>  6 -3.27 -4.84     1 #>  7 -1.12 -5.29     2 #>  8 -1.12 -6.20     2 #>  9 -1.84 -6.65     2 #> 10 -2.55 -6.20     2 #> # ℹ 290 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Axes for Projection — gen_axes","title":"Generate Axes for Projection — gen_axes","text":"Generate Axes Projection","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Axes for Projection — gen_axes","text":"","code":"gen_axes(   proj,   limits = 1,   axis_pos_x = NULL,   axis_pos_y = NULL,   axis_labels,   threshold = 0 )"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Axes for Projection — gen_axes","text":"proj projection matrix data frame. limits Numeric value specifying axis limits (default: 1). axis_pos_x Optional numeric value x-axis position. axis_pos_y Optional numeric value y-axis position. axis_labels vector axis labels. threshold numeric threshold value (default: 0).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Axes for Projection — gen_axes","text":"modified projection added axis elements.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Axes for Projection — gen_axes","text":"","code":"projection_df <- cbind( c(-0.17353,-0.02906,0.19857,0.00037,0.00131,-0.05019,0.03371), c(-0.10551,0.14829,-0.02063,0.02658,-0.03150,0.19698,0.00044))  gen_axes(proj = projection_df, axis_labels = paste0(\"x\", 1:7)) #> $axes #>            x1         y1         x2         y2    distance #> x1 -0.6666667 -0.6666667 -0.6955883 -0.6842517 0.033848117 #> x2 -0.6666667 -0.6666667 -0.6715100 -0.6419517 0.025185097 #> x3 -0.6666667 -0.6666667 -0.6335717 -0.6701050 0.033273130 #> x4 -0.6666667 -0.6666667 -0.6666050 -0.6622367 0.004430429 #> x5 -0.6666667 -0.6666667 -0.6664483 -0.6719167 0.005254538 #> x6 -0.6666667 -0.6666667 -0.6750317 -0.6338367 0.033878933 #> x7 -0.6666667 -0.6666667 -0.6610483 -0.6665933 0.005618812 #>  #> $circle #>            c1         c2 #> 1  -0.5000000 -0.6666667 #> 2  -0.5013683 -0.6453538 #> 3  -0.5054509 -0.6243909 #> 4  -0.5121805 -0.6041222 #> 5  -0.5214469 -0.5848804 #> 6  -0.5330977 -0.5669816 #> 7  -0.5469418 -0.5507196 #> 8  -0.5627517 -0.5363614 #> 9  -0.5802679 -0.5241429 #> 10 -0.5992028 -0.5142646 #> 11 -0.6192454 -0.5068887 #> 12 -0.6400667 -0.5021364 #> 13 -0.6613247 -0.5000856 #> 14 -0.6826705 -0.5007701 #> 15 -0.7037535 -0.5041787 #> 16 -0.7242275 -0.5102553 #> 17 -0.7437564 -0.5189001 #> 18 -0.7620194 -0.5299713 #> 19 -0.7787168 -0.5432870 #> 20 -0.7935743 -0.5586286 #> 21 -0.8063480 -0.5757442 #> 22 -0.8168281 -0.5943527 #> 23 -0.8248426 -0.6141486 #> 24 -0.8302599 -0.6348069 #> 25 -0.8329909 -0.6559883 #> 26 -0.8329909 -0.6773450 #> 27 -0.8302599 -0.6985264 #> 28 -0.8248426 -0.7191847 #> 29 -0.8168281 -0.7389806 #> 30 -0.8063480 -0.7575892 #> 31 -0.7935743 -0.7747047 #> 32 -0.7787168 -0.7900463 #> 33 -0.7620194 -0.8033620 #> 34 -0.7437564 -0.8144332 #> 35 -0.7242275 -0.8230781 #> 36 -0.7037535 -0.8291547 #> 37 -0.6826705 -0.8325632 #> 38 -0.6613247 -0.8332477 #> 39 -0.6400667 -0.8311970 #> 40 -0.6192454 -0.8264446 #> 41 -0.5992028 -0.8190688 #> 42 -0.5802679 -0.8091905 #> 43 -0.5627517 -0.7969719 #> 44 -0.5469418 -0.7826138 #> 45 -0.5330977 -0.7663518 #> 46 -0.5214469 -0.7484529 #> 47 -0.5121805 -0.7292112 #> 48 -0.5054509 -0.7089424 #> 49 -0.5013683 -0.6879795 #> 50 -0.5000000 -0.6666667 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate centroid coordinate — gen_centroids","title":"Generate centroid coordinate — gen_centroids","text":"function generates possible centroids hexagonal grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate centroid coordinate — gen_centroids","text":"","code":"gen_centroids(nldr_scaled_obj, b1 = 30, q = 0.1)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate centroid coordinate — gen_centroids","text":"nldr_scaled_obj list tibble contains scaled first second columns NLDR data, numeric vectors representing limits original NLDR data. b1 Number bins along x axis. q buffer amount proportion data range.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate centroid coordinate — gen_centroids","text":"tibble contains hexIDs (h), x y coordinates (c_x, c_y respectively) hexagon bin centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate centroid coordinate — gen_centroids","text":"","code":"gen_centroids(nldr_scaled_obj = scurve_model_obj$nldr_scaled_obj, b1 = 30, q = 0.1) #> # A tibble: 1,200 × 3 #>        h     c_x    c_y #>    <int>   <dbl>  <dbl> #>  1     1 -0.1    -0.116 #>  2     2 -0.0594 -0.116 #>  3     3 -0.0187 -0.116 #>  4     4  0.0219 -0.116 #>  5     5  0.0625 -0.116 #>  6     6  0.103  -0.116 #>  7     7  0.144  -0.116 #>  8     8  0.184  -0.116 #>  9     9  0.225  -0.116 #> 10    10  0.266  -0.116 #> # ℹ 1,190 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a design to layout 2-D representations — gen_design","title":"Generate a design to layout 2-D representations — gen_design","text":"function generates design can passed `plot_layout()` arrange 2-D layouts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a design to layout 2-D representations — gen_design","text":"","code":"gen_design(n_right, ncol_right = 2)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a design to layout 2-D representations — gen_design","text":"n_right number plots right side. ncol_right number columns right side.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a design to layout 2-D representations — gen_design","text":"patchwork area object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a design to layout 2-D representations — gen_design","text":"","code":"gen_design(n_right = 8, ncol_right = 2) #> 9 patch areas, spanning 3 columns and 4 rows #>  #>     t l b r #> 1:  1 1 4 1 #> 2:  1 2 1 2 #> 3:  1 3 1 3 #> 4:  2 2 2 2 #> 5:  2 3 2 3 #> 6:  3 2 3 2 #> 7:  3 3 3 3 #> 8:  4 2 4 2 #> 9:  4 3 4 3"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_diffbin1_errors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate erros and MSE for different bin widths — gen_diffbin1_errors","title":"Generate erros and MSE for different bin widths — gen_diffbin1_errors","text":"function augments dataset predictions error metrics obtained nonlinear dimension reduction (NLDR) model.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_diffbin1_errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate erros and MSE for different bin widths — gen_diffbin1_errors","text":"","code":"gen_diffbin1_errors(highd_data, nldr_data, hd_thresh = 1, bin1_vec = NULL)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_diffbin1_errors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate erros and MSE for different bin widths — gen_diffbin1_errors","text":"highd_data tibble contains high-dimensional data unique identifier. nldr_data tibble contains embedding unique identifier. hd_thresh (default: 1) numeric value using filter high-density hexagons. bin1_vec numeric vector contains range b1 values.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_diffbin1_errors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate erros and MSE for different bin widths — gen_diffbin1_errors","text":"tibble containing augmented data predictions, error metrics, absolute error metrics.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_diffbin1_errors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate erros and MSE for different bin widths — gen_diffbin1_errors","text":"","code":"scurve_sample <- scurve |> head(100) scurve_umap_sample <- scurve_umap |> head(100) gen_diffbin1_errors(highd_data = scurve_sample, nldr_data = scurve_umap_sample) #> ✔ Model generated successfully!!! #> ✔ Model generated successfully!!! #> ✔ Model generated successfully!!! #> ✔ Model generated successfully!!! #> ✔ Model generated successfully!!! #>      Error       HBE b1 b2   b  m   a1   a2      d_bar #> 1 56.41496 0.3864918  5  7  35 18 0.26 0.23 0.06084011 #> 2 48.44832 0.3431850  6  8  48 21 0.22 0.19 0.05897765 #> 3 45.81080 0.3174797  7  9  63 25 0.20 0.17 0.05378166 #> 4 41.79401 0.2989940  8 11  88 28 0.16 0.14 0.06200255 #> 5 42.09304 0.3126706  9 12 108 29 0.14 0.12 0.06591885"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate edge information — gen_edges","title":"Generate edge information — gen_edges","text":"function generates edge information given triangular object, including coordinates vertices -relationships vertices.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate edge information — gen_edges","text":"","code":"gen_edges(tri_object, a1)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate edge information — gen_edges","text":"tri_object triangular object generate edge information. a1 numeric value bin width.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate edge information — gen_edges","text":"tibble contains edge information, including -relationships corresponding x y coordinates.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate edge information — gen_edges","text":"","code":"all_centroids_df <- scurve_model_obj$hb_obj$centroids counts_data <- scurve_model_obj$hb_obj$std_cts umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id df_bin_centroids <- merge_hexbin_centroids(counts_data = counts_data, centroids_data = all_centroids_df) tr1_object <- tri_bin_centroids(centroids_data = df_bin_centroids) gen_edges(tri_object = tr1_object, a1 = scurve_model_obj$hb_obj$a1) #> # A tibble: 827 × 8 #>     from    to  x_from  y_from    x_to    y_to from_count to_count #>    <int> <int>   <dbl>   <dbl>   <dbl>   <dbl>      <dbl>    <dbl> #>  1     1     2 -0.1    -0.116  -0.0166 -0.116           0        0 #>  2    16    17 -0.0583 -0.0434  0.0251 -0.0434          0        0 #>  3    16    32 -0.0583 -0.0434 -0.0166  0.0288          0        0 #>  4     3    17  0.0668 -0.116   0.0251 -0.0434          0        0 #>  5    32    33 -0.0166  0.0288  0.0668  0.0288          0        0 #>  6    17    18  0.0251 -0.0434  0.109  -0.0434          0        0 #>  7    31    46 -0.1     0.0288 -0.0583  0.101           0        0 #>  8    32    47 -0.0166  0.0288  0.0251  0.101           0        0 #>  9    18    34  0.109  -0.0434  0.150   0.0288          0        1 #> 10    18    19  0.109  -0.0434  0.192  -0.0434          0        0 #> # ℹ 817 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate hexagonal polygon coordinates — gen_hex_coord","title":"Generate hexagonal polygon coordinates — gen_hex_coord","text":"function generates coordinates hexagons passing hexagonal centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate hexagonal polygon coordinates — gen_hex_coord","text":"","code":"gen_hex_coord(centroids_data, a1)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate hexagonal polygon coordinates — gen_hex_coord","text":"centroids_data dataset hexagonal bin IDs centroid coordinates. a1 width hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate hexagonal polygon coordinates — gen_hex_coord","text":"tibble contains hexagon id (h), x y coordinates (x, y) hexagons.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate hexagonal polygon coordinates — gen_hex_coord","text":"","code":"width <- scurve_model_obj$hb_obj$a1 all_centroids_df <- scurve_model_obj$hb_obj$centroids gen_hex_coord(centroids_data = all_centroids_df, a1 = width) #>        h          x            y #> 1      1 -0.1000000 -0.067522894 #> 2      1 -0.1417054 -0.091601518 #> 3      1 -0.1417054 -0.139758766 #> 4      1 -0.1000000 -0.163837390 #> 5      1 -0.0582946 -0.139758766 #> 6      1 -0.0582946 -0.091601518 #> 7      2 -0.0165892 -0.067522894 #> 8      2 -0.0582946 -0.091601518 #> 9      2 -0.0582946 -0.139758766 #> 10     2 -0.0165892 -0.163837390 #> 11     2  0.0251162 -0.139758766 #> 12     2  0.0251162 -0.091601518 #> 13     3  0.0668216 -0.067522894 #> 14     3  0.0251162 -0.091601518 #> 15     3  0.0251162 -0.139758766 #> 16     3  0.0668216 -0.163837390 #> 17     3  0.1085270 -0.139758766 #> 18     3  0.1085270 -0.091601518 #> 19     4  0.1502324 -0.067522894 #> 20     4  0.1085270 -0.091601518 #> 21     4  0.1085270 -0.139758766 #> 22     4  0.1502324 -0.163837390 #> 23     4  0.1919378 -0.139758766 #> 24     4  0.1919378 -0.091601518 #> 25     5  0.2336432 -0.067522894 #> 26     5  0.1919378 -0.091601518 #> 27     5  0.1919378 -0.139758766 #> 28     5  0.2336432 -0.163837390 #> 29     5  0.2753486 -0.139758766 #> 30     5  0.2753486 -0.091601518 #> 31     6  0.3170540 -0.067522894 #> 32     6  0.2753486 -0.091601518 #> 33     6  0.2753486 -0.139758766 #> 34     6  0.3170540 -0.163837390 #> 35     6  0.3587594 -0.139758766 #> 36     6  0.3587594 -0.091601518 #> 37     7  0.4004648 -0.067522894 #> 38     7  0.3587594 -0.091601518 #> 39     7  0.3587594 -0.139758766 #> 40     7  0.4004648 -0.163837390 #> 41     7  0.4421702 -0.139758766 #> 42     7  0.4421702 -0.091601518 #> 43     8  0.4838756 -0.067522894 #> 44     8  0.4421702 -0.091601518 #> 45     8  0.4421702 -0.139758766 #> 46     8  0.4838756 -0.163837390 #> 47     8  0.5255810 -0.139758766 #> 48     8  0.5255810 -0.091601518 #> 49     9  0.5672864 -0.067522894 #> 50     9  0.5255810 -0.091601518 #> 51     9  0.5255810 -0.139758766 #> 52     9  0.5672864 -0.163837390 #> 53     9  0.6089918 -0.139758766 #> 54     9  0.6089918 -0.091601518 #> 55    10  0.6506972 -0.067522894 #> 56    10  0.6089918 -0.091601518 #> 57    10  0.6089918 -0.139758766 #> 58    10  0.6506972 -0.163837390 #> 59    10  0.6924026 -0.139758766 #> 60    10  0.6924026 -0.091601518 #> 61    11  0.7341080 -0.067522894 #> 62    11  0.6924026 -0.091601518 #> 63    11  0.6924026 -0.139758766 #> 64    11  0.7341080 -0.163837390 #> 65    11  0.7758134 -0.139758766 #> 66    11  0.7758134 -0.091601518 #> 67    12  0.8175188 -0.067522894 #> 68    12  0.7758134 -0.091601518 #> 69    12  0.7758134 -0.139758766 #> 70    12  0.8175188 -0.163837390 #> 71    12  0.8592242 -0.139758766 #> 72    12  0.8592242 -0.091601518 #> 73    13  0.9009296 -0.067522894 #> 74    13  0.8592242 -0.091601518 #> 75    13  0.8592242 -0.139758766 #> 76    13  0.9009296 -0.163837390 #> 77    13  0.9426350 -0.139758766 #> 78    13  0.9426350 -0.091601518 #> 79    14  0.9843404 -0.067522894 #> 80    14  0.9426350 -0.091601518 #> 81    14  0.9426350 -0.139758766 #> 82    14  0.9843404 -0.163837390 #> 83    14  1.0260458 -0.139758766 #> 84    14  1.0260458 -0.091601518 #> 85    15  1.0677512 -0.067522894 #> 86    15  1.0260458 -0.091601518 #> 87    15  1.0260458 -0.139758766 #> 88    15  1.0677512 -0.163837390 #> 89    15  1.1094566 -0.139758766 #> 90    15  1.1094566 -0.091601518 #> 91    16 -0.0582946  0.004712977 #> 92    16 -0.1000000 -0.019365646 #> 93    16 -0.1000000 -0.067522894 #> 94    16 -0.0582946 -0.091601518 #> 95    16 -0.0165892 -0.067522894 #> 96    16 -0.0165892 -0.019365646 #> 97    17  0.0251162  0.004712977 #> 98    17 -0.0165892 -0.019365646 #> 99    17 -0.0165892 -0.067522894 #> 100   17  0.0251162 -0.091601518 #> 101   17  0.0668216 -0.067522894 #> 102   17  0.0668216 -0.019365646 #> 103   18  0.1085270  0.004712977 #> 104   18  0.0668216 -0.019365646 #> 105   18  0.0668216 -0.067522894 #> 106   18  0.1085270 -0.091601518 #> 107   18  0.1502324 -0.067522894 #> 108   18  0.1502324 -0.019365646 #> 109   19  0.1919378  0.004712977 #> 110   19  0.1502324 -0.019365646 #> 111   19  0.1502324 -0.067522894 #> 112   19  0.1919378 -0.091601518 #> 113   19  0.2336432 -0.067522894 #> 114   19  0.2336432 -0.019365646 #> 115   20  0.2753486  0.004712977 #> 116   20  0.2336432 -0.019365646 #> 117   20  0.2336432 -0.067522894 #> 118   20  0.2753486 -0.091601518 #> 119   20  0.3170540 -0.067522894 #> 120   20  0.3170540 -0.019365646 #> 121   21  0.3587594  0.004712977 #> 122   21  0.3170540 -0.019365646 #> 123   21  0.3170540 -0.067522894 #> 124   21  0.3587594 -0.091601518 #> 125   21  0.4004648 -0.067522894 #> 126   21  0.4004648 -0.019365646 #> 127   22  0.4421702  0.004712977 #> 128   22  0.4004648 -0.019365646 #> 129   22  0.4004648 -0.067522894 #> 130   22  0.4421702 -0.091601518 #> 131   22  0.4838756 -0.067522894 #> 132   22  0.4838756 -0.019365646 #> 133   23  0.5255810  0.004712977 #> 134   23  0.4838756 -0.019365646 #> 135   23  0.4838756 -0.067522894 #> 136   23  0.5255810 -0.091601518 #> 137   23  0.5672864 -0.067522894 #> 138   23  0.5672864 -0.019365646 #> 139   24  0.6089918  0.004712977 #> 140   24  0.5672864 -0.019365646 #> 141   24  0.5672864 -0.067522894 #> 142   24  0.6089918 -0.091601518 #> 143   24  0.6506972 -0.067522894 #> 144   24  0.6506972 -0.019365646 #> 145   25  0.6924026  0.004712977 #> 146   25  0.6506972 -0.019365646 #> 147   25  0.6506972 -0.067522894 #> 148   25  0.6924026 -0.091601518 #> 149   25  0.7341080 -0.067522894 #> 150   25  0.7341080 -0.019365646 #> 151   26  0.7758134  0.004712977 #> 152   26  0.7341080 -0.019365646 #> 153   26  0.7341080 -0.067522894 #> 154   26  0.7758134 -0.091601518 #> 155   26  0.8175188 -0.067522894 #> 156   26  0.8175188 -0.019365646 #> 157   27  0.8592242  0.004712977 #> 158   27  0.8175188 -0.019365646 #> 159   27  0.8175188 -0.067522894 #> 160   27  0.8592242 -0.091601518 #> 161   27  0.9009296 -0.067522894 #> 162   27  0.9009296 -0.019365646 #> 163   28  0.9426350  0.004712977 #> 164   28  0.9009296 -0.019365646 #> 165   28  0.9009296 -0.067522894 #> 166   28  0.9426350 -0.091601518 #> 167   28  0.9843404 -0.067522894 #> 168   28  0.9843404 -0.019365646 #> 169   29  1.0260458  0.004712977 #> 170   29  0.9843404 -0.019365646 #> 171   29  0.9843404 -0.067522894 #> 172   29  1.0260458 -0.091601518 #> 173   29  1.0677512 -0.067522894 #> 174   29  1.0677512 -0.019365646 #> 175   30  1.1094566  0.004712977 #> 176   30  1.0677512 -0.019365646 #> 177   30  1.0677512 -0.067522894 #> 178   30  1.1094566 -0.091601518 #> 179   30  1.1511620 -0.067522894 #> 180   30  1.1511620 -0.019365646 #> 181   31 -0.1000000  0.076948849 #> 182   31 -0.1417054  0.052870225 #> 183   31 -0.1417054  0.004712977 #> 184   31 -0.1000000 -0.019365646 #> 185   31 -0.0582946  0.004712977 #> 186   31 -0.0582946  0.052870225 #> 187   32 -0.0165892  0.076948849 #> 188   32 -0.0582946  0.052870225 #> 189   32 -0.0582946  0.004712977 #> 190   32 -0.0165892 -0.019365646 #> 191   32  0.0251162  0.004712977 #> 192   32  0.0251162  0.052870225 #> 193   33  0.0668216  0.076948849 #> 194   33  0.0251162  0.052870225 #> 195   33  0.0251162  0.004712977 #> 196   33  0.0668216 -0.019365646 #> 197   33  0.1085270  0.004712977 #> 198   33  0.1085270  0.052870225 #> 199   34  0.1502324  0.076948849 #> 200   34  0.1085270  0.052870225 #> 201   34  0.1085270  0.004712977 #> 202   34  0.1502324 -0.019365646 #> 203   34  0.1919378  0.004712977 #> 204   34  0.1919378  0.052870225 #> 205   35  0.2336432  0.076948849 #> 206   35  0.1919378  0.052870225 #> 207   35  0.1919378  0.004712977 #> 208   35  0.2336432 -0.019365646 #> 209   35  0.2753486  0.004712977 #> 210   35  0.2753486  0.052870225 #> 211   36  0.3170540  0.076948849 #> 212   36  0.2753486  0.052870225 #> 213   36  0.2753486  0.004712977 #> 214   36  0.3170540 -0.019365646 #> 215   36  0.3587594  0.004712977 #> 216   36  0.3587594  0.052870225 #> 217   37  0.4004648  0.076948849 #> 218   37  0.3587594  0.052870225 #> 219   37  0.3587594  0.004712977 #> 220   37  0.4004648 -0.019365646 #> 221   37  0.4421702  0.004712977 #> 222   37  0.4421702  0.052870225 #> 223   38  0.4838756  0.076948849 #> 224   38  0.4421702  0.052870225 #> 225   38  0.4421702  0.004712977 #> 226   38  0.4838756 -0.019365646 #> 227   38  0.5255810  0.004712977 #> 228   38  0.5255810  0.052870225 #> 229   39  0.5672864  0.076948849 #> 230   39  0.5255810  0.052870225 #> 231   39  0.5255810  0.004712977 #> 232   39  0.5672864 -0.019365646 #> 233   39  0.6089918  0.004712977 #> 234   39  0.6089918  0.052870225 #> 235   40  0.6506972  0.076948849 #> 236   40  0.6089918  0.052870225 #> 237   40  0.6089918  0.004712977 #> 238   40  0.6506972 -0.019365646 #> 239   40  0.6924026  0.004712977 #> 240   40  0.6924026  0.052870225 #> 241   41  0.7341080  0.076948849 #> 242   41  0.6924026  0.052870225 #> 243   41  0.6924026  0.004712977 #> 244   41  0.7341080 -0.019365646 #> 245   41  0.7758134  0.004712977 #> 246   41  0.7758134  0.052870225 #> 247   42  0.8175188  0.076948849 #> 248   42  0.7758134  0.052870225 #> 249   42  0.7758134  0.004712977 #> 250   42  0.8175188 -0.019365646 #> 251   42  0.8592242  0.004712977 #> 252   42  0.8592242  0.052870225 #> 253   43  0.9009296  0.076948849 #> 254   43  0.8592242  0.052870225 #> 255   43  0.8592242  0.004712977 #> 256   43  0.9009296 -0.019365646 #> 257   43  0.9426350  0.004712977 #> 258   43  0.9426350  0.052870225 #> 259   44  0.9843404  0.076948849 #> 260   44  0.9426350  0.052870225 #> 261   44  0.9426350  0.004712977 #> 262   44  0.9843404 -0.019365646 #> 263   44  1.0260458  0.004712977 #> 264   44  1.0260458  0.052870225 #> 265   45  1.0677512  0.076948849 #> 266   45  1.0260458  0.052870225 #> 267   45  1.0260458  0.004712977 #> 268   45  1.0677512 -0.019365646 #> 269   45  1.1094566  0.004712977 #> 270   45  1.1094566  0.052870225 #> 271   46 -0.0582946  0.149184721 #> 272   46 -0.1000000  0.125106097 #> 273   46 -0.1000000  0.076948849 #> 274   46 -0.0582946  0.052870225 #> 275   46 -0.0165892  0.076948849 #> 276   46 -0.0165892  0.125106097 #> 277   47  0.0251162  0.149184721 #> 278   47 -0.0165892  0.125106097 #> 279   47 -0.0165892  0.076948849 #> 280   47  0.0251162  0.052870225 #> 281   47  0.0668216  0.076948849 #> 282   47  0.0668216  0.125106097 #> 283   48  0.1085270  0.149184721 #> 284   48  0.0668216  0.125106097 #> 285   48  0.0668216  0.076948849 #> 286   48  0.1085270  0.052870225 #> 287   48  0.1502324  0.076948849 #> 288   48  0.1502324  0.125106097 #> 289   49  0.1919378  0.149184721 #> 290   49  0.1502324  0.125106097 #> 291   49  0.1502324  0.076948849 #> 292   49  0.1919378  0.052870225 #> 293   49  0.2336432  0.076948849 #> 294   49  0.2336432  0.125106097 #> 295   50  0.2753486  0.149184721 #> 296   50  0.2336432  0.125106097 #> 297   50  0.2336432  0.076948849 #> 298   50  0.2753486  0.052870225 #> 299   50  0.3170540  0.076948849 #> 300   50  0.3170540  0.125106097 #> 301   51  0.3587594  0.149184721 #> 302   51  0.3170540  0.125106097 #> 303   51  0.3170540  0.076948849 #> 304   51  0.3587594  0.052870225 #> 305   51  0.4004648  0.076948849 #> 306   51  0.4004648  0.125106097 #> 307   52  0.4421702  0.149184721 #> 308   52  0.4004648  0.125106097 #> 309   52  0.4004648  0.076948849 #> 310   52  0.4421702  0.052870225 #> 311   52  0.4838756  0.076948849 #> 312   52  0.4838756  0.125106097 #> 313   53  0.5255810  0.149184721 #> 314   53  0.4838756  0.125106097 #> 315   53  0.4838756  0.076948849 #> 316   53  0.5255810  0.052870225 #> 317   53  0.5672864  0.076948849 #> 318   53  0.5672864  0.125106097 #> 319   54  0.6089918  0.149184721 #> 320   54  0.5672864  0.125106097 #> 321   54  0.5672864  0.076948849 #> 322   54  0.6089918  0.052870225 #> 323   54  0.6506972  0.076948849 #> 324   54  0.6506972  0.125106097 #> 325   55  0.6924026  0.149184721 #> 326   55  0.6506972  0.125106097 #> 327   55  0.6506972  0.076948849 #> 328   55  0.6924026  0.052870225 #> 329   55  0.7341080  0.076948849 #> 330   55  0.7341080  0.125106097 #> 331   56  0.7758134  0.149184721 #> 332   56  0.7341080  0.125106097 #> 333   56  0.7341080  0.076948849 #> 334   56  0.7758134  0.052870225 #> 335   56  0.8175188  0.076948849 #> 336   56  0.8175188  0.125106097 #> 337   57  0.8592242  0.149184721 #> 338   57  0.8175188  0.125106097 #> 339   57  0.8175188  0.076948849 #> 340   57  0.8592242  0.052870225 #> 341   57  0.9009296  0.076948849 #> 342   57  0.9009296  0.125106097 #> 343   58  0.9426350  0.149184721 #> 344   58  0.9009296  0.125106097 #> 345   58  0.9009296  0.076948849 #> 346   58  0.9426350  0.052870225 #> 347   58  0.9843404  0.076948849 #> 348   58  0.9843404  0.125106097 #> 349   59  1.0260458  0.149184721 #> 350   59  0.9843404  0.125106097 #> 351   59  0.9843404  0.076948849 #> 352   59  1.0260458  0.052870225 #> 353   59  1.0677512  0.076948849 #> 354   59  1.0677512  0.125106097 #> 355   60  1.1094566  0.149184721 #> 356   60  1.0677512  0.125106097 #> 357   60  1.0677512  0.076948849 #> 358   60  1.1094566  0.052870225 #> 359   60  1.1511620  0.076948849 #> 360   60  1.1511620  0.125106097 #> 361   61 -0.1000000  0.221420593 #> 362   61 -0.1417054  0.197341969 #> 363   61 -0.1417054  0.149184721 #> 364   61 -0.1000000  0.125106097 #> 365   61 -0.0582946  0.149184721 #> 366   61 -0.0582946  0.197341969 #> 367   62 -0.0165892  0.221420593 #> 368   62 -0.0582946  0.197341969 #> 369   62 -0.0582946  0.149184721 #> 370   62 -0.0165892  0.125106097 #> 371   62  0.0251162  0.149184721 #> 372   62  0.0251162  0.197341969 #> 373   63  0.0668216  0.221420593 #> 374   63  0.0251162  0.197341969 #> 375   63  0.0251162  0.149184721 #> 376   63  0.0668216  0.125106097 #> 377   63  0.1085270  0.149184721 #> 378   63  0.1085270  0.197341969 #> 379   64  0.1502324  0.221420593 #> 380   64  0.1085270  0.197341969 #> 381   64  0.1085270  0.149184721 #> 382   64  0.1502324  0.125106097 #> 383   64  0.1919378  0.149184721 #> 384   64  0.1919378  0.197341969 #> 385   65  0.2336432  0.221420593 #> 386   65  0.1919378  0.197341969 #> 387   65  0.1919378  0.149184721 #> 388   65  0.2336432  0.125106097 #> 389   65  0.2753486  0.149184721 #> 390   65  0.2753486  0.197341969 #> 391   66  0.3170540  0.221420593 #> 392   66  0.2753486  0.197341969 #> 393   66  0.2753486  0.149184721 #> 394   66  0.3170540  0.125106097 #> 395   66  0.3587594  0.149184721 #> 396   66  0.3587594  0.197341969 #> 397   67  0.4004648  0.221420593 #> 398   67  0.3587594  0.197341969 #> 399   67  0.3587594  0.149184721 #> 400   67  0.4004648  0.125106097 #> 401   67  0.4421702  0.149184721 #> 402   67  0.4421702  0.197341969 #> 403   68  0.4838756  0.221420593 #> 404   68  0.4421702  0.197341969 #> 405   68  0.4421702  0.149184721 #> 406   68  0.4838756  0.125106097 #> 407   68  0.5255810  0.149184721 #> 408   68  0.5255810  0.197341969 #> 409   69  0.5672864  0.221420593 #> 410   69  0.5255810  0.197341969 #> 411   69  0.5255810  0.149184721 #> 412   69  0.5672864  0.125106097 #> 413   69  0.6089918  0.149184721 #> 414   69  0.6089918  0.197341969 #> 415   70  0.6506972  0.221420593 #> 416   70  0.6089918  0.197341969 #> 417   70  0.6089918  0.149184721 #> 418   70  0.6506972  0.125106097 #> 419   70  0.6924026  0.149184721 #> 420   70  0.6924026  0.197341969 #> 421   71  0.7341080  0.221420593 #> 422   71  0.6924026  0.197341969 #> 423   71  0.6924026  0.149184721 #> 424   71  0.7341080  0.125106097 #> 425   71  0.7758134  0.149184721 #> 426   71  0.7758134  0.197341969 #> 427   72  0.8175188  0.221420593 #> 428   72  0.7758134  0.197341969 #> 429   72  0.7758134  0.149184721 #> 430   72  0.8175188  0.125106097 #> 431   72  0.8592242  0.149184721 #> 432   72  0.8592242  0.197341969 #> 433   73  0.9009296  0.221420593 #> 434   73  0.8592242  0.197341969 #> 435   73  0.8592242  0.149184721 #> 436   73  0.9009296  0.125106097 #> 437   73  0.9426350  0.149184721 #> 438   73  0.9426350  0.197341969 #> 439   74  0.9843404  0.221420593 #> 440   74  0.9426350  0.197341969 #> 441   74  0.9426350  0.149184721 #> 442   74  0.9843404  0.125106097 #> 443   74  1.0260458  0.149184721 #> 444   74  1.0260458  0.197341969 #> 445   75  1.0677512  0.221420593 #> 446   75  1.0260458  0.197341969 #> 447   75  1.0260458  0.149184721 #> 448   75  1.0677512  0.125106097 #> 449   75  1.1094566  0.149184721 #> 450   75  1.1094566  0.197341969 #> 451   76 -0.0582946  0.293656465 #> 452   76 -0.1000000  0.269577841 #> 453   76 -0.1000000  0.221420593 #> 454   76 -0.0582946  0.197341969 #> 455   76 -0.0165892  0.221420593 #> 456   76 -0.0165892  0.269577841 #> 457   77  0.0251162  0.293656465 #> 458   77 -0.0165892  0.269577841 #> 459   77 -0.0165892  0.221420593 #> 460   77  0.0251162  0.197341969 #> 461   77  0.0668216  0.221420593 #> 462   77  0.0668216  0.269577841 #> 463   78  0.1085270  0.293656465 #> 464   78  0.0668216  0.269577841 #> 465   78  0.0668216  0.221420593 #> 466   78  0.1085270  0.197341969 #> 467   78  0.1502324  0.221420593 #> 468   78  0.1502324  0.269577841 #> 469   79  0.1919378  0.293656465 #> 470   79  0.1502324  0.269577841 #> 471   79  0.1502324  0.221420593 #> 472   79  0.1919378  0.197341969 #> 473   79  0.2336432  0.221420593 #> 474   79  0.2336432  0.269577841 #> 475   80  0.2753486  0.293656465 #> 476   80  0.2336432  0.269577841 #> 477   80  0.2336432  0.221420593 #> 478   80  0.2753486  0.197341969 #> 479   80  0.3170540  0.221420593 #> 480   80  0.3170540  0.269577841 #> 481   81  0.3587594  0.293656465 #> 482   81  0.3170540  0.269577841 #> 483   81  0.3170540  0.221420593 #> 484   81  0.3587594  0.197341969 #> 485   81  0.4004648  0.221420593 #> 486   81  0.4004648  0.269577841 #> 487   82  0.4421702  0.293656465 #> 488   82  0.4004648  0.269577841 #> 489   82  0.4004648  0.221420593 #> 490   82  0.4421702  0.197341969 #> 491   82  0.4838756  0.221420593 #> 492   82  0.4838756  0.269577841 #> 493   83  0.5255810  0.293656465 #> 494   83  0.4838756  0.269577841 #> 495   83  0.4838756  0.221420593 #> 496   83  0.5255810  0.197341969 #> 497   83  0.5672864  0.221420593 #> 498   83  0.5672864  0.269577841 #> 499   84  0.6089918  0.293656465 #> 500   84  0.5672864  0.269577841 #> 501   84  0.5672864  0.221420593 #> 502   84  0.6089918  0.197341969 #> 503   84  0.6506972  0.221420593 #> 504   84  0.6506972  0.269577841 #> 505   85  0.6924026  0.293656465 #> 506   85  0.6506972  0.269577841 #> 507   85  0.6506972  0.221420593 #> 508   85  0.6924026  0.197341969 #> 509   85  0.7341080  0.221420593 #> 510   85  0.7341080  0.269577841 #> 511   86  0.7758134  0.293656465 #> 512   86  0.7341080  0.269577841 #> 513   86  0.7341080  0.221420593 #> 514   86  0.7758134  0.197341969 #> 515   86  0.8175188  0.221420593 #> 516   86  0.8175188  0.269577841 #> 517   87  0.8592242  0.293656465 #> 518   87  0.8175188  0.269577841 #> 519   87  0.8175188  0.221420593 #> 520   87  0.8592242  0.197341969 #> 521   87  0.9009296  0.221420593 #> 522   87  0.9009296  0.269577841 #> 523   88  0.9426350  0.293656465 #> 524   88  0.9009296  0.269577841 #> 525   88  0.9009296  0.221420593 #> 526   88  0.9426350  0.197341969 #> 527   88  0.9843404  0.221420593 #> 528   88  0.9843404  0.269577841 #> 529   89  1.0260458  0.293656465 #> 530   89  0.9843404  0.269577841 #> 531   89  0.9843404  0.221420593 #> 532   89  1.0260458  0.197341969 #> 533   89  1.0677512  0.221420593 #> 534   89  1.0677512  0.269577841 #> 535   90  1.1094566  0.293656465 #> 536   90  1.0677512  0.269577841 #> 537   90  1.0677512  0.221420593 #> 538   90  1.1094566  0.197341969 #> 539   90  1.1511620  0.221420593 #> 540   90  1.1511620  0.269577841 #> 541   91 -0.1000000  0.365892337 #> 542   91 -0.1417054  0.341813713 #> 543   91 -0.1417054  0.293656465 #> 544   91 -0.1000000  0.269577841 #> 545   91 -0.0582946  0.293656465 #> 546   91 -0.0582946  0.341813713 #> 547   92 -0.0165892  0.365892337 #> 548   92 -0.0582946  0.341813713 #> 549   92 -0.0582946  0.293656465 #> 550   92 -0.0165892  0.269577841 #> 551   92  0.0251162  0.293656465 #> 552   92  0.0251162  0.341813713 #> 553   93  0.0668216  0.365892337 #> 554   93  0.0251162  0.341813713 #> 555   93  0.0251162  0.293656465 #> 556   93  0.0668216  0.269577841 #> 557   93  0.1085270  0.293656465 #> 558   93  0.1085270  0.341813713 #> 559   94  0.1502324  0.365892337 #> 560   94  0.1085270  0.341813713 #> 561   94  0.1085270  0.293656465 #> 562   94  0.1502324  0.269577841 #> 563   94  0.1919378  0.293656465 #> 564   94  0.1919378  0.341813713 #> 565   95  0.2336432  0.365892337 #> 566   95  0.1919378  0.341813713 #> 567   95  0.1919378  0.293656465 #> 568   95  0.2336432  0.269577841 #> 569   95  0.2753486  0.293656465 #> 570   95  0.2753486  0.341813713 #> 571   96  0.3170540  0.365892337 #> 572   96  0.2753486  0.341813713 #> 573   96  0.2753486  0.293656465 #> 574   96  0.3170540  0.269577841 #> 575   96  0.3587594  0.293656465 #> 576   96  0.3587594  0.341813713 #> 577   97  0.4004648  0.365892337 #> 578   97  0.3587594  0.341813713 #> 579   97  0.3587594  0.293656465 #> 580   97  0.4004648  0.269577841 #> 581   97  0.4421702  0.293656465 #> 582   97  0.4421702  0.341813713 #> 583   98  0.4838756  0.365892337 #> 584   98  0.4421702  0.341813713 #> 585   98  0.4421702  0.293656465 #> 586   98  0.4838756  0.269577841 #> 587   98  0.5255810  0.293656465 #> 588   98  0.5255810  0.341813713 #> 589   99  0.5672864  0.365892337 #> 590   99  0.5255810  0.341813713 #> 591   99  0.5255810  0.293656465 #> 592   99  0.5672864  0.269577841 #> 593   99  0.6089918  0.293656465 #> 594   99  0.6089918  0.341813713 #> 595  100  0.6506972  0.365892337 #> 596  100  0.6089918  0.341813713 #> 597  100  0.6089918  0.293656465 #> 598  100  0.6506972  0.269577841 #> 599  100  0.6924026  0.293656465 #> 600  100  0.6924026  0.341813713 #> 601  101  0.7341080  0.365892337 #> 602  101  0.6924026  0.341813713 #> 603  101  0.6924026  0.293656465 #> 604  101  0.7341080  0.269577841 #> 605  101  0.7758134  0.293656465 #> 606  101  0.7758134  0.341813713 #> 607  102  0.8175188  0.365892337 #> 608  102  0.7758134  0.341813713 #> 609  102  0.7758134  0.293656465 #> 610  102  0.8175188  0.269577841 #> 611  102  0.8592242  0.293656465 #> 612  102  0.8592242  0.341813713 #> 613  103  0.9009296  0.365892337 #> 614  103  0.8592242  0.341813713 #> 615  103  0.8592242  0.293656465 #> 616  103  0.9009296  0.269577841 #> 617  103  0.9426350  0.293656465 #> 618  103  0.9426350  0.341813713 #> 619  104  0.9843404  0.365892337 #> 620  104  0.9426350  0.341813713 #> 621  104  0.9426350  0.293656465 #> 622  104  0.9843404  0.269577841 #> 623  104  1.0260458  0.293656465 #> 624  104  1.0260458  0.341813713 #> 625  105  1.0677512  0.365892337 #> 626  105  1.0260458  0.341813713 #> 627  105  1.0260458  0.293656465 #> 628  105  1.0677512  0.269577841 #> 629  105  1.1094566  0.293656465 #> 630  105  1.1094566  0.341813713 #> 631  106 -0.0582946  0.438128209 #> 632  106 -0.1000000  0.414049585 #> 633  106 -0.1000000  0.365892337 #> 634  106 -0.0582946  0.341813713 #> 635  106 -0.0165892  0.365892337 #> 636  106 -0.0165892  0.414049585 #> 637  107  0.0251162  0.438128209 #> 638  107 -0.0165892  0.414049585 #> 639  107 -0.0165892  0.365892337 #> 640  107  0.0251162  0.341813713 #> 641  107  0.0668216  0.365892337 #> 642  107  0.0668216  0.414049585 #> 643  108  0.1085270  0.438128209 #> 644  108  0.0668216  0.414049585 #> 645  108  0.0668216  0.365892337 #> 646  108  0.1085270  0.341813713 #> 647  108  0.1502324  0.365892337 #> 648  108  0.1502324  0.414049585 #> 649  109  0.1919378  0.438128209 #> 650  109  0.1502324  0.414049585 #> 651  109  0.1502324  0.365892337 #> 652  109  0.1919378  0.341813713 #> 653  109  0.2336432  0.365892337 #> 654  109  0.2336432  0.414049585 #> 655  110  0.2753486  0.438128209 #> 656  110  0.2336432  0.414049585 #> 657  110  0.2336432  0.365892337 #> 658  110  0.2753486  0.341813713 #> 659  110  0.3170540  0.365892337 #> 660  110  0.3170540  0.414049585 #> 661  111  0.3587594  0.438128209 #> 662  111  0.3170540  0.414049585 #> 663  111  0.3170540  0.365892337 #> 664  111  0.3587594  0.341813713 #> 665  111  0.4004648  0.365892337 #> 666  111  0.4004648  0.414049585 #> 667  112  0.4421702  0.438128209 #> 668  112  0.4004648  0.414049585 #> 669  112  0.4004648  0.365892337 #> 670  112  0.4421702  0.341813713 #> 671  112  0.4838756  0.365892337 #> 672  112  0.4838756  0.414049585 #> 673  113  0.5255810  0.438128209 #> 674  113  0.4838756  0.414049585 #> 675  113  0.4838756  0.365892337 #> 676  113  0.5255810  0.341813713 #> 677  113  0.5672864  0.365892337 #> 678  113  0.5672864  0.414049585 #> 679  114  0.6089918  0.438128209 #> 680  114  0.5672864  0.414049585 #> 681  114  0.5672864  0.365892337 #> 682  114  0.6089918  0.341813713 #> 683  114  0.6506972  0.365892337 #> 684  114  0.6506972  0.414049585 #> 685  115  0.6924026  0.438128209 #> 686  115  0.6506972  0.414049585 #> 687  115  0.6506972  0.365892337 #> 688  115  0.6924026  0.341813713 #> 689  115  0.7341080  0.365892337 #> 690  115  0.7341080  0.414049585 #> 691  116  0.7758134  0.438128209 #> 692  116  0.7341080  0.414049585 #> 693  116  0.7341080  0.365892337 #> 694  116  0.7758134  0.341813713 #> 695  116  0.8175188  0.365892337 #> 696  116  0.8175188  0.414049585 #> 697  117  0.8592242  0.438128209 #> 698  117  0.8175188  0.414049585 #> 699  117  0.8175188  0.365892337 #> 700  117  0.8592242  0.341813713 #> 701  117  0.9009296  0.365892337 #> 702  117  0.9009296  0.414049585 #> 703  118  0.9426350  0.438128209 #> 704  118  0.9009296  0.414049585 #> 705  118  0.9009296  0.365892337 #> 706  118  0.9426350  0.341813713 #> 707  118  0.9843404  0.365892337 #> 708  118  0.9843404  0.414049585 #> 709  119  1.0260458  0.438128209 #> 710  119  0.9843404  0.414049585 #> 711  119  0.9843404  0.365892337 #> 712  119  1.0260458  0.341813713 #> 713  119  1.0677512  0.365892337 #> 714  119  1.0677512  0.414049585 #> 715  120  1.1094566  0.438128209 #> 716  120  1.0677512  0.414049585 #> 717  120  1.0677512  0.365892337 #> 718  120  1.1094566  0.341813713 #> 719  120  1.1511620  0.365892337 #> 720  120  1.1511620  0.414049585 #> 721  121 -0.1000000  0.510364080 #> 722  121 -0.1417054  0.486285456 #> 723  121 -0.1417054  0.438128209 #> 724  121 -0.1000000  0.414049585 #> 725  121 -0.0582946  0.438128209 #> 726  121 -0.0582946  0.486285456 #> 727  122 -0.0165892  0.510364080 #> 728  122 -0.0582946  0.486285456 #> 729  122 -0.0582946  0.438128209 #> 730  122 -0.0165892  0.414049585 #> 731  122  0.0251162  0.438128209 #> 732  122  0.0251162  0.486285456 #> 733  123  0.0668216  0.510364080 #> 734  123  0.0251162  0.486285456 #> 735  123  0.0251162  0.438128209 #> 736  123  0.0668216  0.414049585 #> 737  123  0.1085270  0.438128209 #> 738  123  0.1085270  0.486285456 #> 739  124  0.1502324  0.510364080 #> 740  124  0.1085270  0.486285456 #> 741  124  0.1085270  0.438128209 #> 742  124  0.1502324  0.414049585 #> 743  124  0.1919378  0.438128209 #> 744  124  0.1919378  0.486285456 #> 745  125  0.2336432  0.510364080 #> 746  125  0.1919378  0.486285456 #> 747  125  0.1919378  0.438128209 #> 748  125  0.2336432  0.414049585 #> 749  125  0.2753486  0.438128209 #> 750  125  0.2753486  0.486285456 #> 751  126  0.3170540  0.510364080 #> 752  126  0.2753486  0.486285456 #> 753  126  0.2753486  0.438128209 #> 754  126  0.3170540  0.414049585 #> 755  126  0.3587594  0.438128209 #> 756  126  0.3587594  0.486285456 #> 757  127  0.4004648  0.510364080 #> 758  127  0.3587594  0.486285456 #> 759  127  0.3587594  0.438128209 #> 760  127  0.4004648  0.414049585 #> 761  127  0.4421702  0.438128209 #> 762  127  0.4421702  0.486285456 #> 763  128  0.4838756  0.510364080 #> 764  128  0.4421702  0.486285456 #> 765  128  0.4421702  0.438128209 #> 766  128  0.4838756  0.414049585 #> 767  128  0.5255810  0.438128209 #> 768  128  0.5255810  0.486285456 #> 769  129  0.5672864  0.510364080 #> 770  129  0.5255810  0.486285456 #> 771  129  0.5255810  0.438128209 #> 772  129  0.5672864  0.414049585 #> 773  129  0.6089918  0.438128209 #> 774  129  0.6089918  0.486285456 #> 775  130  0.6506972  0.510364080 #> 776  130  0.6089918  0.486285456 #> 777  130  0.6089918  0.438128209 #> 778  130  0.6506972  0.414049585 #> 779  130  0.6924026  0.438128209 #> 780  130  0.6924026  0.486285456 #> 781  131  0.7341080  0.510364080 #> 782  131  0.6924026  0.486285456 #> 783  131  0.6924026  0.438128209 #> 784  131  0.7341080  0.414049585 #> 785  131  0.7758134  0.438128209 #> 786  131  0.7758134  0.486285456 #> 787  132  0.8175188  0.510364080 #> 788  132  0.7758134  0.486285456 #> 789  132  0.7758134  0.438128209 #> 790  132  0.8175188  0.414049585 #> 791  132  0.8592242  0.438128209 #> 792  132  0.8592242  0.486285456 #> 793  133  0.9009296  0.510364080 #> 794  133  0.8592242  0.486285456 #> 795  133  0.8592242  0.438128209 #> 796  133  0.9009296  0.414049585 #> 797  133  0.9426350  0.438128209 #> 798  133  0.9426350  0.486285456 #> 799  134  0.9843404  0.510364080 #> 800  134  0.9426350  0.486285456 #> 801  134  0.9426350  0.438128209 #> 802  134  0.9843404  0.414049585 #> 803  134  1.0260458  0.438128209 #> 804  134  1.0260458  0.486285456 #> 805  135  1.0677512  0.510364080 #> 806  135  1.0260458  0.486285456 #> 807  135  1.0260458  0.438128209 #> 808  135  1.0677512  0.414049585 #> 809  135  1.1094566  0.438128209 #> 810  135  1.1094566  0.486285456 #> 811  136 -0.0582946  0.582599952 #> 812  136 -0.1000000  0.558521328 #> 813  136 -0.1000000  0.510364080 #> 814  136 -0.0582946  0.486285456 #> 815  136 -0.0165892  0.510364080 #> 816  136 -0.0165892  0.558521328 #> 817  137  0.0251162  0.582599952 #> 818  137 -0.0165892  0.558521328 #> 819  137 -0.0165892  0.510364080 #> 820  137  0.0251162  0.486285456 #> 821  137  0.0668216  0.510364080 #> 822  137  0.0668216  0.558521328 #> 823  138  0.1085270  0.582599952 #> 824  138  0.0668216  0.558521328 #> 825  138  0.0668216  0.510364080 #> 826  138  0.1085270  0.486285456 #> 827  138  0.1502324  0.510364080 #> 828  138  0.1502324  0.558521328 #> 829  139  0.1919378  0.582599952 #> 830  139  0.1502324  0.558521328 #> 831  139  0.1502324  0.510364080 #> 832  139  0.1919378  0.486285456 #> 833  139  0.2336432  0.510364080 #> 834  139  0.2336432  0.558521328 #> 835  140  0.2753486  0.582599952 #> 836  140  0.2336432  0.558521328 #> 837  140  0.2336432  0.510364080 #> 838  140  0.2753486  0.486285456 #> 839  140  0.3170540  0.510364080 #> 840  140  0.3170540  0.558521328 #> 841  141  0.3587594  0.582599952 #> 842  141  0.3170540  0.558521328 #> 843  141  0.3170540  0.510364080 #> 844  141  0.3587594  0.486285456 #> 845  141  0.4004648  0.510364080 #> 846  141  0.4004648  0.558521328 #> 847  142  0.4421702  0.582599952 #> 848  142  0.4004648  0.558521328 #> 849  142  0.4004648  0.510364080 #> 850  142  0.4421702  0.486285456 #> 851  142  0.4838756  0.510364080 #> 852  142  0.4838756  0.558521328 #> 853  143  0.5255810  0.582599952 #> 854  143  0.4838756  0.558521328 #> 855  143  0.4838756  0.510364080 #> 856  143  0.5255810  0.486285456 #> 857  143  0.5672864  0.510364080 #> 858  143  0.5672864  0.558521328 #> 859  144  0.6089918  0.582599952 #> 860  144  0.5672864  0.558521328 #> 861  144  0.5672864  0.510364080 #> 862  144  0.6089918  0.486285456 #> 863  144  0.6506972  0.510364080 #> 864  144  0.6506972  0.558521328 #> 865  145  0.6924026  0.582599952 #> 866  145  0.6506972  0.558521328 #> 867  145  0.6506972  0.510364080 #> 868  145  0.6924026  0.486285456 #> 869  145  0.7341080  0.510364080 #> 870  145  0.7341080  0.558521328 #> 871  146  0.7758134  0.582599952 #> 872  146  0.7341080  0.558521328 #> 873  146  0.7341080  0.510364080 #> 874  146  0.7758134  0.486285456 #> 875  146  0.8175188  0.510364080 #> 876  146  0.8175188  0.558521328 #> 877  147  0.8592242  0.582599952 #> 878  147  0.8175188  0.558521328 #> 879  147  0.8175188  0.510364080 #> 880  147  0.8592242  0.486285456 #> 881  147  0.9009296  0.510364080 #> 882  147  0.9009296  0.558521328 #> 883  148  0.9426350  0.582599952 #> 884  148  0.9009296  0.558521328 #> 885  148  0.9009296  0.510364080 #> 886  148  0.9426350  0.486285456 #> 887  148  0.9843404  0.510364080 #> 888  148  0.9843404  0.558521328 #> 889  149  1.0260458  0.582599952 #> 890  149  0.9843404  0.558521328 #> 891  149  0.9843404  0.510364080 #> 892  149  1.0260458  0.486285456 #> 893  149  1.0677512  0.510364080 #> 894  149  1.0677512  0.558521328 #> 895  150  1.1094566  0.582599952 #> 896  150  1.0677512  0.558521328 #> 897  150  1.0677512  0.510364080 #> 898  150  1.1094566  0.486285456 #> 899  150  1.1511620  0.510364080 #> 900  150  1.1511620  0.558521328 #> 901  151 -0.1000000  0.654835824 #> 902  151 -0.1417054  0.630757200 #> 903  151 -0.1417054  0.582599952 #> 904  151 -0.1000000  0.558521328 #> 905  151 -0.0582946  0.582599952 #> 906  151 -0.0582946  0.630757200 #> 907  152 -0.0165892  0.654835824 #> 908  152 -0.0582946  0.630757200 #> 909  152 -0.0582946  0.582599952 #> 910  152 -0.0165892  0.558521328 #> 911  152  0.0251162  0.582599952 #> 912  152  0.0251162  0.630757200 #> 913  153  0.0668216  0.654835824 #> 914  153  0.0251162  0.630757200 #> 915  153  0.0251162  0.582599952 #> 916  153  0.0668216  0.558521328 #> 917  153  0.1085270  0.582599952 #> 918  153  0.1085270  0.630757200 #> 919  154  0.1502324  0.654835824 #> 920  154  0.1085270  0.630757200 #> 921  154  0.1085270  0.582599952 #> 922  154  0.1502324  0.558521328 #> 923  154  0.1919378  0.582599952 #> 924  154  0.1919378  0.630757200 #> 925  155  0.2336432  0.654835824 #> 926  155  0.1919378  0.630757200 #> 927  155  0.1919378  0.582599952 #> 928  155  0.2336432  0.558521328 #> 929  155  0.2753486  0.582599952 #> 930  155  0.2753486  0.630757200 #> 931  156  0.3170540  0.654835824 #> 932  156  0.2753486  0.630757200 #> 933  156  0.2753486  0.582599952 #> 934  156  0.3170540  0.558521328 #> 935  156  0.3587594  0.582599952 #> 936  156  0.3587594  0.630757200 #> 937  157  0.4004648  0.654835824 #> 938  157  0.3587594  0.630757200 #> 939  157  0.3587594  0.582599952 #> 940  157  0.4004648  0.558521328 #> 941  157  0.4421702  0.582599952 #> 942  157  0.4421702  0.630757200 #> 943  158  0.4838756  0.654835824 #> 944  158  0.4421702  0.630757200 #> 945  158  0.4421702  0.582599952 #> 946  158  0.4838756  0.558521328 #> 947  158  0.5255810  0.582599952 #> 948  158  0.5255810  0.630757200 #> 949  159  0.5672864  0.654835824 #> 950  159  0.5255810  0.630757200 #> 951  159  0.5255810  0.582599952 #> 952  159  0.5672864  0.558521328 #> 953  159  0.6089918  0.582599952 #> 954  159  0.6089918  0.630757200 #> 955  160  0.6506972  0.654835824 #> 956  160  0.6089918  0.630757200 #> 957  160  0.6089918  0.582599952 #> 958  160  0.6506972  0.558521328 #> 959  160  0.6924026  0.582599952 #> 960  160  0.6924026  0.630757200 #> 961  161  0.7341080  0.654835824 #> 962  161  0.6924026  0.630757200 #> 963  161  0.6924026  0.582599952 #> 964  161  0.7341080  0.558521328 #> 965  161  0.7758134  0.582599952 #> 966  161  0.7758134  0.630757200 #> 967  162  0.8175188  0.654835824 #> 968  162  0.7758134  0.630757200 #> 969  162  0.7758134  0.582599952 #> 970  162  0.8175188  0.558521328 #> 971  162  0.8592242  0.582599952 #> 972  162  0.8592242  0.630757200 #> 973  163  0.9009296  0.654835824 #> 974  163  0.8592242  0.630757200 #> 975  163  0.8592242  0.582599952 #> 976  163  0.9009296  0.558521328 #> 977  163  0.9426350  0.582599952 #> 978  163  0.9426350  0.630757200 #> 979  164  0.9843404  0.654835824 #> 980  164  0.9426350  0.630757200 #> 981  164  0.9426350  0.582599952 #> 982  164  0.9843404  0.558521328 #> 983  164  1.0260458  0.582599952 #> 984  164  1.0260458  0.630757200 #> 985  165  1.0677512  0.654835824 #> 986  165  1.0260458  0.630757200 #> 987  165  1.0260458  0.582599952 #> 988  165  1.0677512  0.558521328 #> 989  165  1.1094566  0.582599952 #> 990  165  1.1094566  0.630757200 #> 991  166 -0.0582946  0.727071696 #> 992  166 -0.1000000  0.702993072 #> 993  166 -0.1000000  0.654835824 #> 994  166 -0.0582946  0.630757200 #> 995  166 -0.0165892  0.654835824 #> 996  166 -0.0165892  0.702993072 #> 997  167  0.0251162  0.727071696 #> 998  167 -0.0165892  0.702993072 #> 999  167 -0.0165892  0.654835824 #> 1000 167  0.0251162  0.630757200 #> 1001 167  0.0668216  0.654835824 #> 1002 167  0.0668216  0.702993072 #> 1003 168  0.1085270  0.727071696 #> 1004 168  0.0668216  0.702993072 #> 1005 168  0.0668216  0.654835824 #> 1006 168  0.1085270  0.630757200 #> 1007 168  0.1502324  0.654835824 #> 1008 168  0.1502324  0.702993072 #> 1009 169  0.1919378  0.727071696 #> 1010 169  0.1502324  0.702993072 #> 1011 169  0.1502324  0.654835824 #> 1012 169  0.1919378  0.630757200 #> 1013 169  0.2336432  0.654835824 #> 1014 169  0.2336432  0.702993072 #> 1015 170  0.2753486  0.727071696 #> 1016 170  0.2336432  0.702993072 #> 1017 170  0.2336432  0.654835824 #> 1018 170  0.2753486  0.630757200 #> 1019 170  0.3170540  0.654835824 #> 1020 170  0.3170540  0.702993072 #> 1021 171  0.3587594  0.727071696 #> 1022 171  0.3170540  0.702993072 #> 1023 171  0.3170540  0.654835824 #> 1024 171  0.3587594  0.630757200 #> 1025 171  0.4004648  0.654835824 #> 1026 171  0.4004648  0.702993072 #> 1027 172  0.4421702  0.727071696 #> 1028 172  0.4004648  0.702993072 #> 1029 172  0.4004648  0.654835824 #> 1030 172  0.4421702  0.630757200 #> 1031 172  0.4838756  0.654835824 #> 1032 172  0.4838756  0.702993072 #> 1033 173  0.5255810  0.727071696 #> 1034 173  0.4838756  0.702993072 #> 1035 173  0.4838756  0.654835824 #> 1036 173  0.5255810  0.630757200 #> 1037 173  0.5672864  0.654835824 #> 1038 173  0.5672864  0.702993072 #> 1039 174  0.6089918  0.727071696 #> 1040 174  0.5672864  0.702993072 #> 1041 174  0.5672864  0.654835824 #> 1042 174  0.6089918  0.630757200 #> 1043 174  0.6506972  0.654835824 #> 1044 174  0.6506972  0.702993072 #> 1045 175  0.6924026  0.727071696 #> 1046 175  0.6506972  0.702993072 #> 1047 175  0.6506972  0.654835824 #> 1048 175  0.6924026  0.630757200 #> 1049 175  0.7341080  0.654835824 #> 1050 175  0.7341080  0.702993072 #> 1051 176  0.7758134  0.727071696 #> 1052 176  0.7341080  0.702993072 #> 1053 176  0.7341080  0.654835824 #> 1054 176  0.7758134  0.630757200 #> 1055 176  0.8175188  0.654835824 #> 1056 176  0.8175188  0.702993072 #> 1057 177  0.8592242  0.727071696 #> 1058 177  0.8175188  0.702993072 #> 1059 177  0.8175188  0.654835824 #> 1060 177  0.8592242  0.630757200 #> 1061 177  0.9009296  0.654835824 #> 1062 177  0.9009296  0.702993072 #> 1063 178  0.9426350  0.727071696 #> 1064 178  0.9009296  0.702993072 #> 1065 178  0.9009296  0.654835824 #> 1066 178  0.9426350  0.630757200 #> 1067 178  0.9843404  0.654835824 #> 1068 178  0.9843404  0.702993072 #> 1069 179  1.0260458  0.727071696 #> 1070 179  0.9843404  0.702993072 #> 1071 179  0.9843404  0.654835824 #> 1072 179  1.0260458  0.630757200 #> 1073 179  1.0677512  0.654835824 #> 1074 179  1.0677512  0.702993072 #> 1075 180  1.1094566  0.727071696 #> 1076 180  1.0677512  0.702993072 #> 1077 180  1.0677512  0.654835824 #> 1078 180  1.1094566  0.630757200 #> 1079 180  1.1511620  0.654835824 #> 1080 180  1.1511620  0.702993072 #> 1081 181 -0.1000000  0.799307568 #> 1082 181 -0.1417054  0.775228944 #> 1083 181 -0.1417054  0.727071696 #> 1084 181 -0.1000000  0.702993072 #> 1085 181 -0.0582946  0.727071696 #> 1086 181 -0.0582946  0.775228944 #> 1087 182 -0.0165892  0.799307568 #> 1088 182 -0.0582946  0.775228944 #> 1089 182 -0.0582946  0.727071696 #> 1090 182 -0.0165892  0.702993072 #> 1091 182  0.0251162  0.727071696 #> 1092 182  0.0251162  0.775228944 #> 1093 183  0.0668216  0.799307568 #> 1094 183  0.0251162  0.775228944 #> 1095 183  0.0251162  0.727071696 #> 1096 183  0.0668216  0.702993072 #> 1097 183  0.1085270  0.727071696 #> 1098 183  0.1085270  0.775228944 #> 1099 184  0.1502324  0.799307568 #> 1100 184  0.1085270  0.775228944 #> 1101 184  0.1085270  0.727071696 #> 1102 184  0.1502324  0.702993072 #> 1103 184  0.1919378  0.727071696 #> 1104 184  0.1919378  0.775228944 #> 1105 185  0.2336432  0.799307568 #> 1106 185  0.1919378  0.775228944 #> 1107 185  0.1919378  0.727071696 #> 1108 185  0.2336432  0.702993072 #> 1109 185  0.2753486  0.727071696 #> 1110 185  0.2753486  0.775228944 #> 1111 186  0.3170540  0.799307568 #> 1112 186  0.2753486  0.775228944 #> 1113 186  0.2753486  0.727071696 #> 1114 186  0.3170540  0.702993072 #> 1115 186  0.3587594  0.727071696 #> 1116 186  0.3587594  0.775228944 #> 1117 187  0.4004648  0.799307568 #> 1118 187  0.3587594  0.775228944 #> 1119 187  0.3587594  0.727071696 #> 1120 187  0.4004648  0.702993072 #> 1121 187  0.4421702  0.727071696 #> 1122 187  0.4421702  0.775228944 #> 1123 188  0.4838756  0.799307568 #> 1124 188  0.4421702  0.775228944 #> 1125 188  0.4421702  0.727071696 #> 1126 188  0.4838756  0.702993072 #> 1127 188  0.5255810  0.727071696 #> 1128 188  0.5255810  0.775228944 #> 1129 189  0.5672864  0.799307568 #> 1130 189  0.5255810  0.775228944 #> 1131 189  0.5255810  0.727071696 #> 1132 189  0.5672864  0.702993072 #> 1133 189  0.6089918  0.727071696 #> 1134 189  0.6089918  0.775228944 #> 1135 190  0.6506972  0.799307568 #> 1136 190  0.6089918  0.775228944 #> 1137 190  0.6089918  0.727071696 #> 1138 190  0.6506972  0.702993072 #> 1139 190  0.6924026  0.727071696 #> 1140 190  0.6924026  0.775228944 #> 1141 191  0.7341080  0.799307568 #> 1142 191  0.6924026  0.775228944 #> 1143 191  0.6924026  0.727071696 #> 1144 191  0.7341080  0.702993072 #> 1145 191  0.7758134  0.727071696 #> 1146 191  0.7758134  0.775228944 #> 1147 192  0.8175188  0.799307568 #> 1148 192  0.7758134  0.775228944 #> 1149 192  0.7758134  0.727071696 #> 1150 192  0.8175188  0.702993072 #> 1151 192  0.8592242  0.727071696 #> 1152 192  0.8592242  0.775228944 #> 1153 193  0.9009296  0.799307568 #> 1154 193  0.8592242  0.775228944 #> 1155 193  0.8592242  0.727071696 #> 1156 193  0.9009296  0.702993072 #> 1157 193  0.9426350  0.727071696 #> 1158 193  0.9426350  0.775228944 #> 1159 194  0.9843404  0.799307568 #> 1160 194  0.9426350  0.775228944 #> 1161 194  0.9426350  0.727071696 #> 1162 194  0.9843404  0.702993072 #> 1163 194  1.0260458  0.727071696 #> 1164 194  1.0260458  0.775228944 #> 1165 195  1.0677512  0.799307568 #> 1166 195  1.0260458  0.775228944 #> 1167 195  1.0260458  0.727071696 #> 1168 195  1.0677512  0.702993072 #> 1169 195  1.1094566  0.727071696 #> 1170 195  1.1094566  0.775228944 #> 1171 196 -0.0582946  0.871543440 #> 1172 196 -0.1000000  0.847464816 #> 1173 196 -0.1000000  0.799307568 #> 1174 196 -0.0582946  0.775228944 #> 1175 196 -0.0165892  0.799307568 #> 1176 196 -0.0165892  0.847464816 #> 1177 197  0.0251162  0.871543440 #> 1178 197 -0.0165892  0.847464816 #> 1179 197 -0.0165892  0.799307568 #> 1180 197  0.0251162  0.775228944 #> 1181 197  0.0668216  0.799307568 #> 1182 197  0.0668216  0.847464816 #> 1183 198  0.1085270  0.871543440 #> 1184 198  0.0668216  0.847464816 #> 1185 198  0.0668216  0.799307568 #> 1186 198  0.1085270  0.775228944 #> 1187 198  0.1502324  0.799307568 #> 1188 198  0.1502324  0.847464816 #> 1189 199  0.1919378  0.871543440 #> 1190 199  0.1502324  0.847464816 #> 1191 199  0.1502324  0.799307568 #> 1192 199  0.1919378  0.775228944 #> 1193 199  0.2336432  0.799307568 #> 1194 199  0.2336432  0.847464816 #> 1195 200  0.2753486  0.871543440 #> 1196 200  0.2336432  0.847464816 #> 1197 200  0.2336432  0.799307568 #> 1198 200  0.2753486  0.775228944 #> 1199 200  0.3170540  0.799307568 #> 1200 200  0.3170540  0.847464816 #> 1201 201  0.3587594  0.871543440 #> 1202 201  0.3170540  0.847464816 #> 1203 201  0.3170540  0.799307568 #> 1204 201  0.3587594  0.775228944 #> 1205 201  0.4004648  0.799307568 #> 1206 201  0.4004648  0.847464816 #> 1207 202  0.4421702  0.871543440 #> 1208 202  0.4004648  0.847464816 #> 1209 202  0.4004648  0.799307568 #> 1210 202  0.4421702  0.775228944 #> 1211 202  0.4838756  0.799307568 #> 1212 202  0.4838756  0.847464816 #> 1213 203  0.5255810  0.871543440 #> 1214 203  0.4838756  0.847464816 #> 1215 203  0.4838756  0.799307568 #> 1216 203  0.5255810  0.775228944 #> 1217 203  0.5672864  0.799307568 #> 1218 203  0.5672864  0.847464816 #> 1219 204  0.6089918  0.871543440 #> 1220 204  0.5672864  0.847464816 #> 1221 204  0.5672864  0.799307568 #> 1222 204  0.6089918  0.775228944 #> 1223 204  0.6506972  0.799307568 #> 1224 204  0.6506972  0.847464816 #> 1225 205  0.6924026  0.871543440 #> 1226 205  0.6506972  0.847464816 #> 1227 205  0.6506972  0.799307568 #> 1228 205  0.6924026  0.775228944 #> 1229 205  0.7341080  0.799307568 #> 1230 205  0.7341080  0.847464816 #> 1231 206  0.7758134  0.871543440 #> 1232 206  0.7341080  0.847464816 #> 1233 206  0.7341080  0.799307568 #> 1234 206  0.7758134  0.775228944 #> 1235 206  0.8175188  0.799307568 #> 1236 206  0.8175188  0.847464816 #> 1237 207  0.8592242  0.871543440 #> 1238 207  0.8175188  0.847464816 #> 1239 207  0.8175188  0.799307568 #> 1240 207  0.8592242  0.775228944 #> 1241 207  0.9009296  0.799307568 #> 1242 207  0.9009296  0.847464816 #> 1243 208  0.9426350  0.871543440 #> 1244 208  0.9009296  0.847464816 #> 1245 208  0.9009296  0.799307568 #> 1246 208  0.9426350  0.775228944 #> 1247 208  0.9843404  0.799307568 #> 1248 208  0.9843404  0.847464816 #> 1249 209  1.0260458  0.871543440 #> 1250 209  0.9843404  0.847464816 #> 1251 209  0.9843404  0.799307568 #> 1252 209  1.0260458  0.775228944 #> 1253 209  1.0677512  0.799307568 #> 1254 209  1.0677512  0.847464816 #> 1255 210  1.1094566  0.871543440 #> 1256 210  1.0677512  0.847464816 #> 1257 210  1.0677512  0.799307568 #> 1258 210  1.1094566  0.775228944 #> 1259 210  1.1511620  0.799307568 #> 1260 210  1.1511620  0.847464816 #> 1261 211 -0.1000000  0.943779311 #> 1262 211 -0.1417054  0.919700688 #> 1263 211 -0.1417054  0.871543440 #> 1264 211 -0.1000000  0.847464816 #> 1265 211 -0.0582946  0.871543440 #> 1266 211 -0.0582946  0.919700688 #> 1267 212 -0.0165892  0.943779311 #> 1268 212 -0.0582946  0.919700688 #> 1269 212 -0.0582946  0.871543440 #> 1270 212 -0.0165892  0.847464816 #> 1271 212  0.0251162  0.871543440 #> 1272 212  0.0251162  0.919700688 #> 1273 213  0.0668216  0.943779311 #> 1274 213  0.0251162  0.919700688 #> 1275 213  0.0251162  0.871543440 #> 1276 213  0.0668216  0.847464816 #> 1277 213  0.1085270  0.871543440 #> 1278 213  0.1085270  0.919700688 #> 1279 214  0.1502324  0.943779311 #> 1280 214  0.1085270  0.919700688 #> 1281 214  0.1085270  0.871543440 #> 1282 214  0.1502324  0.847464816 #> 1283 214  0.1919378  0.871543440 #> 1284 214  0.1919378  0.919700688 #> 1285 215  0.2336432  0.943779311 #> 1286 215  0.1919378  0.919700688 #> 1287 215  0.1919378  0.871543440 #> 1288 215  0.2336432  0.847464816 #> 1289 215  0.2753486  0.871543440 #> 1290 215  0.2753486  0.919700688 #> 1291 216  0.3170540  0.943779311 #> 1292 216  0.2753486  0.919700688 #> 1293 216  0.2753486  0.871543440 #> 1294 216  0.3170540  0.847464816 #> 1295 216  0.3587594  0.871543440 #> 1296 216  0.3587594  0.919700688 #> 1297 217  0.4004648  0.943779311 #> 1298 217  0.3587594  0.919700688 #> 1299 217  0.3587594  0.871543440 #> 1300 217  0.4004648  0.847464816 #> 1301 217  0.4421702  0.871543440 #> 1302 217  0.4421702  0.919700688 #> 1303 218  0.4838756  0.943779311 #> 1304 218  0.4421702  0.919700688 #> 1305 218  0.4421702  0.871543440 #> 1306 218  0.4838756  0.847464816 #> 1307 218  0.5255810  0.871543440 #> 1308 218  0.5255810  0.919700688 #> 1309 219  0.5672864  0.943779311 #> 1310 219  0.5255810  0.919700688 #> 1311 219  0.5255810  0.871543440 #> 1312 219  0.5672864  0.847464816 #> 1313 219  0.6089918  0.871543440 #> 1314 219  0.6089918  0.919700688 #> 1315 220  0.6506972  0.943779311 #> 1316 220  0.6089918  0.919700688 #> 1317 220  0.6089918  0.871543440 #> 1318 220  0.6506972  0.847464816 #> 1319 220  0.6924026  0.871543440 #> 1320 220  0.6924026  0.919700688 #> 1321 221  0.7341080  0.943779311 #> 1322 221  0.6924026  0.919700688 #> 1323 221  0.6924026  0.871543440 #> 1324 221  0.7341080  0.847464816 #> 1325 221  0.7758134  0.871543440 #> 1326 221  0.7758134  0.919700688 #> 1327 222  0.8175188  0.943779311 #> 1328 222  0.7758134  0.919700688 #> 1329 222  0.7758134  0.871543440 #> 1330 222  0.8175188  0.847464816 #> 1331 222  0.8592242  0.871543440 #> 1332 222  0.8592242  0.919700688 #> 1333 223  0.9009296  0.943779311 #> 1334 223  0.8592242  0.919700688 #> 1335 223  0.8592242  0.871543440 #> 1336 223  0.9009296  0.847464816 #> 1337 223  0.9426350  0.871543440 #> 1338 223  0.9426350  0.919700688 #> 1339 224  0.9843404  0.943779311 #> 1340 224  0.9426350  0.919700688 #> 1341 224  0.9426350  0.871543440 #> 1342 224  0.9843404  0.847464816 #> 1343 224  1.0260458  0.871543440 #> 1344 224  1.0260458  0.919700688 #> 1345 225  1.0677512  0.943779311 #> 1346 225  1.0260458  0.919700688 #> 1347 225  1.0260458  0.871543440 #> 1348 225  1.0677512  0.847464816 #> 1349 225  1.1094566  0.871543440 #> 1350 225  1.1094566  0.919700688 #> 1351 226 -0.0582946  1.016015183 #> 1352 226 -0.1000000  0.991936559 #> 1353 226 -0.1000000  0.943779311 #> 1354 226 -0.0582946  0.919700688 #> 1355 226 -0.0165892  0.943779311 #> 1356 226 -0.0165892  0.991936559 #> 1357 227  0.0251162  1.016015183 #> 1358 227 -0.0165892  0.991936559 #> 1359 227 -0.0165892  0.943779311 #> 1360 227  0.0251162  0.919700688 #> 1361 227  0.0668216  0.943779311 #> 1362 227  0.0668216  0.991936559 #> 1363 228  0.1085270  1.016015183 #> 1364 228  0.0668216  0.991936559 #> 1365 228  0.0668216  0.943779311 #> 1366 228  0.1085270  0.919700688 #> 1367 228  0.1502324  0.943779311 #> 1368 228  0.1502324  0.991936559 #> 1369 229  0.1919378  1.016015183 #> 1370 229  0.1502324  0.991936559 #> 1371 229  0.1502324  0.943779311 #> 1372 229  0.1919378  0.919700688 #> 1373 229  0.2336432  0.943779311 #> 1374 229  0.2336432  0.991936559 #> 1375 230  0.2753486  1.016015183 #> 1376 230  0.2336432  0.991936559 #> 1377 230  0.2336432  0.943779311 #> 1378 230  0.2753486  0.919700688 #> 1379 230  0.3170540  0.943779311 #> 1380 230  0.3170540  0.991936559 #> 1381 231  0.3587594  1.016015183 #> 1382 231  0.3170540  0.991936559 #> 1383 231  0.3170540  0.943779311 #> 1384 231  0.3587594  0.919700688 #> 1385 231  0.4004648  0.943779311 #> 1386 231  0.4004648  0.991936559 #> 1387 232  0.4421702  1.016015183 #> 1388 232  0.4004648  0.991936559 #> 1389 232  0.4004648  0.943779311 #> 1390 232  0.4421702  0.919700688 #> 1391 232  0.4838756  0.943779311 #> 1392 232  0.4838756  0.991936559 #> 1393 233  0.5255810  1.016015183 #> 1394 233  0.4838756  0.991936559 #> 1395 233  0.4838756  0.943779311 #> 1396 233  0.5255810  0.919700688 #> 1397 233  0.5672864  0.943779311 #> 1398 233  0.5672864  0.991936559 #> 1399 234  0.6089918  1.016015183 #> 1400 234  0.5672864  0.991936559 #> 1401 234  0.5672864  0.943779311 #> 1402 234  0.6089918  0.919700688 #> 1403 234  0.6506972  0.943779311 #> 1404 234  0.6506972  0.991936559 #> 1405 235  0.6924026  1.016015183 #> 1406 235  0.6506972  0.991936559 #> 1407 235  0.6506972  0.943779311 #> 1408 235  0.6924026  0.919700688 #> 1409 235  0.7341080  0.943779311 #> 1410 235  0.7341080  0.991936559 #> 1411 236  0.7758134  1.016015183 #> 1412 236  0.7341080  0.991936559 #> 1413 236  0.7341080  0.943779311 #> 1414 236  0.7758134  0.919700688 #> 1415 236  0.8175188  0.943779311 #> 1416 236  0.8175188  0.991936559 #> 1417 237  0.8592242  1.016015183 #> 1418 237  0.8175188  0.991936559 #> 1419 237  0.8175188  0.943779311 #> 1420 237  0.8592242  0.919700688 #> 1421 237  0.9009296  0.943779311 #> 1422 237  0.9009296  0.991936559 #> 1423 238  0.9426350  1.016015183 #> 1424 238  0.9009296  0.991936559 #> 1425 238  0.9009296  0.943779311 #> 1426 238  0.9426350  0.919700688 #> 1427 238  0.9843404  0.943779311 #> 1428 238  0.9843404  0.991936559 #> 1429 239  1.0260458  1.016015183 #> 1430 239  0.9843404  0.991936559 #> 1431 239  0.9843404  0.943779311 #> 1432 239  1.0260458  0.919700688 #> 1433 239  1.0677512  0.943779311 #> 1434 239  1.0677512  0.991936559 #> 1435 240  1.1094566  1.016015183 #> 1436 240  1.0677512  0.991936559 #> 1437 240  1.0677512  0.943779311 #> 1438 240  1.1094566  0.919700688 #> 1439 240  1.1511620  0.943779311 #> 1440 240  1.1511620  0.991936559 #> 1441 241 -0.1000000  1.088251055 #> 1442 241 -0.1417054  1.064172431 #> 1443 241 -0.1417054  1.016015183 #> 1444 241 -0.1000000  0.991936559 #> 1445 241 -0.0582946  1.016015183 #> 1446 241 -0.0582946  1.064172431 #> 1447 242 -0.0165892  1.088251055 #> 1448 242 -0.0582946  1.064172431 #> 1449 242 -0.0582946  1.016015183 #> 1450 242 -0.0165892  0.991936559 #> 1451 242  0.0251162  1.016015183 #> 1452 242  0.0251162  1.064172431 #> 1453 243  0.0668216  1.088251055 #> 1454 243  0.0251162  1.064172431 #> 1455 243  0.0251162  1.016015183 #> 1456 243  0.0668216  0.991936559 #> 1457 243  0.1085270  1.016015183 #> 1458 243  0.1085270  1.064172431 #> 1459 244  0.1502324  1.088251055 #> 1460 244  0.1085270  1.064172431 #> 1461 244  0.1085270  1.016015183 #> 1462 244  0.1502324  0.991936559 #> 1463 244  0.1919378  1.016015183 #> 1464 244  0.1919378  1.064172431 #> 1465 245  0.2336432  1.088251055 #> 1466 245  0.1919378  1.064172431 #> 1467 245  0.1919378  1.016015183 #> 1468 245  0.2336432  0.991936559 #> 1469 245  0.2753486  1.016015183 #> 1470 245  0.2753486  1.064172431 #> 1471 246  0.3170540  1.088251055 #> 1472 246  0.2753486  1.064172431 #> 1473 246  0.2753486  1.016015183 #> 1474 246  0.3170540  0.991936559 #> 1475 246  0.3587594  1.016015183 #> 1476 246  0.3587594  1.064172431 #> 1477 247  0.4004648  1.088251055 #> 1478 247  0.3587594  1.064172431 #> 1479 247  0.3587594  1.016015183 #> 1480 247  0.4004648  0.991936559 #> 1481 247  0.4421702  1.016015183 #> 1482 247  0.4421702  1.064172431 #> 1483 248  0.4838756  1.088251055 #> 1484 248  0.4421702  1.064172431 #> 1485 248  0.4421702  1.016015183 #> 1486 248  0.4838756  0.991936559 #> 1487 248  0.5255810  1.016015183 #> 1488 248  0.5255810  1.064172431 #> 1489 249  0.5672864  1.088251055 #> 1490 249  0.5255810  1.064172431 #> 1491 249  0.5255810  1.016015183 #> 1492 249  0.5672864  0.991936559 #> 1493 249  0.6089918  1.016015183 #> 1494 249  0.6089918  1.064172431 #> 1495 250  0.6506972  1.088251055 #> 1496 250  0.6089918  1.064172431 #> 1497 250  0.6089918  1.016015183 #> 1498 250  0.6506972  0.991936559 #> 1499 250  0.6924026  1.016015183 #> 1500 250  0.6924026  1.064172431 #> 1501 251  0.7341080  1.088251055 #> 1502 251  0.6924026  1.064172431 #> 1503 251  0.6924026  1.016015183 #> 1504 251  0.7341080  0.991936559 #> 1505 251  0.7758134  1.016015183 #> 1506 251  0.7758134  1.064172431 #> 1507 252  0.8175188  1.088251055 #> 1508 252  0.7758134  1.064172431 #> 1509 252  0.7758134  1.016015183 #> 1510 252  0.8175188  0.991936559 #> 1511 252  0.8592242  1.016015183 #> 1512 252  0.8592242  1.064172431 #> 1513 253  0.9009296  1.088251055 #> 1514 253  0.8592242  1.064172431 #> 1515 253  0.8592242  1.016015183 #> 1516 253  0.9009296  0.991936559 #> 1517 253  0.9426350  1.016015183 #> 1518 253  0.9426350  1.064172431 #> 1519 254  0.9843404  1.088251055 #> 1520 254  0.9426350  1.064172431 #> 1521 254  0.9426350  1.016015183 #> 1522 254  0.9843404  0.991936559 #> 1523 254  1.0260458  1.016015183 #> 1524 254  1.0260458  1.064172431 #> 1525 255  1.0677512  1.088251055 #> 1526 255  1.0260458  1.064172431 #> 1527 255  1.0260458  1.016015183 #> 1528 255  1.0677512  0.991936559 #> 1529 255  1.1094566  1.016015183 #> 1530 255  1.1094566  1.064172431 #> 1531 256 -0.0582946  1.160486927 #> 1532 256 -0.1000000  1.136408303 #> 1533 256 -0.1000000  1.088251055 #> 1534 256 -0.0582946  1.064172431 #> 1535 256 -0.0165892  1.088251055 #> 1536 256 -0.0165892  1.136408303 #> 1537 257  0.0251162  1.160486927 #> 1538 257 -0.0165892  1.136408303 #> 1539 257 -0.0165892  1.088251055 #> 1540 257  0.0251162  1.064172431 #> 1541 257  0.0668216  1.088251055 #> 1542 257  0.0668216  1.136408303 #> 1543 258  0.1085270  1.160486927 #> 1544 258  0.0668216  1.136408303 #> 1545 258  0.0668216  1.088251055 #> 1546 258  0.1085270  1.064172431 #> 1547 258  0.1502324  1.088251055 #> 1548 258  0.1502324  1.136408303 #> 1549 259  0.1919378  1.160486927 #> 1550 259  0.1502324  1.136408303 #> 1551 259  0.1502324  1.088251055 #> 1552 259  0.1919378  1.064172431 #> 1553 259  0.2336432  1.088251055 #> 1554 259  0.2336432  1.136408303 #> 1555 260  0.2753486  1.160486927 #> 1556 260  0.2336432  1.136408303 #> 1557 260  0.2336432  1.088251055 #> 1558 260  0.2753486  1.064172431 #> 1559 260  0.3170540  1.088251055 #> 1560 260  0.3170540  1.136408303 #> 1561 261  0.3587594  1.160486927 #> 1562 261  0.3170540  1.136408303 #> 1563 261  0.3170540  1.088251055 #> 1564 261  0.3587594  1.064172431 #> 1565 261  0.4004648  1.088251055 #> 1566 261  0.4004648  1.136408303 #> 1567 262  0.4421702  1.160486927 #> 1568 262  0.4004648  1.136408303 #> 1569 262  0.4004648  1.088251055 #> 1570 262  0.4421702  1.064172431 #> 1571 262  0.4838756  1.088251055 #> 1572 262  0.4838756  1.136408303 #> 1573 263  0.5255810  1.160486927 #> 1574 263  0.4838756  1.136408303 #> 1575 263  0.4838756  1.088251055 #> 1576 263  0.5255810  1.064172431 #> 1577 263  0.5672864  1.088251055 #> 1578 263  0.5672864  1.136408303 #> 1579 264  0.6089918  1.160486927 #> 1580 264  0.5672864  1.136408303 #> 1581 264  0.5672864  1.088251055 #> 1582 264  0.6089918  1.064172431 #> 1583 264  0.6506972  1.088251055 #> 1584 264  0.6506972  1.136408303 #> 1585 265  0.6924026  1.160486927 #> 1586 265  0.6506972  1.136408303 #> 1587 265  0.6506972  1.088251055 #> 1588 265  0.6924026  1.064172431 #> 1589 265  0.7341080  1.088251055 #> 1590 265  0.7341080  1.136408303 #> 1591 266  0.7758134  1.160486927 #> 1592 266  0.7341080  1.136408303 #> 1593 266  0.7341080  1.088251055 #> 1594 266  0.7758134  1.064172431 #> 1595 266  0.8175188  1.088251055 #> 1596 266  0.8175188  1.136408303 #> 1597 267  0.8592242  1.160486927 #> 1598 267  0.8175188  1.136408303 #> 1599 267  0.8175188  1.088251055 #> 1600 267  0.8592242  1.064172431 #> 1601 267  0.9009296  1.088251055 #> 1602 267  0.9009296  1.136408303 #> 1603 268  0.9426350  1.160486927 #> 1604 268  0.9009296  1.136408303 #> 1605 268  0.9009296  1.088251055 #> 1606 268  0.9426350  1.064172431 #> 1607 268  0.9843404  1.088251055 #> 1608 268  0.9843404  1.136408303 #> 1609 269  1.0260458  1.160486927 #> 1610 269  0.9843404  1.136408303 #> 1611 269  0.9843404  1.088251055 #> 1612 269  1.0260458  1.064172431 #> 1613 269  1.0677512  1.088251055 #> 1614 269  1.0677512  1.136408303 #> 1615 270  1.1094566  1.160486927 #> 1616 270  1.0677512  1.136408303 #> 1617 270  1.0677512  1.088251055 #> 1618 270  1.1094566  1.064172431 #> 1619 270  1.1511620  1.088251055 #> 1620 270  1.1511620  1.136408303 #> 1621 271 -0.1000000  1.232722799 #> 1622 271 -0.1417054  1.208644175 #> 1623 271 -0.1417054  1.160486927 #> 1624 271 -0.1000000  1.136408303 #> 1625 271 -0.0582946  1.160486927 #> 1626 271 -0.0582946  1.208644175 #> 1627 272 -0.0165892  1.232722799 #> 1628 272 -0.0582946  1.208644175 #> 1629 272 -0.0582946  1.160486927 #> 1630 272 -0.0165892  1.136408303 #> 1631 272  0.0251162  1.160486927 #> 1632 272  0.0251162  1.208644175 #> 1633 273  0.0668216  1.232722799 #> 1634 273  0.0251162  1.208644175 #> 1635 273  0.0251162  1.160486927 #> 1636 273  0.0668216  1.136408303 #> 1637 273  0.1085270  1.160486927 #> 1638 273  0.1085270  1.208644175 #> 1639 274  0.1502324  1.232722799 #> 1640 274  0.1085270  1.208644175 #> 1641 274  0.1085270  1.160486927 #> 1642 274  0.1502324  1.136408303 #> 1643 274  0.1919378  1.160486927 #> 1644 274  0.1919378  1.208644175 #> 1645 275  0.2336432  1.232722799 #> 1646 275  0.1919378  1.208644175 #> 1647 275  0.1919378  1.160486927 #> 1648 275  0.2336432  1.136408303 #> 1649 275  0.2753486  1.160486927 #> 1650 275  0.2753486  1.208644175 #> 1651 276  0.3170540  1.232722799 #> 1652 276  0.2753486  1.208644175 #> 1653 276  0.2753486  1.160486927 #> 1654 276  0.3170540  1.136408303 #> 1655 276  0.3587594  1.160486927 #> 1656 276  0.3587594  1.208644175 #> 1657 277  0.4004648  1.232722799 #> 1658 277  0.3587594  1.208644175 #> 1659 277  0.3587594  1.160486927 #> 1660 277  0.4004648  1.136408303 #> 1661 277  0.4421702  1.160486927 #> 1662 277  0.4421702  1.208644175 #> 1663 278  0.4838756  1.232722799 #> 1664 278  0.4421702  1.208644175 #> 1665 278  0.4421702  1.160486927 #> 1666 278  0.4838756  1.136408303 #> 1667 278  0.5255810  1.160486927 #> 1668 278  0.5255810  1.208644175 #> 1669 279  0.5672864  1.232722799 #> 1670 279  0.5255810  1.208644175 #> 1671 279  0.5255810  1.160486927 #> 1672 279  0.5672864  1.136408303 #> 1673 279  0.6089918  1.160486927 #> 1674 279  0.6089918  1.208644175 #> 1675 280  0.6506972  1.232722799 #> 1676 280  0.6089918  1.208644175 #> 1677 280  0.6089918  1.160486927 #> 1678 280  0.6506972  1.136408303 #> 1679 280  0.6924026  1.160486927 #> 1680 280  0.6924026  1.208644175 #> 1681 281  0.7341080  1.232722799 #> 1682 281  0.6924026  1.208644175 #> 1683 281  0.6924026  1.160486927 #> 1684 281  0.7341080  1.136408303 #> 1685 281  0.7758134  1.160486927 #> 1686 281  0.7758134  1.208644175 #> 1687 282  0.8175188  1.232722799 #> 1688 282  0.7758134  1.208644175 #> 1689 282  0.7758134  1.160486927 #> 1690 282  0.8175188  1.136408303 #> 1691 282  0.8592242  1.160486927 #> 1692 282  0.8592242  1.208644175 #> 1693 283  0.9009296  1.232722799 #> 1694 283  0.8592242  1.208644175 #> 1695 283  0.8592242  1.160486927 #> 1696 283  0.9009296  1.136408303 #> 1697 283  0.9426350  1.160486927 #> 1698 283  0.9426350  1.208644175 #> 1699 284  0.9843404  1.232722799 #> 1700 284  0.9426350  1.208644175 #> 1701 284  0.9426350  1.160486927 #> 1702 284  0.9843404  1.136408303 #> 1703 284  1.0260458  1.160486927 #> 1704 284  1.0260458  1.208644175 #> 1705 285  1.0677512  1.232722799 #> 1706 285  1.0260458  1.208644175 #> 1707 285  1.0260458  1.160486927 #> 1708 285  1.0677512  1.136408303 #> 1709 285  1.1094566  1.160486927 #> 1710 285  1.1094566  1.208644175 #> 1711 286 -0.0582946  1.304958671 #> 1712 286 -0.1000000  1.280880047 #> 1713 286 -0.1000000  1.232722799 #> 1714 286 -0.0582946  1.208644175 #> 1715 286 -0.0165892  1.232722799 #> 1716 286 -0.0165892  1.280880047 #> 1717 287  0.0251162  1.304958671 #> 1718 287 -0.0165892  1.280880047 #> 1719 287 -0.0165892  1.232722799 #> 1720 287  0.0251162  1.208644175 #> 1721 287  0.0668216  1.232722799 #> 1722 287  0.0668216  1.280880047 #> 1723 288  0.1085270  1.304958671 #> 1724 288  0.0668216  1.280880047 #> 1725 288  0.0668216  1.232722799 #> 1726 288  0.1085270  1.208644175 #> 1727 288  0.1502324  1.232722799 #> 1728 288  0.1502324  1.280880047 #> 1729 289  0.1919378  1.304958671 #> 1730 289  0.1502324  1.280880047 #> 1731 289  0.1502324  1.232722799 #> 1732 289  0.1919378  1.208644175 #> 1733 289  0.2336432  1.232722799 #> 1734 289  0.2336432  1.280880047 #> 1735 290  0.2753486  1.304958671 #> 1736 290  0.2336432  1.280880047 #> 1737 290  0.2336432  1.232722799 #> 1738 290  0.2753486  1.208644175 #> 1739 290  0.3170540  1.232722799 #> 1740 290  0.3170540  1.280880047 #> 1741 291  0.3587594  1.304958671 #> 1742 291  0.3170540  1.280880047 #> 1743 291  0.3170540  1.232722799 #> 1744 291  0.3587594  1.208644175 #> 1745 291  0.4004648  1.232722799 #> 1746 291  0.4004648  1.280880047 #> 1747 292  0.4421702  1.304958671 #> 1748 292  0.4004648  1.280880047 #> 1749 292  0.4004648  1.232722799 #> 1750 292  0.4421702  1.208644175 #> 1751 292  0.4838756  1.232722799 #> 1752 292  0.4838756  1.280880047 #> 1753 293  0.5255810  1.304958671 #> 1754 293  0.4838756  1.280880047 #> 1755 293  0.4838756  1.232722799 #> 1756 293  0.5255810  1.208644175 #> 1757 293  0.5672864  1.232722799 #> 1758 293  0.5672864  1.280880047 #> 1759 294  0.6089918  1.304958671 #> 1760 294  0.5672864  1.280880047 #> 1761 294  0.5672864  1.232722799 #> 1762 294  0.6089918  1.208644175 #> 1763 294  0.6506972  1.232722799 #> 1764 294  0.6506972  1.280880047 #> 1765 295  0.6924026  1.304958671 #> 1766 295  0.6506972  1.280880047 #> 1767 295  0.6506972  1.232722799 #> 1768 295  0.6924026  1.208644175 #> 1769 295  0.7341080  1.232722799 #> 1770 295  0.7341080  1.280880047 #> 1771 296  0.7758134  1.304958671 #> 1772 296  0.7341080  1.280880047 #> 1773 296  0.7341080  1.232722799 #> 1774 296  0.7758134  1.208644175 #> 1775 296  0.8175188  1.232722799 #> 1776 296  0.8175188  1.280880047 #> 1777 297  0.8592242  1.304958671 #> 1778 297  0.8175188  1.280880047 #> 1779 297  0.8175188  1.232722799 #> 1780 297  0.8592242  1.208644175 #> 1781 297  0.9009296  1.232722799 #> 1782 297  0.9009296  1.280880047 #> 1783 298  0.9426350  1.304958671 #> 1784 298  0.9009296  1.280880047 #> 1785 298  0.9009296  1.232722799 #> 1786 298  0.9426350  1.208644175 #> 1787 298  0.9843404  1.232722799 #> 1788 298  0.9843404  1.280880047 #> 1789 299  1.0260458  1.304958671 #> 1790 299  0.9843404  1.280880047 #> 1791 299  0.9843404  1.232722799 #> 1792 299  1.0260458  1.208644175 #> 1793 299  1.0677512  1.232722799 #> 1794 299  1.0677512  1.280880047 #> 1795 300  1.1094566  1.304958671 #> 1796 300  1.0677512  1.280880047 #> 1797 300  1.0677512  1.232722799 #> 1798 300  1.1094566  1.208644175 #> 1799 300  1.1511620  1.232722799 #> 1800 300  1.1511620  1.280880047"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Hexagonal Coordinates — gen_hex_coordinates","title":"Generate Hexagonal Coordinates — gen_hex_coordinates","text":"function generates coordinates hexagons passing hexagonal centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Hexagonal Coordinates — gen_hex_coordinates","text":"","code":"gen_hex_coordinates(all_centroids_df, hex_size = NA)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Hexagonal Coordinates — gen_hex_coordinates","text":"all_centroids_df dataset hexbin ID centroid coordinates. hex_size numeric value initializes radius outer circle surrounding hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Hexagonal Coordinates — gen_hex_coordinates","text":"list contains polygon id, x y coordinates (hex_poly_id, x, y respectively) hexagons.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_hex_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Hexagonal Coordinates — gen_hex_coordinates","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. all_centroids_df <- as.data.frame(do.call(cbind, centroid_list)) gen_hex_coordinates(all_centroids_df, hex_size = NA) #> Hex size is set to 0.2. #> $hex_poly_id #>   [1]  1  1  1  1  1  1  2  2  2  2  2  2  3  3  3  3  3  3  4  4  4  4  4  4  5 #>  [26]  5  5  5  5  5  6  6  6  6  6  6  7  7  7  7  7  7  8  8  8  8  8  8  9  9 #>  [51]  9  9  9  9 10 10 10 10 10 10 11 11 11 11 11 11 12 12 12 12 12 12 13 13 13 #>  [76] 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 16 16 16 16 16 16 17 17 17 17 #> [101] 17 17 18 18 18 18 18 18 19 19 19 19 19 19 20 20 20 20 20 20 21 21 21 21 21 #> [126] 21 22 22 22 22 22 22 23 23 23 23 23 23 24 24 24 24 24 24 25 25 25 25 25 25 #> [151] 26 26 26 26 26 26 27 27 27 27 27 27 28 28 28 28 28 28 29 29 29 29 29 29 30 #> [176] 30 30 30 30 30 31 31 31 31 31 31 32 32 32 32 32 32 33 33 33 33 33 33 34 34 #> [201] 34 34 34 34 35 35 35 35 35 35 36 36 36 36 36 36 37 37 37 37 37 37 38 38 38 #> [226] 38 38 38 39 39 39 39 39 39 40 40 40 40 40 40 #>  #> $x #>   [1]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #>   [7]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #>  [13]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #>  [19]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #>  [25]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #>  [31]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #>  [37]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #>  [43]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #>  [49]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #>  [55]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #>  [61]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #>  [67]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #>  [73]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #>  [79]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #>  [85]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #>  [91]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #>  [97]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #> [103]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #> [109]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #> [115]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #> [121]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #> [127]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #> [133]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #> [139]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #> [145]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #> [151]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #> [157]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #> [163]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #> [169]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #> [175]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #> [181]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #> [187]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #> [193]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #> [199]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #> [205]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #> [211]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #> [217]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #> [223]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #> [229]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #> [235]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #>  #> $y #>   [1] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>   [7] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [13] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [19] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [25] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [31]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [37]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [43]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [49]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [55]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [61]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [67]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [73]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [79]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [85]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [91]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #>  [97]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [103]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [109]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [115]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [121]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [127]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [133]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [139]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [145]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [151]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [157]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [163]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [169]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [175]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [181]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [187]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [193]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [199]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [205]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [211]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [217]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [223]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [229]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [235]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_proj_langevitour.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a specific projection of langevitour — gen_proj_langevitour","title":"Visualize a specific projection of langevitour — gen_proj_langevitour","text":"function visualize specific projection langevitour.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_proj_langevitour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a specific projection of langevitour — gen_proj_langevitour","text":"","code":"gen_proj_langevitour(points_df, projection, edge_df)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_proj_langevitour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a specific projection of langevitour — gen_proj_langevitour","text":"points_df tibble contains model data. projection tibble projection. edge_df tibble contains edge information (, ).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_proj_langevitour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize a specific projection of langevitour — gen_proj_langevitour","text":"ggplot object specific projection langevitour.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_proj_langevitour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize a specific projection of langevitour — gen_proj_langevitour","text":"","code":"umap_data_with_hb_id <- s_curve_obj$s_curve_umap_hb_obj$data_hb_id df_all <- dplyr::bind_cols(s_curve_noise_training |> dplyr::select(-ID), umap_data_with_hb_id) df_bin_centroids <- s_curve_obj$s_curve_umap_model_distance_df$df_bin_centroids #> Warning: Unknown or uninitialised column: `df_bin_centroids`. df_bin <- s_curve_obj$s_curve_umap_model_distance_df$df_bin #> Warning: Unknown or uninitialised column: `df_bin`. distance_df <- s_curve_obj$distance_df ### Define type column df <- df_all |>   dplyr::select(tidyselect::starts_with(\"x\")) |>   dplyr::mutate(type = \"data\") ## original dataset  df_b <- df_bin |>   dplyr::filter(hb_id %in% df_bin_centroids$hexID) |>   dplyr::mutate(type = \"model\") ## Data with summarized mean #> Error in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"NULL\"  ## Reorder the rows of df_b according to the hexID order in df_b_with_center_data df_b <- df_b[match(df_bin_centroids$hexID, df_b$hb_id),] |>   dplyr::select(-hb_id) #> Error: object 'df_b' not found  df_exe <- dplyr::bind_rows(df_b, df) #> Error: object 'df_b' not found benchmark <- 0.663  ## Set the maximum difference as the criteria distance_df_small_edges <- distance_df |>   dplyr::filter(distance < benchmark) |>   dplyr::select(-distance) #> Error in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"NULL\"  projection_df <- cbind( c(-0.17353,-0.02906,0.19857,0.00037,0.00131,-0.05019,0.03371), c(-0.10551,0.14829,-0.02063,0.02658,-0.03150,0.19698,0.00044))   gen_proj_langevitour(points_df = df_exe, projection = projection_df, edge_df = distance_df_small_edges) #> Error: object 'df_exe' not found"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_scaled_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaling the NLDR data — gen_scaled_data","title":"Scaling the NLDR data — gen_scaled_data","text":"function scales first second columns.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_scaled_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaling the NLDR data — gen_scaled_data","text":"","code":"gen_scaled_data(nldr_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_scaled_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaling the NLDR data — gen_scaled_data","text":"nldr_data tibble contains embedding components first second columns.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_scaled_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scaling the NLDR data — gen_scaled_data","text":"list tibble contains scaled first second columns NLDR data, numeric vectors representing limits original NLDR data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_scaled_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scaling the NLDR data — gen_scaled_data","text":"","code":"gen_scaled_data(nldr_data = scurve_umap) #> $scaled_nldr #> # A tibble: 1,000 × 3 #>     emb1  emb2    ID #>    <dbl> <dbl> <int> #>  1 0.277 0.913     1 #>  2 0.697 0.538     2 #>  3 0.779 0.399     3 #>  4 0.173 0.953     4 #>  5 0.218 0.983     5 #>  6 0.593 1.05      6 #>  7 0.180 0.210     7 #>  8 0.976 0.571     8 #>  9 0.803 0.829     9 #> 10 0.932 0.410    10 #> # ℹ 990 more rows #>  #> $lim1 #> [1] -9.146398  8.552211 #>  #> $lim2 #> [1] -10.36686  10.10691 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate evaluation metrics — gen_summary","title":"Generate evaluation metrics — gen_summary","text":"function generates evaluation data frame based provided data predictions.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate evaluation metrics — gen_summary","text":"","code":"gen_summary(test_data, prediction_df, df_bin, col_start = \"x\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate evaluation metrics — gen_summary","text":"test_data data set containing high-dimensional data along unique identifier. prediction_df data set 2D embeddings, IDs, predicted hexagonal IDs. df_bin data set averaged/weighted high-dimensional data. col_start text begin column name high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate evaluation metrics — gen_summary","text":"list contains Error, MSE AIC values.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/gen_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate evaluation metrics — gen_summary","text":"","code":"model <- fit_highd_model(training_data = s_curve_noise_training, x = \"UMAP1\", y = \"UMAP2\", nldr_df_with_id = s_curve_noise_umap_scaled, col_start_2d = \"UMAP\", col_start_highd = \"x\") #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. #> Buffer along the y-axis is set to 0.45. #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. df_bin_centroids <- model$df_bin_centroids df_bin <- model$df_bin pred_emb_list <- predict_emb(test_data = s_curve_noise_training, df_bin_centroids = df_bin_centroids, df_bin = df_bin, type_NLDR = \"UMAP\") pred_df_test <- as.data.frame(do.call(cbind, pred_emb_list)) gen_summary(test_data = s_curve_noise_training, prediction_df = pred_df_test, df_bin = df_bin, col_start = \"x\") #> $error #> [1] 63.83385 #>  #> $mse #> [1] 0.3229922 #>  #> $aic #> [1] -453.3167 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_edge_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Edge Information — generate_edge_info","title":"Generate Edge Information — generate_edge_info","text":"function generates edge information given triangular object, including coordinates vertices -relationships vertices.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_edge_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Edge Information — generate_edge_info","text":"","code":"generate_edge_info(triangular_object)"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_edge_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Edge Information — generate_edge_info","text":"triangular_object triangular object generate edge information.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_edge_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Edge Information — generate_edge_info","text":"data frame containing edge information, including -relationships corresponding x y coordinates.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_edge_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Edge Information — generate_edge_info","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,                                         x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,                                         y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled,                                              x = \"UMAP1\", y = \"UMAP2\",                                              num_bins_x = num_bins_x,                                              num_bins_y = num_bins_y,                                              x_start = NA, y_start = NA,                                              buffer_x = NA,                                              buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. all_centroids_df <- as.data.frame(do.call(cbind, centroid_list)) s_curve_noise_umap_scaled_rm_id <- s_curve_noise_umap_scaled |> dplyr::select(-ID) nldr_with_hb_id_list <- assign_data(nldr_df = s_curve_noise_umap_scaled_rm_id, centroid_df = all_centroids_df) umap_with_hb_id <- as.data.frame(do.call(cbind, nldr_with_hb_id_list)) std_counts_list <- compute_std_counts(nldr_df_with_hex_id = umap_with_hb_id) counts_df <- as.data.frame(do.call(cbind, std_counts_list)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df, counts_df = counts_df) tr1_object <- triangulate_bin_centroids(hex_bin_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") #> Warning: triangle collapsed! #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> Warning: three points coincide or are collinear! generate_edge_info(triangular_object = tr1_object) #> # A tibble: 21 × 6 #>     from    to x_from y_from  x_to  y_to #>    <int> <int>  <dbl>  <dbl> <dbl> <dbl> #>  1     1     3  0.173  -0.15 0.346  0.15 #>  2     2     4  0       0.15 0.173  0.45 #>  3     4     5  0.173   0.45 0.520  0.45 #>  4     3     5  0.346   0.15 0.520  0.45 #>  5     4     6  0.173   0.45 0.693  0.75 #>  6     6     7  0.693   0.75 0.866  1.05 #>  7     1     7  0.173  -0.15 0.866  1.05 #>  8     4     8  0.173   0.45 0.693  1.35 #>  9     6     8  0.693   0.75 0.693  1.35 #> 10     8     9  0.693   1.35 1.04   1.35 #> # ℹ 11 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_eval_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Evaluation Data Frame — generate_eval_df","title":"Generate Evaluation Data Frame — generate_eval_df","text":"function generates evaluation data frame based provided data predictions.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_eval_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Evaluation Data Frame — generate_eval_df","text":"","code":"generate_eval_df(test_data, prediction_df, df_bin, col_start = \"x\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_eval_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Evaluation Data Frame — generate_eval_df","text":"test_data data set containing high-dimensional data along unique identifier. prediction_df data set 2D embeddings, IDs, predicted hexagonal IDs. df_bin data set averaged/weighted high-dimensional data. col_start text begin column name high-D data","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_eval_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Evaluation Data Frame — generate_eval_df","text":"list contains MSE AIC values.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_eval_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Evaluation Data Frame — generate_eval_df","text":"","code":"training_data <- s_curve_noise_training num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. hex_bin_obj <- generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. all_centroids_df <- as.data.frame(do.call(cbind, hex_bin_obj$full_grid_hex_centroids)) counts_df <- as.data.frame(do.call(cbind, hex_bin_obj$hex_id_with_std_counts)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df, counts_df = counts_df) UMAP_data_with_hb_id <- hex_bin_obj$nldr_data_with_hex_id df_all <- dplyr::bind_cols(training_data |> dplyr::select(-ID), UMAP_data_with_hb_id) df_bin <- avg_highD_data(df_all, column_start_text = \"x\") pred_emb_list <- predict_2d_embeddings(test_data = s_curve_noise_training, df_bin_centroids = df_bin_centroids, df_bin = df_bin, type_NLDR = \"UMAP\") pred_df_test <- as.data.frame(do.call(cbind, pred_emb_list)) generate_eval_df(test_data = s_curve_noise_training, prediction_df = pred_df_test, df_bin = df_bin, col_start = \"x\") #> $mse #> [1] 0.3229922 #>  #> $aic #> [1] -453.3167 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Full Grid Centroids Coordinates — generate_full_grid_centroids","title":"Generate Full Grid Centroids Coordinates — generate_full_grid_centroids","text":"function generates possible centroids full grid based 2D embeddings.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Full Grid Centroids Coordinates — generate_full_grid_centroids","text":"","code":"generate_full_grid_centroids(   nldr_df,   x = \"UMAP1\",   y = \"UMAP2\",   num_bins_x,   num_bins_y,   x_start = NA,   y_start = NA,   buffer_x = NA,   buffer_y = NA,   hex_size = NA )"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Full Grid Centroids Coordinates — generate_full_grid_centroids","text":"nldr_df data frame containing 2D embeddings. x name column contains first 2D embeddings component. y name column contains second 2D embeddings component. num_bins_x Number bins along x-axis. num_bins_y Number bins along y-axis. x_start Starting point along x-axis hexagonal binning. y_start Starting point along y-axis hexagonal binning. buffer_x buffer size along x-axis. buffer_y buffer size along y-axis. hex_size numeric value initializes radius outer circle surrounding hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Full Grid Centroids Coordinates — generate_full_grid_centroids","text":"list contains hexIDs, x y coordinates (hexID, c_x, c_y respectively) hexagon bin centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Full Grid Centroids Coordinates — generate_full_grid_centroids","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> $hexID #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #>  #> $c_x #>  [1] -0.1732051  0.1732051  0.5196152  0.8660254  1.2124356  0.0000000 #>  [7]  0.3464102  0.6928203  1.0392305  1.3856406 -0.1732051  0.1732051 #> [13]  0.5196152  0.8660254  1.2124356  0.0000000  0.3464102  0.6928203 #> [19]  1.0392305  1.3856406 -0.1732051  0.1732051  0.5196152  0.8660254 #> [25]  1.2124356  0.0000000  0.3464102  0.6928203  1.0392305  1.3856406 #> [31] -0.1732051  0.1732051  0.5196152  0.8660254  1.2124356  0.0000000 #> [37]  0.3464102  0.6928203  1.0392305  1.3856406 #>  #> $c_y #>  [1] -0.15 -0.15 -0.15 -0.15 -0.15  0.15  0.15  0.15  0.15  0.15  0.45  0.45 #> [13]  0.45  0.45  0.45  0.75  0.75  0.75  0.75  0.75  1.05  1.05  1.05  1.05 #> [25]  1.05  1.35  1.35  1.35  1.35  1.35  1.65  1.65  1.65  1.65  1.65  1.95 #> [37]  1.95  1.95  1.95  1.95 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Full Grid Information Data Frame — generate_full_grid_info","title":"Generate Full Grid Information Data Frame — generate_full_grid_info","text":"function generates data frame containing coordinates identifiers hexagons, along additional information like counts polygon IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Full Grid Information Data Frame — generate_full_grid_info","text":"","code":"generate_full_grid_info(df_bin_centroids)"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Full Grid Information Data Frame — generate_full_grid_info","text":"df_bin_centroids data frame hexagonal bin centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Full Grid Information Data Frame — generate_full_grid_info","text":"data frame columns \"x\", \"y\", \"id\", \"c_x\", \"c_y\", \"hexID\", \"counts\", \"std_counts\", \"polygon_id\".","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_full_grid_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Full Grid Information Data Frame — generate_full_grid_info","text":"","code":"num_bins_x <- 4 shape_value <- 1.833091 hexbin_data_object <- extract_hexbin_centroids(nldr_df = s_curve_noise_umap, num_bins = num_bins_x, shape_val = shape_value) df_bin_centroids <- hexbin_data_object$hexdf_data generate_full_grid_info(df_bin_centroids) #> # A tibble: 300 × 9 #>        x     y    id   c_x   c_y hexID counts std_counts polygon_id #>    <dbl> <dbl> <int> <dbl> <dbl> <int>  <int>      <dbl>      <int> #>  1 -2.55 -5.29     1 -3.27 -5.74     1      2      0.222          1 #>  2 -2.55 -6.20     1 -3.27 -5.74     1      2      0.222          1 #>  3 -3.27 -6.65     1 -3.27 -5.74     1      2      0.222          1 #>  4 -3.99 -6.20     1 -3.27 -5.74     1      2      0.222          1 #>  5 -3.99 -5.29     1 -3.27 -5.74     1      2      0.222          1 #>  6 -3.27 -4.84     1 -3.27 -5.74     1      2      0.222          1 #>  7 -1.12 -5.29     2 -1.84 -5.74     2      6      0.667          2 #>  8 -1.12 -6.20     2 -1.84 -5.74     2      6      0.667          2 #>  9 -1.84 -6.65     2 -1.84 -5.74     2      6      0.667          2 #> 10 -2.55 -6.20     2 -1.84 -5.74     2      6      0.667          2 #> # ℹ 290 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_hex_binning_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Hexagonal Binning Info — generate_hex_binning_info","title":"Generate Hexagonal Binning Info — generate_hex_binning_info","text":"function generates list contains hexagonal binning information.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_hex_binning_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Hexagonal Binning Info — generate_hex_binning_info","text":"","code":"generate_hex_binning_info(   nldr_df,   x = \"UMAP1\",   y = \"UMAP2\",   num_bins_x,   num_bins_y,   x_start = NA,   y_start = NA,   buffer_x = NA,   buffer_y = NA,   hex_size = NA )"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_hex_binning_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Hexagonal Binning Info — generate_hex_binning_info","text":"nldr_df data frame containing 2D embeddings. x name column contains first 2D embeddings component. y name column contains second 2D embeddings component. num_bins_x Number bins along x-axis. num_bins_y Number bins along y-axis. x_start Starting point along x-axis hexagonal binning. y_start Starting point along y-axis hexagonal binning. buffer_x buffer size along x-axis. buffer_y buffer size along y-axis. hex_size numeric value initializes radius outer circle surrounding hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_hex_binning_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Hexagonal Binning Info — generate_hex_binning_info","text":"list contains hexagonal bin centroids (full_grid_hex_centroids), hexagonal coordinates full grid(full_grid_hex_poly_coordinates), 2D embeddings corresponding hexagon IDs (nldr_data_with_hex_id), hex bins corresponding standardise counts (hex_id_with_std_counts), total number hex bins(total_hex_bins\"), number non-empty hex bins (num_non_empty_bins) points within hexagon (points_in_hex_bins).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_hex_binning_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Hexagonal Binning Info — generate_hex_binning_info","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. #> $full_grid_hex_centroids #> $full_grid_hex_centroids$hexID #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #>  #> $full_grid_hex_centroids$c_x #>  [1] -0.1732051  0.1732051  0.5196152  0.8660254  1.2124356  0.0000000 #>  [7]  0.3464102  0.6928203  1.0392305  1.3856406 -0.1732051  0.1732051 #> [13]  0.5196152  0.8660254  1.2124356  0.0000000  0.3464102  0.6928203 #> [19]  1.0392305  1.3856406 -0.1732051  0.1732051  0.5196152  0.8660254 #> [25]  1.2124356  0.0000000  0.3464102  0.6928203  1.0392305  1.3856406 #> [31] -0.1732051  0.1732051  0.5196152  0.8660254  1.2124356  0.0000000 #> [37]  0.3464102  0.6928203  1.0392305  1.3856406 #>  #> $full_grid_hex_centroids$c_y #>  [1] -0.15 -0.15 -0.15 -0.15 -0.15  0.15  0.15  0.15  0.15  0.15  0.45  0.45 #> [13]  0.45  0.45  0.45  0.75  0.75  0.75  0.75  0.75  1.05  1.05  1.05  1.05 #> [25]  1.05  1.35  1.35  1.35  1.35  1.35  1.65  1.65  1.65  1.65  1.65  1.95 #> [37]  1.95  1.95  1.95  1.95 #>  #>  #> $full_grid_hex_poly_coordinates #> $full_grid_hex_poly_coordinates$hex_poly_id #>   [1]  1  1  1  1  1  1  2  2  2  2  2  2  3  3  3  3  3  3  4  4  4  4  4  4  5 #>  [26]  5  5  5  5  5  6  6  6  6  6  6  7  7  7  7  7  7  8  8  8  8  8  8  9  9 #>  [51]  9  9  9  9 10 10 10 10 10 10 11 11 11 11 11 11 12 12 12 12 12 12 13 13 13 #>  [76] 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 16 16 16 16 16 16 17 17 17 17 #> [101] 17 17 18 18 18 18 18 18 19 19 19 19 19 19 20 20 20 20 20 20 21 21 21 21 21 #> [126] 21 22 22 22 22 22 22 23 23 23 23 23 23 24 24 24 24 24 24 25 25 25 25 25 25 #> [151] 26 26 26 26 26 26 27 27 27 27 27 27 28 28 28 28 28 28 29 29 29 29 29 29 30 #> [176] 30 30 30 30 30 31 31 31 31 31 31 32 32 32 32 32 32 33 33 33 33 33 33 34 34 #> [201] 34 34 34 34 35 35 35 35 35 35 36 36 36 36 36 36 37 37 37 37 37 37 38 38 38 #> [226] 38 38 38 39 39 39 39 39 39 40 40 40 40 40 40 #>  #> $full_grid_hex_poly_coordinates$x #>   [1]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #>   [7]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #>  [13]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #>  [19]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #>  [25]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #>  [31]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #>  [37]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #>  [43]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #>  [49]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #>  [55]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #>  [61]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #>  [67]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #>  [73]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #>  [79]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #>  [85]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #>  [91]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #>  [97]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #> [103]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #> [109]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #> [115]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #> [121]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #> [127]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #> [133]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #> [139]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #> [145]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #> [151]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #> [157]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #> [163]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #> [169]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #> [175]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #> [181]  0.0000000  0.0000000 -0.1732051 -0.3464102 -0.3464102 -0.1732051 #> [187]  0.3464102  0.3464102  0.1732051  0.0000000  0.0000000  0.1732051 #> [193]  0.6928203  0.6928203  0.5196152  0.3464102  0.3464102  0.5196152 #> [199]  1.0392305  1.0392305  0.8660254  0.6928203  0.6928203  0.8660254 #> [205]  1.3856406  1.3856406  1.2124356  1.0392305  1.0392305  1.2124356 #> [211]  0.1732051  0.1732051  0.0000000 -0.1732051 -0.1732051  0.0000000 #> [217]  0.5196152  0.5196152  0.3464102  0.1732051  0.1732051  0.3464102 #> [223]  0.8660254  0.8660254  0.6928203  0.5196152  0.5196152  0.6928203 #> [229]  1.2124356  1.2124356  1.0392305  0.8660254  0.8660254  1.0392305 #> [235]  1.5588457  1.5588457  1.3856406  1.2124356  1.2124356  1.3856406 #>  #> $full_grid_hex_poly_coordinates$y #>   [1] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>   [7] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [13] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [19] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [25] -0.05040708 -0.24959292 -0.34918584 -0.24959292 -0.05040708  0.04918584 #>  [31]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [37]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [43]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [49]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [55]  0.24959292  0.05040708 -0.04918584  0.05040708  0.24959292  0.34918584 #>  [61]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [67]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [73]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [79]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [85]  0.54959292  0.35040708  0.25081416  0.35040708  0.54959292  0.64918584 #>  [91]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #>  [97]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [103]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [109]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [115]  0.84959292  0.65040708  0.55081416  0.65040708  0.84959292  0.94918584 #> [121]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [127]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [133]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [139]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [145]  1.14959292  0.95040708  0.85081416  0.95040708  1.14959292  1.24918584 #> [151]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [157]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [163]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [169]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [175]  1.44959292  1.25040708  1.15081416  1.25040708  1.44959292  1.54918584 #> [181]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [187]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [193]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [199]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [205]  1.74959292  1.55040708  1.45081416  1.55040708  1.74959292  1.84918584 #> [211]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [217]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [223]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [229]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #> [235]  2.04959292  1.85040708  1.75081416  1.85040708  2.04959292  2.14918584 #>  #>  #> $nldr_data_with_hex_id #> $nldr_data_with_hex_id$UMAP1 #>  [1] 0.08044271 0.73857864 0.83992020 0.16719939 0.26292782 0.83820653 #>  [7] 0.73364820 0.62693057 0.80998347 0.90342138 0.64241759 0.05182936 #> [13] 0.96228699 0.07223295 0.64916340 0.80783543 0.13518498 0.80668446 #> [19] 0.60311661 0.16150976 0.71326033 0.09405763 0.08900367 0.77510396 #> [25] 0.79296306 0.28575187 0.46806684 0.57541142 0.21053454 0.62412077 #> [31] 0.76738169 0.76427076 0.64842247 0.03170275 0.96450414 0.10117880 #> [37] 0.71265285 0.82904448 0.81275032 0.00000000 0.38392618 0.82638316 #> [43] 0.29256853 0.84482412 0.79995094 0.69339205 0.13459287 0.04209521 #> [49] 0.94245034 0.05349536 0.68677026 0.77828853 0.75504949 0.23125328 #> [55] 0.76831122 0.69843891 0.72681720 0.99318862 0.96227596 0.39315580 #> [61] 0.74175661 0.94650462 0.50932690 1.00000000 0.33548077 0.25450458 #> [67] 0.88588122 0.72192354 0.68029522 0.92537063 0.80964667 0.49582819 #> [73] 0.16301062 0.29499615 0.91053035 #>  #> $nldr_data_with_hex_id$UMAP2 #>  [1] 0.274498327 0.859778569 0.929412446 0.037066861 0.341734583 1.720961652 #>  [7] 0.833935370 0.618409921 0.868291303 1.600664528 0.631646064 0.320865388 #> [13] 1.546732900 0.218331864 0.593427000 1.374772146 0.335559538 1.381019256 #> [19] 0.597381477 0.009905107 0.797282390 0.058760856 0.252258947 1.730112607 #> [25] 1.100876246 0.202379969 0.482713207 0.708486670 0.151933039 0.712391079 #> [31] 1.018811832 1.552630670 0.661926514 0.303630086 1.665355817 0.050909321 #> [37] 1.539719959 1.722765733 1.732050808 0.271778584 0.390190144 1.011632238 #> [43] 0.138015108 0.983163036 0.964486583 1.448210796 0.000000000 0.257916294 #> [49] 1.680924200 0.187982579 0.778563498 0.839937252 1.670893354 0.061042472 #> [55] 1.497157149 1.621642749 0.931757885 1.521102615 1.546125959 0.328235991 #> [61] 1.681926517 1.524113512 0.617404710 1.625538768 0.278688714 0.063074584 #> [67] 1.408512652 0.952956061 1.508729997 1.455380663 1.529334517 0.604985028 #> [73] 0.030266486 0.117297635 1.445460921 #>  #> $nldr_data_with_hex_id$hb_id #>  [1]  6 18 24  2 12 34 18 18 18 34 18 12 34  6 18 28 12 28 13  2 18  6  6 34 24 #> [26]  7 13 18  7 18 24 34 18  6 34  6 34 34 34  6 13 24  7 24 24 28  2  6 34  6 #> [51] 18 18 34  7 28 34 24 29 34 13 34 34 13 34  7  7 29 24 28 29 34 13  2  7 29 #>  #>  #> $hex_id_with_std_counts #> $hex_id_with_std_counts$hb_id #>  [1]  2  6  7 12 13 18 24 28 29 34 #>  #> $hex_id_with_std_counts$std_counts #>  [1] 0.2352941 0.5294118 0.4117647 0.1764706 0.3529412 0.7058824 0.4705882 #>  [8] 0.2941176 0.2352941 1.0000000 #>  #>  #> $total_hex_bins #> [1] 40 #>  #> $num_non_empty_bins #> [1] 10 #>  #> $points_in_hex_bins #> $points_in_hex_bins$hexID #>  [1]  6 18 24  2 12 34 28 13  7 29 #>  #> $points_in_hex_bins$pts_list #> $points_in_hex_bins$pts_list$`Points in hexID: 6` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 18` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 24` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 2` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 12` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 34` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 28` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 13` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 7` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $points_in_hex_bins$pts_list$`Points in hexID: 29` #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #>  #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_scaled_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaling the 2D embeddings — generate_scaled_data","title":"Scaling the 2D embeddings — generate_scaled_data","text":"function scales 2D embeddings.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_scaled_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaling the 2D embeddings — generate_scaled_data","text":"","code":"generate_scaled_data(nldr_df, x = \"UMAP1\", y = \"UMAP2\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_scaled_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaling the 2D embeddings — generate_scaled_data","text":"nldr_df data frame containing 2D embeddings. x name column contains first 2D embeddings component. y name column contains second 2D embeddings component.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_scaled_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scaling the 2D embeddings — generate_scaled_data","text":"list contains scaled 2D embeddings.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/generate_scaled_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scaling the 2D embeddings — generate_scaled_data","text":"","code":"generate_scaled_data(nldr_df = s_curve_noise_umap, x = \"UMAP1\", y = \"UMAP2\") #> $scaled_UMAP1 #>  [1] 0.08044271 0.73857864 0.83992020 0.16719939 0.26292782 0.83820653 #>  [7] 0.73364820 0.62693057 0.80998347 0.90342138 0.64241759 0.05182936 #> [13] 0.96228699 0.07223295 0.64916340 0.80783543 0.13518498 0.80668446 #> [19] 0.60311661 0.16150976 0.71326033 0.09405763 0.08900367 0.77510396 #> [25] 0.79296306 0.28575187 0.46806684 0.57541142 0.21053454 0.62412077 #> [31] 0.76738169 0.76427076 0.64842247 0.03170275 0.96450414 0.10117880 #> [37] 0.71265285 0.82904448 0.81275032 0.00000000 0.38392618 0.82638316 #> [43] 0.29256853 0.84482412 0.79995094 0.69339205 0.13459287 0.04209521 #> [49] 0.94245034 0.05349536 0.68677026 0.77828853 0.75504949 0.23125328 #> [55] 0.76831122 0.69843891 0.72681720 0.99318862 0.96227596 0.39315580 #> [61] 0.74175661 0.94650462 0.50932690 1.00000000 0.33548077 0.25450458 #> [67] 0.88588122 0.72192354 0.68029522 0.92537063 0.80964667 0.49582819 #> [73] 0.16301062 0.29499615 0.91053035 #>  #> $scaled_UMAP2 #>  [1] 0.274498327 0.859778569 0.929412446 0.037066861 0.341734583 1.720961652 #>  [7] 0.833935370 0.618409921 0.868291303 1.600664528 0.631646064 0.320865388 #> [13] 1.546732900 0.218331864 0.593427000 1.374772146 0.335559538 1.381019256 #> [19] 0.597381477 0.009905107 0.797282390 0.058760856 0.252258947 1.730112607 #> [25] 1.100876246 0.202379969 0.482713207 0.708486670 0.151933039 0.712391079 #> [31] 1.018811832 1.552630670 0.661926514 0.303630086 1.665355817 0.050909321 #> [37] 1.539719959 1.722765733 1.732050808 0.271778584 0.390190144 1.011632238 #> [43] 0.138015108 0.983163036 0.964486583 1.448210796 0.000000000 0.257916294 #> [49] 1.680924200 0.187982579 0.778563498 0.839937252 1.670893354 0.061042472 #> [55] 1.497157149 1.621642749 0.931757885 1.521102615 1.546125959 0.328235991 #> [61] 1.681926517 1.524113512 0.617404710 1.625538768 0.278688714 0.063074584 #> [67] 1.408512652 0.952956061 1.508729997 1.455380663 1.529334517 0.604985028 #> [73] 0.030266486 0.117297635 1.445460921 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_hexgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a hexgrid plot — geom_hexgrid","title":"Create a hexgrid plot — geom_hexgrid","text":"Create hexgrid plot","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_hexgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a hexgrid plot — geom_hexgrid","text":"","code":"geom_hexgrid(   mapping = NULL,   data = NULL,   stat = \"hexgrid\",   position = \"identity\",   show.legend = NA,   na.rm = FALSE,   inherit.aes = TRUE,   ... )"},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_hexgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a hexgrid plot — geom_hexgrid","text":"mapping Aesthetic mappings plot. data data plotted. stat statistical transformation applied. position position adjustment applied. show.legend Whether show legend layer. na.rm Whether remove missing values. inherit.aes Whether inherit aesthetics plot layer. ... Additional arguments passed `layer` function.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_hexgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a hexgrid plot — geom_hexgrid","text":"`ggplot2` layer object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_hexgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a hexgrid plot — geom_hexgrid","text":"","code":"df_bin_centroids <- scurve_model_obj$model_2d |> dplyr::filter(n_h > 10) ggplot2::ggplot() + geom_hexgrid(data = df_bin_centroids, mapping = ggplot2::aes(x = c_x, y = c_y))"},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_trimesh.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a trimesh plot — geom_trimesh","title":"Create a trimesh plot — geom_trimesh","text":"Create trimesh plot","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_trimesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a trimesh plot — geom_trimesh","text":"","code":"geom_trimesh(   mapping = NULL,   data = NULL,   stat = \"trimesh\",   position = \"identity\",   show.legend = NA,   na.rm = FALSE,   inherit.aes = TRUE,   ... )"},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_trimesh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a trimesh plot — geom_trimesh","text":"mapping Aesthetic mappings plot. data data plotted. stat statistical transformation applied. position position adjustment applied. show.legend Whether show legend layer. na.rm Whether remove missing values. inherit.aes Whether inherit aesthetics plot layer. ... Additional arguments passed `layer` function.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_trimesh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a trimesh plot — geom_trimesh","text":"`ggplot2` layer object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/geom_trimesh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a trimesh plot — geom_trimesh","text":"","code":"df_bin_centroids <- scurve_model_obj$model_2d |> dplyr::filter(n_h > 10) ggplot2::ggplot() + geom_trimesh(data = df_bin_centroids, mapping = ggplot2::aes(x = c_x, y = c_y))"},{"path":"https://jayanilakshika.github.io/quollr/reference/get_min_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indices of all minimum distances — get_min_indices","title":"Get indices of all minimum distances — get_min_indices","text":"function returns indices minimum distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/get_min_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indices of all minimum distances — get_min_indices","text":"","code":"get_min_indices(x)"},{"path":"https://jayanilakshika.github.io/quollr/reference/get_min_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indices of all minimum distances — get_min_indices","text":"x numeric vector.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/get_min_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indices of all minimum distances — get_min_indices","text":"numeric vector containing indices minimum distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/get_min_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indices of all minimum distances — get_min_indices","text":"","code":"x <- c(1, 2, 1, 3) get_min_indices(x) #> [1] 1"},{"path":"https://jayanilakshika.github.io/quollr/reference/get_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Projection for High-Dimensional Data — get_projection","title":"Compute Projection for High-Dimensional Data — get_projection","text":"Compute Projection High-Dimensional Data","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/get_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Projection for High-Dimensional Data — get_projection","text":"","code":"get_projection(   projection,   proj_scale,   highd_data,   model_highd,   trimesh_data,   axis_param )"},{"path":"https://jayanilakshika.github.io/quollr/reference/get_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Projection for High-Dimensional Data — get_projection","text":"projection matrix data frame representing projection. proj_scale Scaling factor projection. highd_data data frame matrix high-dimensional data. model_highd model object function used high-dimensional transformation. trimesh_data data frame defining transformation one space another. axis_param list parameters axis configuration.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/get_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Projection for High-Dimensional Data — get_projection","text":"data frame matrix transformed projection.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/get_projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Projection for High-Dimensional Data — get_projection","text":"","code":"projection_df <- cbind( c(-0.17353,-0.02906,0.19857,0.00037,0.00131,-0.05019,0.03371), c(-0.10551,0.14829,-0.02063,0.02658,-0.03150,0.19698,0.00044))  df_bin <- scurve_model_obj$model_highd edge_data <- scurve_model_obj$trimesh_data  get_projection(projection = projection_df, proj_scale = 1, highd_data = scurve, model_highd = df_bin, trimesh_data = edge_data, axis_param = list(limits = 1, axis_scaled = 3, axis_pos_x = -0.72, axis_pos_y = -0.72,threshold = 0.09)) #> New names: #> • `` -> `...1` #> • `` -> `...2` #> New names: #> • `` -> `...1` #> • `` -> `...2` #> $projected_df #> # A tibble: 1,000 × 3 #>       proj1  proj2    ID #>       <dbl>  <dbl> <int> #>  1 -0.400   0.182      1 #>  2  0.00561 0.0247     2 #>  3  0.187   0.174      3 #>  4 -0.276   0.231      4 #>  5 -0.320   0.243      5 #>  6 -0.509   0.221      6 #>  7  0.0934  0.0246     7 #>  8 -0.0438  0.294      8 #>  9 -0.284   0.116      9 #> 10  0.147   0.289     10 #> # ℹ 990 more rows #>  #> $model_df #> # A tibble: 346 × 14 #>     from    to x_from y_from  x_to   y_to from_count to_count from_reindexed #>    <int> <int>  <dbl>  <dbl> <dbl>  <dbl>      <dbl>    <dbl>          <int> #>  1    35    49  0.234 0.0288 0.192 0.101          10       11              2 #>  2    34    35  0.150 0.0288 0.234 0.0288          1       10              1 #>  3    49    65  0.192 0.101  0.234 0.173          11       10              8 #>  4    35    36  0.234 0.0288 0.317 0.0288         10        8              2 #>  5    64    65  0.150 0.173  0.234 0.173           5       10             17 #>  6    35    50  0.234 0.0288 0.275 0.101          10        9              2 #>  7    64    79  0.150 0.173  0.192 0.245           5       10             17 #>  8    36    50  0.317 0.0288 0.275 0.101           8        9              3 #>  9    78    94  0.109 0.245  0.150 0.318           1       11             27 #> 10    78    79  0.109 0.245  0.192 0.245           1       10             27 #> # ℹ 336 more rows #> # ℹ 5 more variables: to_reindexed <int>, proj1_from <dbl>, proj2_from <dbl>, #> #   proj1_to <dbl>, proj2_to <dbl> #>  #> $axes #>       x1    y1        x2        y2   distance #> x1 -0.72 -0.72 -0.806765 -0.772755 0.10154435 #> x3 -0.72 -0.72 -0.620715 -0.730315 0.09981939 #> x6 -0.72 -0.72 -0.745095 -0.621510 0.10163680 #>  #> $circle #>            c1         c2 #> 1  -0.5533333 -0.7200000 #> 2  -0.5547017 -0.6986871 #> 3  -0.5587842 -0.6777242 #> 4  -0.5655139 -0.6574555 #> 5  -0.5747802 -0.6382137 #> 6  -0.5864311 -0.6203149 #> 7  -0.6002751 -0.6040529 #> 8  -0.6160850 -0.5896948 #> 9  -0.6336012 -0.5774762 #> 10 -0.6525361 -0.5675979 #> 11 -0.6725787 -0.5602220 #> 12 -0.6934000 -0.5554697 #> 13 -0.7146581 -0.5534190 #> 14 -0.7360038 -0.5541035 #> 15 -0.7570868 -0.5575120 #> 16 -0.7775608 -0.5635886 #> 17 -0.7970897 -0.5722334 #> 18 -0.8153528 -0.5833046 #> 19 -0.8320501 -0.5966203 #> 20 -0.8469077 -0.6119619 #> 21 -0.8596814 -0.6290775 #> 22 -0.8701615 -0.6476860 #> 23 -0.8781760 -0.6674820 #> 24 -0.8835932 -0.6881402 #> 25 -0.8863242 -0.7093216 #> 26 -0.8863242 -0.7306784 #> 27 -0.8835932 -0.7518598 #> 28 -0.8781760 -0.7725180 #> 29 -0.8701615 -0.7923140 #> 30 -0.8596814 -0.8109225 #> 31 -0.8469077 -0.8280381 #> 32 -0.8320501 -0.8433797 #> 33 -0.8153528 -0.8566954 #> 34 -0.7970897 -0.8677666 #> 35 -0.7775608 -0.8764114 #> 36 -0.7570868 -0.8824880 #> 37 -0.7360038 -0.8858965 #> 38 -0.7146581 -0.8865810 #> 39 -0.6934000 -0.8845303 #> 40 -0.6725787 -0.8797780 #> 41 -0.6525361 -0.8724021 #> 42 -0.6336012 -0.8625238 #> 43 -0.6160850 -0.8503052 #> 44 -0.6002751 -0.8359471 #> 45 -0.5864311 -0.8196851 #> 46 -0.5747802 -0.8017863 #> 47 -0.5655139 -0.7825445 #> 48 -0.5587842 -0.7622758 #> 49 -0.5547017 -0.7413129 #> 50 -0.5533333 -0.7200000 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.highd_vis_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate evaluation metrics for a hex_model object — glance.highd_vis_model","title":"Generate evaluation metrics for a hex_model object — glance.highd_vis_model","text":"function computes evaluation metrics (Error HBE) comparing high-dimensional data predictions obtained hex_model object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.highd_vis_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate evaluation metrics for a hex_model object — glance.highd_vis_model","text":"","code":"# S3 method for class 'highd_vis_model' glance(x, highd_data, ...)"},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.highd_vis_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate evaluation metrics for a hex_model object — glance.highd_vis_model","text":"x object class hex_model generated fit_highd_model(). highd_data data frame tibble containing original high-dimensional data ID column. ... Additional arguments (currently unused).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.highd_vis_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate evaluation metrics for a hex_model object — glance.highd_vis_model","text":"tibble contains Error, MSE values.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.highd_vis_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate evaluation metrics for a hex_model object — glance.highd_vis_model","text":"","code":"# Assuming 'fit' is a hex_model object and 'scurve' contains the original data: fit <- fit_highd_model(highd_data = scurve, nldr_data = scurve_umap, b1 = 30, q = 0.1, hd_thresh = 5) #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> ✔ Model generated successfully!!! glance(fit, highd_data = scurve) #> # A tibble: 1 × 2 #>   Error   HBE #>   <dbl> <dbl> #> 1 1472.  1.05"},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 generic for glance — glance","title":"S3 generic for glance — glance","text":"generic function computing evaluation metrics different objects.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 generic for glance — glance","text":"","code":"glance(x, ...)"},{"path":"https://jayanilakshika.github.io/quollr/reference/glance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 generic for glance — glance","text":"x object compute evaluation metrics . ... Additional arguments passed methods.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/group_hex_pts.html","id":null,"dir":"Reference","previous_headings":"","what":"Grouped points in each hexagon — group_hex_pts","title":"Grouped points in each hexagon — group_hex_pts","text":"function maps points corresponding hexagonal bins.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/group_hex_pts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grouped points in each hexagon — group_hex_pts","text":"","code":"group_hex_pts(scaled_nldr_hexid)"},{"path":"https://jayanilakshika.github.io/quollr/reference/group_hex_pts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grouped points in each hexagon — group_hex_pts","text":"scaled_nldr_hexid tibble contains scaled embedding hexagonal bin IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/group_hex_pts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grouped points in each hexagon — group_hex_pts","text":"tibble hexagonal bin IDs (h) corresponding points.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/group_hex_pts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grouped points in each hexagon — group_hex_pts","text":"","code":"umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id group_hex_pts(scaled_nldr_hexid = umap_with_hb_id) #> # A tibble: 137 × 2 #>        h pts_list   #>    <int> <list>     #>  1    34 <int [1]>  #>  2    35 <int [10]> #>  3    36 <int [8]>  #>  4    37 <int [8]>  #>  5    38 <int [2]>  #>  6    41 <int [2]>  #>  7    42 <int [12]> #>  8    49 <int [11]> #>  9    50 <int [9]>  #> 10    51 <int [4]>  #> # ℹ 127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/hex_binning.html","id":null,"dir":"Reference","previous_headings":"","what":"Hexagonal binning — hex_binning","title":"Hexagonal binning — hex_binning","text":"function generates hexagonal object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/hex_binning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hexagonal binning — hex_binning","text":"","code":"hex_binning(nldr_scaled_obj, b1 = 30, q = 0.1)"},{"path":"https://jayanilakshika.github.io/quollr/reference/hex_binning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hexagonal binning — hex_binning","text":"nldr_scaled_obj list tibble contains scaled first second columns NLDR data, numeric vectors representing limits original NLDR data. b1 Number bins along x axis. q buffer amount proportion data range.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/hex_binning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hexagonal binning — hex_binning","text":"object contains numeric vector contains binwidths (a1), vertical distance (a2), bins along x y axes respectively (bins), numeric vector contains hexagonal starting point coordinates hexagonal bin centroids (centroids), hexagonal coordinates full grid (hex_poly), embedding components corresponding hexagon IDs (data_hb_id), hex bins corresponding standardise counts (std_cts), total number hex bins (b), number non-empty hex bins (m) points within hexagon (pts_bins).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/hex_binning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hexagonal binning — hex_binning","text":"","code":"hex_binning(nldr_scaled_obj = scurve_model_obj$nldr_scaled_obj, b1 = 30, q = 0.1) #> $a1 #> [1] 0.04063603 #>  #> $a2 #> [1] 0.03519184 #>  #> $bins #> [1] 30 40 #>  #> $start_point #> [1] -0.1000000 -0.1156801 #>  #> $centroids #> # A tibble: 1,200 × 3 #>        h     c_x    c_y #>    <int>   <dbl>  <dbl> #>  1     1 -0.1    -0.116 #>  2     2 -0.0594 -0.116 #>  3     3 -0.0187 -0.116 #>  4     4  0.0219 -0.116 #>  5     5  0.0625 -0.116 #>  6     6  0.103  -0.116 #>  7     7  0.144  -0.116 #>  8     8  0.184  -0.116 #>  9     9  0.225  -0.116 #> 10    10  0.266  -0.116 #> # ℹ 1,190 more rows #>  #> $hex_poly #>         h            x            y #> 1       1 -0.100000000 -0.092218919 #> 2       1 -0.120318015 -0.103949531 #> 3       1 -0.120318015 -0.127410754 #> 4       1 -0.100000000 -0.139141366 #> 5       1 -0.079681985 -0.127410754 #> 6       1 -0.079681985 -0.103949531 #> 7       2 -0.059363969 -0.092218919 #> 8       2 -0.079681985 -0.103949531 #> 9       2 -0.079681985 -0.127410754 #> 10      2 -0.059363969 -0.139141366 #> 11      2 -0.039045954 -0.127410754 #> 12      2 -0.039045954 -0.103949531 #> 13      3 -0.018727938 -0.092218919 #> 14      3 -0.039045954 -0.103949531 #> 15      3 -0.039045954 -0.127410754 #> 16      3 -0.018727938 -0.139141366 #> 17      3  0.001590077 -0.127410754 #> 18      3  0.001590077 -0.103949531 #> 19      4  0.021908092 -0.092218919 #> 20      4  0.001590077 -0.103949531 #> 21      4  0.001590077 -0.127410754 #> 22      4  0.021908092 -0.139141366 #> 23      4  0.042226108 -0.127410754 #> 24      4  0.042226108 -0.103949531 #> 25      5  0.062544123 -0.092218919 #> 26      5  0.042226108 -0.103949531 #> 27      5  0.042226108 -0.127410754 #> 28      5  0.062544123 -0.139141366 #> 29      5  0.082862139 -0.127410754 #> 30      5  0.082862139 -0.103949531 #> 31      6  0.103180154 -0.092218919 #> 32      6  0.082862139 -0.103949531 #> 33      6  0.082862139 -0.127410754 #> 34      6  0.103180154 -0.139141366 #> 35      6  0.123498170 -0.127410754 #> 36      6  0.123498170 -0.103949531 #> 37      7  0.143816185 -0.092218919 #> 38      7  0.123498170 -0.103949531 #> 39      7  0.123498170 -0.127410754 #> 40      7  0.143816185 -0.139141366 #> 41      7  0.164134200 -0.127410754 #> 42      7  0.164134200 -0.103949531 #> 43      8  0.184452216 -0.092218919 #> 44      8  0.164134200 -0.103949531 #> 45      8  0.164134200 -0.127410754 #> 46      8  0.184452216 -0.139141366 #> 47      8  0.204770231 -0.127410754 #> 48      8  0.204770231 -0.103949531 #> 49      9  0.225088247 -0.092218919 #> 50      9  0.204770231 -0.103949531 #> 51      9  0.204770231 -0.127410754 #> 52      9  0.225088247 -0.139141366 #> 53      9  0.245406262 -0.127410754 #> 54      9  0.245406262 -0.103949531 #> 55     10  0.265724277 -0.092218919 #> 56     10  0.245406262 -0.103949531 #> 57     10  0.245406262 -0.127410754 #> 58     10  0.265724277 -0.139141366 #> 59     10  0.286042293 -0.127410754 #> 60     10  0.286042293 -0.103949531 #> 61     11  0.306360308 -0.092218919 #> 62     11  0.286042293 -0.103949531 #> 63     11  0.286042293 -0.127410754 #> 64     11  0.306360308 -0.139141366 #> 65     11  0.326678324 -0.127410754 #> 66     11  0.326678324 -0.103949531 #> 67     12  0.346996339 -0.092218919 #> 68     12  0.326678324 -0.103949531 #> 69     12  0.326678324 -0.127410754 #> 70     12  0.346996339 -0.139141366 #> 71     12  0.367314354 -0.127410754 #> 72     12  0.367314354 -0.103949531 #> 73     13  0.387632370 -0.092218919 #> 74     13  0.367314354 -0.103949531 #> 75     13  0.367314354 -0.127410754 #> 76     13  0.387632370 -0.139141366 #> 77     13  0.407950385 -0.127410754 #> 78     13  0.407950385 -0.103949531 #> 79     14  0.428268401 -0.092218919 #> 80     14  0.407950385 -0.103949531 #> 81     14  0.407950385 -0.127410754 #> 82     14  0.428268401 -0.139141366 #> 83     14  0.448586416 -0.127410754 #> 84     14  0.448586416 -0.103949531 #> 85     15  0.468904432 -0.092218919 #> 86     15  0.448586416 -0.103949531 #> 87     15  0.448586416 -0.127410754 #> 88     15  0.468904432 -0.139141366 #> 89     15  0.489222447 -0.127410754 #> 90     15  0.489222447 -0.103949531 #> 91     16  0.509540462 -0.092218919 #> 92     16  0.489222447 -0.103949531 #> 93     16  0.489222447 -0.127410754 #> 94     16  0.509540462 -0.139141366 #> 95     16  0.529858478 -0.127410754 #> 96     16  0.529858478 -0.103949531 #> 97     17  0.550176493 -0.092218919 #> 98     17  0.529858478 -0.103949531 #> 99     17  0.529858478 -0.127410754 #> 100    17  0.550176493 -0.139141366 #> 101    17  0.570494509 -0.127410754 #> 102    17  0.570494509 -0.103949531 #> 103    18  0.590812524 -0.092218919 #> 104    18  0.570494509 -0.103949531 #> 105    18  0.570494509 -0.127410754 #> 106    18  0.590812524 -0.139141366 #> 107    18  0.611130539 -0.127410754 #> 108    18  0.611130539 -0.103949531 #> 109    19  0.631448555 -0.092218919 #> 110    19  0.611130539 -0.103949531 #> 111    19  0.611130539 -0.127410754 #> 112    19  0.631448555 -0.139141366 #> 113    19  0.651766570 -0.127410754 #> 114    19  0.651766570 -0.103949531 #> 115    20  0.672084586 -0.092218919 #> 116    20  0.651766570 -0.103949531 #> 117    20  0.651766570 -0.127410754 #> 118    20  0.672084586 -0.139141366 #> 119    20  0.692402601 -0.127410754 #> 120    20  0.692402601 -0.103949531 #> 121    21  0.712720616 -0.092218919 #> 122    21  0.692402601 -0.103949531 #> 123    21  0.692402601 -0.127410754 #> 124    21  0.712720616 -0.139141366 #> 125    21  0.733038632 -0.127410754 #> 126    21  0.733038632 -0.103949531 #> 127    22  0.753356647 -0.092218919 #> 128    22  0.733038632 -0.103949531 #> 129    22  0.733038632 -0.127410754 #> 130    22  0.753356647 -0.139141366 #> 131    22  0.773674663 -0.127410754 #> 132    22  0.773674663 -0.103949531 #> 133    23  0.793992678 -0.092218919 #> 134    23  0.773674663 -0.103949531 #> 135    23  0.773674663 -0.127410754 #> 136    23  0.793992678 -0.139141366 #> 137    23  0.814310694 -0.127410754 #> 138    23  0.814310694 -0.103949531 #> 139    24  0.834628709 -0.092218919 #> 140    24  0.814310694 -0.103949531 #> 141    24  0.814310694 -0.127410754 #> 142    24  0.834628709 -0.139141366 #> 143    24  0.854946724 -0.127410754 #> 144    24  0.854946724 -0.103949531 #> 145    25  0.875264740 -0.092218919 #> 146    25  0.854946724 -0.103949531 #> 147    25  0.854946724 -0.127410754 #> 148    25  0.875264740 -0.139141366 #> 149    25  0.895582755 -0.127410754 #> 150    25  0.895582755 -0.103949531 #> 151    26  0.915900771 -0.092218919 #> 152    26  0.895582755 -0.103949531 #> 153    26  0.895582755 -0.127410754 #> 154    26  0.915900771 -0.139141366 #> 155    26  0.936218786 -0.127410754 #> 156    26  0.936218786 -0.103949531 #> 157    27  0.956536801 -0.092218919 #> 158    27  0.936218786 -0.103949531 #> 159    27  0.936218786 -0.127410754 #> 160    27  0.956536801 -0.139141366 #> 161    27  0.976854817 -0.127410754 #> 162    27  0.976854817 -0.103949531 #> 163    28  0.997172832 -0.092218919 #> 164    28  0.976854817 -0.103949531 #> 165    28  0.976854817 -0.127410754 #> 166    28  0.997172832 -0.139141366 #> 167    28  1.017490848 -0.127410754 #> 168    28  1.017490848 -0.103949531 #> 169    29  1.037808863 -0.092218919 #> 170    29  1.017490848 -0.103949531 #> 171    29  1.017490848 -0.127410754 #> 172    29  1.037808863 -0.139141366 #> 173    29  1.058126878 -0.127410754 #> 174    29  1.058126878 -0.103949531 #> 175    30  1.078444894 -0.092218919 #> 176    30  1.058126878 -0.103949531 #> 177    30  1.058126878 -0.127410754 #> 178    30  1.078444894 -0.139141366 #> 179    30  1.098762909 -0.127410754 #> 180    30  1.098762909 -0.103949531 #> 181    31 -0.079681985 -0.057027084 #> 182    31 -0.100000000 -0.068757696 #> 183    31 -0.100000000 -0.092218919 #> 184    31 -0.079681985 -0.103949531 #> 185    31 -0.059363969 -0.092218919 #> 186    31 -0.059363969 -0.068757696 #> 187    32 -0.039045954 -0.057027084 #> 188    32 -0.059363969 -0.068757696 #> 189    32 -0.059363969 -0.092218919 #> 190    32 -0.039045954 -0.103949531 #> 191    32 -0.018727938 -0.092218919 #> 192    32 -0.018727938 -0.068757696 #> 193    33  0.001590077 -0.057027084 #> 194    33 -0.018727938 -0.068757696 #> 195    33 -0.018727938 -0.092218919 #> 196    33  0.001590077 -0.103949531 #> 197    33  0.021908092 -0.092218919 #> 198    33  0.021908092 -0.068757696 #> 199    34  0.042226108 -0.057027084 #> 200    34  0.021908092 -0.068757696 #> 201    34  0.021908092 -0.092218919 #> 202    34  0.042226108 -0.103949531 #> 203    34  0.062544123 -0.092218919 #> 204    34  0.062544123 -0.068757696 #> 205    35  0.082862139 -0.057027084 #> 206    35  0.062544123 -0.068757696 #> 207    35  0.062544123 -0.092218919 #> 208    35  0.082862139 -0.103949531 #> 209    35  0.103180154 -0.092218919 #> 210    35  0.103180154 -0.068757696 #> 211    36  0.123498170 -0.057027084 #> 212    36  0.103180154 -0.068757696 #> 213    36  0.103180154 -0.092218919 #> 214    36  0.123498170 -0.103949531 #> 215    36  0.143816185 -0.092218919 #> 216    36  0.143816185 -0.068757696 #> 217    37  0.164134200 -0.057027084 #> 218    37  0.143816185 -0.068757696 #> 219    37  0.143816185 -0.092218919 #> 220    37  0.164134200 -0.103949531 #> 221    37  0.184452216 -0.092218919 #> 222    37  0.184452216 -0.068757696 #> 223    38  0.204770231 -0.057027084 #> 224    38  0.184452216 -0.068757696 #> 225    38  0.184452216 -0.092218919 #> 226    38  0.204770231 -0.103949531 #> 227    38  0.225088247 -0.092218919 #> 228    38  0.225088247 -0.068757696 #> 229    39  0.245406262 -0.057027084 #> 230    39  0.225088247 -0.068757696 #> 231    39  0.225088247 -0.092218919 #> 232    39  0.245406262 -0.103949531 #> 233    39  0.265724277 -0.092218919 #> 234    39  0.265724277 -0.068757696 #> 235    40  0.286042293 -0.057027084 #> 236    40  0.265724277 -0.068757696 #> 237    40  0.265724277 -0.092218919 #> 238    40  0.286042293 -0.103949531 #> 239    40  0.306360308 -0.092218919 #> 240    40  0.306360308 -0.068757696 #> 241    41  0.326678324 -0.057027084 #> 242    41  0.306360308 -0.068757696 #> 243    41  0.306360308 -0.092218919 #> 244    41  0.326678324 -0.103949531 #> 245    41  0.346996339 -0.092218919 #> 246    41  0.346996339 -0.068757696 #> 247    42  0.367314354 -0.057027084 #> 248    42  0.346996339 -0.068757696 #> 249    42  0.346996339 -0.092218919 #> 250    42  0.367314354 -0.103949531 #> 251    42  0.387632370 -0.092218919 #> 252    42  0.387632370 -0.068757696 #> 253    43  0.407950385 -0.057027084 #> 254    43  0.387632370 -0.068757696 #> 255    43  0.387632370 -0.092218919 #> 256    43  0.407950385 -0.103949531 #> 257    43  0.428268401 -0.092218919 #> 258    43  0.428268401 -0.068757696 #> 259    44  0.448586416 -0.057027084 #> 260    44  0.428268401 -0.068757696 #> 261    44  0.428268401 -0.092218919 #> 262    44  0.448586416 -0.103949531 #> 263    44  0.468904432 -0.092218919 #> 264    44  0.468904432 -0.068757696 #> 265    45  0.489222447 -0.057027084 #> 266    45  0.468904432 -0.068757696 #> 267    45  0.468904432 -0.092218919 #> 268    45  0.489222447 -0.103949531 #> 269    45  0.509540462 -0.092218919 #> 270    45  0.509540462 -0.068757696 #> 271    46  0.529858478 -0.057027084 #> 272    46  0.509540462 -0.068757696 #> 273    46  0.509540462 -0.092218919 #> 274    46  0.529858478 -0.103949531 #> 275    46  0.550176493 -0.092218919 #> 276    46  0.550176493 -0.068757696 #> 277    47  0.570494509 -0.057027084 #> 278    47  0.550176493 -0.068757696 #> 279    47  0.550176493 -0.092218919 #> 280    47  0.570494509 -0.103949531 #> 281    47  0.590812524 -0.092218919 #> 282    47  0.590812524 -0.068757696 #> 283    48  0.611130539 -0.057027084 #> 284    48  0.590812524 -0.068757696 #> 285    48  0.590812524 -0.092218919 #> 286    48  0.611130539 -0.103949531 #> 287    48  0.631448555 -0.092218919 #> 288    48  0.631448555 -0.068757696 #> 289    49  0.651766570 -0.057027084 #> 290    49  0.631448555 -0.068757696 #> 291    49  0.631448555 -0.092218919 #> 292    49  0.651766570 -0.103949531 #> 293    49  0.672084586 -0.092218919 #> 294    49  0.672084586 -0.068757696 #> 295    50  0.692402601 -0.057027084 #> 296    50  0.672084586 -0.068757696 #> 297    50  0.672084586 -0.092218919 #> 298    50  0.692402601 -0.103949531 #> 299    50  0.712720616 -0.092218919 #> 300    50  0.712720616 -0.068757696 #> 301    51  0.733038632 -0.057027084 #> 302    51  0.712720616 -0.068757696 #> 303    51  0.712720616 -0.092218919 #> 304    51  0.733038632 -0.103949531 #> 305    51  0.753356647 -0.092218919 #> 306    51  0.753356647 -0.068757696 #> 307    52  0.773674663 -0.057027084 #> 308    52  0.753356647 -0.068757696 #> 309    52  0.753356647 -0.092218919 #> 310    52  0.773674663 -0.103949531 #> 311    52  0.793992678 -0.092218919 #> 312    52  0.793992678 -0.068757696 #> 313    53  0.814310694 -0.057027084 #> 314    53  0.793992678 -0.068757696 #> 315    53  0.793992678 -0.092218919 #> 316    53  0.814310694 -0.103949531 #> 317    53  0.834628709 -0.092218919 #> 318    53  0.834628709 -0.068757696 #> 319    54  0.854946724 -0.057027084 #> 320    54  0.834628709 -0.068757696 #> 321    54  0.834628709 -0.092218919 #> 322    54  0.854946724 -0.103949531 #> 323    54  0.875264740 -0.092218919 #> 324    54  0.875264740 -0.068757696 #> 325    55  0.895582755 -0.057027084 #> 326    55  0.875264740 -0.068757696 #> 327    55  0.875264740 -0.092218919 #> 328    55  0.895582755 -0.103949531 #> 329    55  0.915900771 -0.092218919 #> 330    55  0.915900771 -0.068757696 #> 331    56  0.936218786 -0.057027084 #> 332    56  0.915900771 -0.068757696 #> 333    56  0.915900771 -0.092218919 #> 334    56  0.936218786 -0.103949531 #> 335    56  0.956536801 -0.092218919 #> 336    56  0.956536801 -0.068757696 #> 337    57  0.976854817 -0.057027084 #> 338    57  0.956536801 -0.068757696 #> 339    57  0.956536801 -0.092218919 #> 340    57  0.976854817 -0.103949531 #> 341    57  0.997172832 -0.092218919 #> 342    57  0.997172832 -0.068757696 #> 343    58  1.017490848 -0.057027084 #> 344    58  0.997172832 -0.068757696 #> 345    58  0.997172832 -0.092218919 #> 346    58  1.017490848 -0.103949531 #> 347    58  1.037808863 -0.092218919 #> 348    58  1.037808863 -0.068757696 #> 349    59  1.058126878 -0.057027084 #> 350    59  1.037808863 -0.068757696 #> 351    59  1.037808863 -0.092218919 #> 352    59  1.058126878 -0.103949531 #> 353    59  1.078444894 -0.092218919 #> 354    59  1.078444894 -0.068757696 #> 355    60  1.098762909 -0.057027084 #> 356    60  1.078444894 -0.068757696 #> 357    60  1.078444894 -0.092218919 #> 358    60  1.098762909 -0.103949531 #> 359    60  1.119080925 -0.092218919 #> 360    60  1.119080925 -0.068757696 #> 361    61 -0.100000000 -0.021835249 #> 362    61 -0.120318015 -0.033565861 #> 363    61 -0.120318015 -0.057027084 #> 364    61 -0.100000000 -0.068757696 #> 365    61 -0.079681985 -0.057027084 #> 366    61 -0.079681985 -0.033565861 #> 367    62 -0.059363969 -0.021835249 #> 368    62 -0.079681985 -0.033565861 #> 369    62 -0.079681985 -0.057027084 #> 370    62 -0.059363969 -0.068757696 #> 371    62 -0.039045954 -0.057027084 #> 372    62 -0.039045954 -0.033565861 #> 373    63 -0.018727938 -0.021835249 #> 374    63 -0.039045954 -0.033565861 #> 375    63 -0.039045954 -0.057027084 #> 376    63 -0.018727938 -0.068757696 #> 377    63  0.001590077 -0.057027084 #> 378    63  0.001590077 -0.033565861 #> 379    64  0.021908092 -0.021835249 #> 380    64  0.001590077 -0.033565861 #> 381    64  0.001590077 -0.057027084 #> 382    64  0.021908092 -0.068757696 #> 383    64  0.042226108 -0.057027084 #> 384    64  0.042226108 -0.033565861 #> 385    65  0.062544123 -0.021835249 #> 386    65  0.042226108 -0.033565861 #> 387    65  0.042226108 -0.057027084 #> 388    65  0.062544123 -0.068757696 #> 389    65  0.082862139 -0.057027084 #> 390    65  0.082862139 -0.033565861 #> 391    66  0.103180154 -0.021835249 #> 392    66  0.082862139 -0.033565861 #> 393    66  0.082862139 -0.057027084 #> 394    66  0.103180154 -0.068757696 #> 395    66  0.123498170 -0.057027084 #> 396    66  0.123498170 -0.033565861 #> 397    67  0.143816185 -0.021835249 #> 398    67  0.123498170 -0.033565861 #> 399    67  0.123498170 -0.057027084 #> 400    67  0.143816185 -0.068757696 #> 401    67  0.164134200 -0.057027084 #> 402    67  0.164134200 -0.033565861 #> 403    68  0.184452216 -0.021835249 #> 404    68  0.164134200 -0.033565861 #> 405    68  0.164134200 -0.057027084 #> 406    68  0.184452216 -0.068757696 #> 407    68  0.204770231 -0.057027084 #> 408    68  0.204770231 -0.033565861 #> 409    69  0.225088247 -0.021835249 #> 410    69  0.204770231 -0.033565861 #> 411    69  0.204770231 -0.057027084 #> 412    69  0.225088247 -0.068757696 #> 413    69  0.245406262 -0.057027084 #> 414    69  0.245406262 -0.033565861 #> 415    70  0.265724277 -0.021835249 #> 416    70  0.245406262 -0.033565861 #> 417    70  0.245406262 -0.057027084 #> 418    70  0.265724277 -0.068757696 #> 419    70  0.286042293 -0.057027084 #> 420    70  0.286042293 -0.033565861 #> 421    71  0.306360308 -0.021835249 #> 422    71  0.286042293 -0.033565861 #> 423    71  0.286042293 -0.057027084 #> 424    71  0.306360308 -0.068757696 #> 425    71  0.326678324 -0.057027084 #> 426    71  0.326678324 -0.033565861 #> 427    72  0.346996339 -0.021835249 #> 428    72  0.326678324 -0.033565861 #> 429    72  0.326678324 -0.057027084 #> 430    72  0.346996339 -0.068757696 #> 431    72  0.367314354 -0.057027084 #> 432    72  0.367314354 -0.033565861 #> 433    73  0.387632370 -0.021835249 #> 434    73  0.367314354 -0.033565861 #> 435    73  0.367314354 -0.057027084 #> 436    73  0.387632370 -0.068757696 #> 437    73  0.407950385 -0.057027084 #> 438    73  0.407950385 -0.033565861 #> 439    74  0.428268401 -0.021835249 #> 440    74  0.407950385 -0.033565861 #> 441    74  0.407950385 -0.057027084 #> 442    74  0.428268401 -0.068757696 #> 443    74  0.448586416 -0.057027084 #> 444    74  0.448586416 -0.033565861 #> 445    75  0.468904432 -0.021835249 #> 446    75  0.448586416 -0.033565861 #> 447    75  0.448586416 -0.057027084 #> 448    75  0.468904432 -0.068757696 #> 449    75  0.489222447 -0.057027084 #> 450    75  0.489222447 -0.033565861 #> 451    76  0.509540462 -0.021835249 #> 452    76  0.489222447 -0.033565861 #> 453    76  0.489222447 -0.057027084 #> 454    76  0.509540462 -0.068757696 #> 455    76  0.529858478 -0.057027084 #> 456    76  0.529858478 -0.033565861 #> 457    77  0.550176493 -0.021835249 #> 458    77  0.529858478 -0.033565861 #> 459    77  0.529858478 -0.057027084 #> 460    77  0.550176493 -0.068757696 #> 461    77  0.570494509 -0.057027084 #> 462    77  0.570494509 -0.033565861 #> 463    78  0.590812524 -0.021835249 #> 464    78  0.570494509 -0.033565861 #> 465    78  0.570494509 -0.057027084 #> 466    78  0.590812524 -0.068757696 #> 467    78  0.611130539 -0.057027084 #> 468    78  0.611130539 -0.033565861 #> 469    79  0.631448555 -0.021835249 #> 470    79  0.611130539 -0.033565861 #> 471    79  0.611130539 -0.057027084 #> 472    79  0.631448555 -0.068757696 #> 473    79  0.651766570 -0.057027084 #> 474    79  0.651766570 -0.033565861 #> 475    80  0.672084586 -0.021835249 #> 476    80  0.651766570 -0.033565861 #> 477    80  0.651766570 -0.057027084 #> 478    80  0.672084586 -0.068757696 #> 479    80  0.692402601 -0.057027084 #> 480    80  0.692402601 -0.033565861 #> 481    81  0.712720616 -0.021835249 #> 482    81  0.692402601 -0.033565861 #> 483    81  0.692402601 -0.057027084 #> 484    81  0.712720616 -0.068757696 #> 485    81  0.733038632 -0.057027084 #> 486    81  0.733038632 -0.033565861 #> 487    82  0.753356647 -0.021835249 #> 488    82  0.733038632 -0.033565861 #> 489    82  0.733038632 -0.057027084 #> 490    82  0.753356647 -0.068757696 #> 491    82  0.773674663 -0.057027084 #> 492    82  0.773674663 -0.033565861 #> 493    83  0.793992678 -0.021835249 #> 494    83  0.773674663 -0.033565861 #> 495    83  0.773674663 -0.057027084 #> 496    83  0.793992678 -0.068757696 #> 497    83  0.814310694 -0.057027084 #> 498    83  0.814310694 -0.033565861 #> 499    84  0.834628709 -0.021835249 #> 500    84  0.814310694 -0.033565861 #> 501    84  0.814310694 -0.057027084 #> 502    84  0.834628709 -0.068757696 #> 503    84  0.854946724 -0.057027084 #> 504    84  0.854946724 -0.033565861 #> 505    85  0.875264740 -0.021835249 #> 506    85  0.854946724 -0.033565861 #> 507    85  0.854946724 -0.057027084 #> 508    85  0.875264740 -0.068757696 #> 509    85  0.895582755 -0.057027084 #> 510    85  0.895582755 -0.033565861 #> 511    86  0.915900771 -0.021835249 #> 512    86  0.895582755 -0.033565861 #> 513    86  0.895582755 -0.057027084 #> 514    86  0.915900771 -0.068757696 #> 515    86  0.936218786 -0.057027084 #> 516    86  0.936218786 -0.033565861 #> 517    87  0.956536801 -0.021835249 #> 518    87  0.936218786 -0.033565861 #> 519    87  0.936218786 -0.057027084 #> 520    87  0.956536801 -0.068757696 #> 521    87  0.976854817 -0.057027084 #> 522    87  0.976854817 -0.033565861 #> 523    88  0.997172832 -0.021835249 #> 524    88  0.976854817 -0.033565861 #> 525    88  0.976854817 -0.057027084 #> 526    88  0.997172832 -0.068757696 #> 527    88  1.017490848 -0.057027084 #> 528    88  1.017490848 -0.033565861 #> 529    89  1.037808863 -0.021835249 #> 530    89  1.017490848 -0.033565861 #> 531    89  1.017490848 -0.057027084 #> 532    89  1.037808863 -0.068757696 #> 533    89  1.058126878 -0.057027084 #> 534    89  1.058126878 -0.033565861 #> 535    90  1.078444894 -0.021835249 #> 536    90  1.058126878 -0.033565861 #> 537    90  1.058126878 -0.057027084 #> 538    90  1.078444894 -0.068757696 #> 539    90  1.098762909 -0.057027084 #> 540    90  1.098762909 -0.033565861 #> 541    91 -0.079681985  0.013356586 #> 542    91 -0.100000000  0.001625974 #> 543    91 -0.100000000 -0.021835249 #> 544    91 -0.079681985 -0.033565861 #> 545    91 -0.059363969 -0.021835249 #> 546    91 -0.059363969  0.001625974 #> 547    92 -0.039045954  0.013356586 #> 548    92 -0.059363969  0.001625974 #> 549    92 -0.059363969 -0.021835249 #> 550    92 -0.039045954 -0.033565861 #> 551    92 -0.018727938 -0.021835249 #> 552    92 -0.018727938  0.001625974 #> 553    93  0.001590077  0.013356586 #> 554    93 -0.018727938  0.001625974 #> 555    93 -0.018727938 -0.021835249 #> 556    93  0.001590077 -0.033565861 #> 557    93  0.021908092 -0.021835249 #> 558    93  0.021908092  0.001625974 #> 559    94  0.042226108  0.013356586 #> 560    94  0.021908092  0.001625974 #> 561    94  0.021908092 -0.021835249 #> 562    94  0.042226108 -0.033565861 #> 563    94  0.062544123 -0.021835249 #> 564    94  0.062544123  0.001625974 #> 565    95  0.082862139  0.013356586 #> 566    95  0.062544123  0.001625974 #> 567    95  0.062544123 -0.021835249 #> 568    95  0.082862139 -0.033565861 #> 569    95  0.103180154 -0.021835249 #> 570    95  0.103180154  0.001625974 #> 571    96  0.123498170  0.013356586 #> 572    96  0.103180154  0.001625974 #> 573    96  0.103180154 -0.021835249 #> 574    96  0.123498170 -0.033565861 #> 575    96  0.143816185 -0.021835249 #> 576    96  0.143816185  0.001625974 #> 577    97  0.164134200  0.013356586 #> 578    97  0.143816185  0.001625974 #> 579    97  0.143816185 -0.021835249 #> 580    97  0.164134200 -0.033565861 #> 581    97  0.184452216 -0.021835249 #> 582    97  0.184452216  0.001625974 #> 583    98  0.204770231  0.013356586 #> 584    98  0.184452216  0.001625974 #> 585    98  0.184452216 -0.021835249 #> 586    98  0.204770231 -0.033565861 #> 587    98  0.225088247 -0.021835249 #> 588    98  0.225088247  0.001625974 #> 589    99  0.245406262  0.013356586 #> 590    99  0.225088247  0.001625974 #> 591    99  0.225088247 -0.021835249 #> 592    99  0.245406262 -0.033565861 #> 593    99  0.265724277 -0.021835249 #> 594    99  0.265724277  0.001625974 #> 595   100  0.286042293  0.013356586 #> 596   100  0.265724277  0.001625974 #> 597   100  0.265724277 -0.021835249 #> 598   100  0.286042293 -0.033565861 #> 599   100  0.306360308 -0.021835249 #> 600   100  0.306360308  0.001625974 #> 601   101  0.326678324  0.013356586 #> 602   101  0.306360308  0.001625974 #> 603   101  0.306360308 -0.021835249 #> 604   101  0.326678324 -0.033565861 #> 605   101  0.346996339 -0.021835249 #> 606   101  0.346996339  0.001625974 #> 607   102  0.367314354  0.013356586 #> 608   102  0.346996339  0.001625974 #> 609   102  0.346996339 -0.021835249 #> 610   102  0.367314354 -0.033565861 #> 611   102  0.387632370 -0.021835249 #> 612   102  0.387632370  0.001625974 #> 613   103  0.407950385  0.013356586 #> 614   103  0.387632370  0.001625974 #> 615   103  0.387632370 -0.021835249 #> 616   103  0.407950385 -0.033565861 #> 617   103  0.428268401 -0.021835249 #> 618   103  0.428268401  0.001625974 #> 619   104  0.448586416  0.013356586 #> 620   104  0.428268401  0.001625974 #> 621   104  0.428268401 -0.021835249 #> 622   104  0.448586416 -0.033565861 #> 623   104  0.468904432 -0.021835249 #> 624   104  0.468904432  0.001625974 #> 625   105  0.489222447  0.013356586 #> 626   105  0.468904432  0.001625974 #> 627   105  0.468904432 -0.021835249 #> 628   105  0.489222447 -0.033565861 #> 629   105  0.509540462 -0.021835249 #> 630   105  0.509540462  0.001625974 #> 631   106  0.529858478  0.013356586 #> 632   106  0.509540462  0.001625974 #> 633   106  0.509540462 -0.021835249 #> 634   106  0.529858478 -0.033565861 #> 635   106  0.550176493 -0.021835249 #> 636   106  0.550176493  0.001625974 #> 637   107  0.570494509  0.013356586 #> 638   107  0.550176493  0.001625974 #> 639   107  0.550176493 -0.021835249 #> 640   107  0.570494509 -0.033565861 #> 641   107  0.590812524 -0.021835249 #> 642   107  0.590812524  0.001625974 #> 643   108  0.611130539  0.013356586 #> 644   108  0.590812524  0.001625974 #> 645   108  0.590812524 -0.021835249 #> 646   108  0.611130539 -0.033565861 #> 647   108  0.631448555 -0.021835249 #> 648   108  0.631448555  0.001625974 #> 649   109  0.651766570  0.013356586 #> 650   109  0.631448555  0.001625974 #> 651   109  0.631448555 -0.021835249 #> 652   109  0.651766570 -0.033565861 #> 653   109  0.672084586 -0.021835249 #> 654   109  0.672084586  0.001625974 #> 655   110  0.692402601  0.013356586 #> 656   110  0.672084586  0.001625974 #> 657   110  0.672084586 -0.021835249 #> 658   110  0.692402601 -0.033565861 #> 659   110  0.712720616 -0.021835249 #> 660   110  0.712720616  0.001625974 #> 661   111  0.733038632  0.013356586 #> 662   111  0.712720616  0.001625974 #> 663   111  0.712720616 -0.021835249 #> 664   111  0.733038632 -0.033565861 #> 665   111  0.753356647 -0.021835249 #> 666   111  0.753356647  0.001625974 #> 667   112  0.773674663  0.013356586 #> 668   112  0.753356647  0.001625974 #> 669   112  0.753356647 -0.021835249 #> 670   112  0.773674663 -0.033565861 #> 671   112  0.793992678 -0.021835249 #> 672   112  0.793992678  0.001625974 #> 673   113  0.814310694  0.013356586 #> 674   113  0.793992678  0.001625974 #> 675   113  0.793992678 -0.021835249 #> 676   113  0.814310694 -0.033565861 #> 677   113  0.834628709 -0.021835249 #> 678   113  0.834628709  0.001625974 #> 679   114  0.854946724  0.013356586 #> 680   114  0.834628709  0.001625974 #> 681   114  0.834628709 -0.021835249 #> 682   114  0.854946724 -0.033565861 #> 683   114  0.875264740 -0.021835249 #> 684   114  0.875264740  0.001625974 #> 685   115  0.895582755  0.013356586 #> 686   115  0.875264740  0.001625974 #> 687   115  0.875264740 -0.021835249 #> 688   115  0.895582755 -0.033565861 #> 689   115  0.915900771 -0.021835249 #> 690   115  0.915900771  0.001625974 #> 691   116  0.936218786  0.013356586 #> 692   116  0.915900771  0.001625974 #> 693   116  0.915900771 -0.021835249 #> 694   116  0.936218786 -0.033565861 #> 695   116  0.956536801 -0.021835249 #> 696   116  0.956536801  0.001625974 #> 697   117  0.976854817  0.013356586 #> 698   117  0.956536801  0.001625974 #> 699   117  0.956536801 -0.021835249 #> 700   117  0.976854817 -0.033565861 #> 701   117  0.997172832 -0.021835249 #> 702   117  0.997172832  0.001625974 #> 703   118  1.017490848  0.013356586 #> 704   118  0.997172832  0.001625974 #> 705   118  0.997172832 -0.021835249 #> 706   118  1.017490848 -0.033565861 #> 707   118  1.037808863 -0.021835249 #> 708   118  1.037808863  0.001625974 #> 709   119  1.058126878  0.013356586 #> 710   119  1.037808863  0.001625974 #> 711   119  1.037808863 -0.021835249 #> 712   119  1.058126878 -0.033565861 #> 713   119  1.078444894 -0.021835249 #> 714   119  1.078444894  0.001625974 #> 715   120  1.098762909  0.013356586 #> 716   120  1.078444894  0.001625974 #> 717   120  1.078444894 -0.021835249 #> 718   120  1.098762909 -0.033565861 #> 719   120  1.119080925 -0.021835249 #> 720   120  1.119080925  0.001625974 #> 721   121 -0.100000000  0.048548421 #> 722   121 -0.120318015  0.036817809 #> 723   121 -0.120318015  0.013356586 #> 724   121 -0.100000000  0.001625974 #> 725   121 -0.079681985  0.013356586 #> 726   121 -0.079681985  0.036817809 #> 727   122 -0.059363969  0.048548421 #> 728   122 -0.079681985  0.036817809 #> 729   122 -0.079681985  0.013356586 #> 730   122 -0.059363969  0.001625974 #> 731   122 -0.039045954  0.013356586 #> 732   122 -0.039045954  0.036817809 #> 733   123 -0.018727938  0.048548421 #> 734   123 -0.039045954  0.036817809 #> 735   123 -0.039045954  0.013356586 #> 736   123 -0.018727938  0.001625974 #> 737   123  0.001590077  0.013356586 #> 738   123  0.001590077  0.036817809 #> 739   124  0.021908092  0.048548421 #> 740   124  0.001590077  0.036817809 #> 741   124  0.001590077  0.013356586 #> 742   124  0.021908092  0.001625974 #> 743   124  0.042226108  0.013356586 #> 744   124  0.042226108  0.036817809 #> 745   125  0.062544123  0.048548421 #> 746   125  0.042226108  0.036817809 #> 747   125  0.042226108  0.013356586 #> 748   125  0.062544123  0.001625974 #> 749   125  0.082862139  0.013356586 #> 750   125  0.082862139  0.036817809 #> 751   126  0.103180154  0.048548421 #> 752   126  0.082862139  0.036817809 #> 753   126  0.082862139  0.013356586 #> 754   126  0.103180154  0.001625974 #> 755   126  0.123498170  0.013356586 #> 756   126  0.123498170  0.036817809 #> 757   127  0.143816185  0.048548421 #> 758   127  0.123498170  0.036817809 #> 759   127  0.123498170  0.013356586 #> 760   127  0.143816185  0.001625974 #> 761   127  0.164134200  0.013356586 #> 762   127  0.164134200  0.036817809 #> 763   128  0.184452216  0.048548421 #> 764   128  0.164134200  0.036817809 #> 765   128  0.164134200  0.013356586 #> 766   128  0.184452216  0.001625974 #> 767   128  0.204770231  0.013356586 #> 768   128  0.204770231  0.036817809 #> 769   129  0.225088247  0.048548421 #> 770   129  0.204770231  0.036817809 #> 771   129  0.204770231  0.013356586 #> 772   129  0.225088247  0.001625974 #> 773   129  0.245406262  0.013356586 #> 774   129  0.245406262  0.036817809 #> 775   130  0.265724277  0.048548421 #> 776   130  0.245406262  0.036817809 #> 777   130  0.245406262  0.013356586 #> 778   130  0.265724277  0.001625974 #> 779   130  0.286042293  0.013356586 #> 780   130  0.286042293  0.036817809 #> 781   131  0.306360308  0.048548421 #> 782   131  0.286042293  0.036817809 #> 783   131  0.286042293  0.013356586 #> 784   131  0.306360308  0.001625974 #> 785   131  0.326678324  0.013356586 #> 786   131  0.326678324  0.036817809 #> 787   132  0.346996339  0.048548421 #> 788   132  0.326678324  0.036817809 #> 789   132  0.326678324  0.013356586 #> 790   132  0.346996339  0.001625974 #> 791   132  0.367314354  0.013356586 #> 792   132  0.367314354  0.036817809 #> 793   133  0.387632370  0.048548421 #> 794   133  0.367314354  0.036817809 #> 795   133  0.367314354  0.013356586 #> 796   133  0.387632370  0.001625974 #> 797   133  0.407950385  0.013356586 #> 798   133  0.407950385  0.036817809 #> 799   134  0.428268401  0.048548421 #> 800   134  0.407950385  0.036817809 #> 801   134  0.407950385  0.013356586 #> 802   134  0.428268401  0.001625974 #> 803   134  0.448586416  0.013356586 #> 804   134  0.448586416  0.036817809 #> 805   135  0.468904432  0.048548421 #> 806   135  0.448586416  0.036817809 #> 807   135  0.448586416  0.013356586 #> 808   135  0.468904432  0.001625974 #> 809   135  0.489222447  0.013356586 #> 810   135  0.489222447  0.036817809 #> 811   136  0.509540462  0.048548421 #> 812   136  0.489222447  0.036817809 #> 813   136  0.489222447  0.013356586 #> 814   136  0.509540462  0.001625974 #> 815   136  0.529858478  0.013356586 #> 816   136  0.529858478  0.036817809 #> 817   137  0.550176493  0.048548421 #> 818   137  0.529858478  0.036817809 #> 819   137  0.529858478  0.013356586 #> 820   137  0.550176493  0.001625974 #> 821   137  0.570494509  0.013356586 #> 822   137  0.570494509  0.036817809 #> 823   138  0.590812524  0.048548421 #> 824   138  0.570494509  0.036817809 #> 825   138  0.570494509  0.013356586 #> 826   138  0.590812524  0.001625974 #> 827   138  0.611130539  0.013356586 #> 828   138  0.611130539  0.036817809 #> 829   139  0.631448555  0.048548421 #> 830   139  0.611130539  0.036817809 #> 831   139  0.611130539  0.013356586 #> 832   139  0.631448555  0.001625974 #> 833   139  0.651766570  0.013356586 #> 834   139  0.651766570  0.036817809 #> 835   140  0.672084586  0.048548421 #> 836   140  0.651766570  0.036817809 #> 837   140  0.651766570  0.013356586 #> 838   140  0.672084586  0.001625974 #> 839   140  0.692402601  0.013356586 #> 840   140  0.692402601  0.036817809 #> 841   141  0.712720616  0.048548421 #> 842   141  0.692402601  0.036817809 #> 843   141  0.692402601  0.013356586 #> 844   141  0.712720616  0.001625974 #> 845   141  0.733038632  0.013356586 #> 846   141  0.733038632  0.036817809 #> 847   142  0.753356647  0.048548421 #> 848   142  0.733038632  0.036817809 #> 849   142  0.733038632  0.013356586 #> 850   142  0.753356647  0.001625974 #> 851   142  0.773674663  0.013356586 #> 852   142  0.773674663  0.036817809 #> 853   143  0.793992678  0.048548421 #> 854   143  0.773674663  0.036817809 #> 855   143  0.773674663  0.013356586 #> 856   143  0.793992678  0.001625974 #> 857   143  0.814310694  0.013356586 #> 858   143  0.814310694  0.036817809 #> 859   144  0.834628709  0.048548421 #> 860   144  0.814310694  0.036817809 #> 861   144  0.814310694  0.013356586 #> 862   144  0.834628709  0.001625974 #> 863   144  0.854946724  0.013356586 #> 864   144  0.854946724  0.036817809 #> 865   145  0.875264740  0.048548421 #> 866   145  0.854946724  0.036817809 #> 867   145  0.854946724  0.013356586 #> 868   145  0.875264740  0.001625974 #> 869   145  0.895582755  0.013356586 #> 870   145  0.895582755  0.036817809 #> 871   146  0.915900771  0.048548421 #> 872   146  0.895582755  0.036817809 #> 873   146  0.895582755  0.013356586 #> 874   146  0.915900771  0.001625974 #> 875   146  0.936218786  0.013356586 #> 876   146  0.936218786  0.036817809 #> 877   147  0.956536801  0.048548421 #> 878   147  0.936218786  0.036817809 #> 879   147  0.936218786  0.013356586 #> 880   147  0.956536801  0.001625974 #> 881   147  0.976854817  0.013356586 #> 882   147  0.976854817  0.036817809 #> 883   148  0.997172832  0.048548421 #> 884   148  0.976854817  0.036817809 #> 885   148  0.976854817  0.013356586 #> 886   148  0.997172832  0.001625974 #> 887   148  1.017490848  0.013356586 #> 888   148  1.017490848  0.036817809 #> 889   149  1.037808863  0.048548421 #> 890   149  1.017490848  0.036817809 #> 891   149  1.017490848  0.013356586 #> 892   149  1.037808863  0.001625974 #> 893   149  1.058126878  0.013356586 #> 894   149  1.058126878  0.036817809 #> 895   150  1.078444894  0.048548421 #> 896   150  1.058126878  0.036817809 #> 897   150  1.058126878  0.013356586 #> 898   150  1.078444894  0.001625974 #> 899   150  1.098762909  0.013356586 #> 900   150  1.098762909  0.036817809 #> 901   151 -0.079681985  0.083740256 #> 902   151 -0.100000000  0.072009644 #> 903   151 -0.100000000  0.048548421 #> 904   151 -0.079681985  0.036817809 #> 905   151 -0.059363969  0.048548421 #> 906   151 -0.059363969  0.072009644 #> 907   152 -0.039045954  0.083740256 #> 908   152 -0.059363969  0.072009644 #> 909   152 -0.059363969  0.048548421 #> 910   152 -0.039045954  0.036817809 #> 911   152 -0.018727938  0.048548421 #> 912   152 -0.018727938  0.072009644 #> 913   153  0.001590077  0.083740256 #> 914   153 -0.018727938  0.072009644 #> 915   153 -0.018727938  0.048548421 #> 916   153  0.001590077  0.036817809 #> 917   153  0.021908092  0.048548421 #> 918   153  0.021908092  0.072009644 #> 919   154  0.042226108  0.083740256 #> 920   154  0.021908092  0.072009644 #> 921   154  0.021908092  0.048548421 #> 922   154  0.042226108  0.036817809 #> 923   154  0.062544123  0.048548421 #> 924   154  0.062544123  0.072009644 #> 925   155  0.082862139  0.083740256 #> 926   155  0.062544123  0.072009644 #> 927   155  0.062544123  0.048548421 #> 928   155  0.082862139  0.036817809 #> 929   155  0.103180154  0.048548421 #> 930   155  0.103180154  0.072009644 #> 931   156  0.123498170  0.083740256 #> 932   156  0.103180154  0.072009644 #> 933   156  0.103180154  0.048548421 #> 934   156  0.123498170  0.036817809 #> 935   156  0.143816185  0.048548421 #> 936   156  0.143816185  0.072009644 #> 937   157  0.164134200  0.083740256 #> 938   157  0.143816185  0.072009644 #> 939   157  0.143816185  0.048548421 #> 940   157  0.164134200  0.036817809 #> 941   157  0.184452216  0.048548421 #> 942   157  0.184452216  0.072009644 #> 943   158  0.204770231  0.083740256 #> 944   158  0.184452216  0.072009644 #> 945   158  0.184452216  0.048548421 #> 946   158  0.204770231  0.036817809 #> 947   158  0.225088247  0.048548421 #> 948   158  0.225088247  0.072009644 #> 949   159  0.245406262  0.083740256 #> 950   159  0.225088247  0.072009644 #> 951   159  0.225088247  0.048548421 #> 952   159  0.245406262  0.036817809 #> 953   159  0.265724277  0.048548421 #> 954   159  0.265724277  0.072009644 #> 955   160  0.286042293  0.083740256 #> 956   160  0.265724277  0.072009644 #> 957   160  0.265724277  0.048548421 #> 958   160  0.286042293  0.036817809 #> 959   160  0.306360308  0.048548421 #> 960   160  0.306360308  0.072009644 #> 961   161  0.326678324  0.083740256 #> 962   161  0.306360308  0.072009644 #> 963   161  0.306360308  0.048548421 #> 964   161  0.326678324  0.036817809 #> 965   161  0.346996339  0.048548421 #> 966   161  0.346996339  0.072009644 #> 967   162  0.367314354  0.083740256 #> 968   162  0.346996339  0.072009644 #> 969   162  0.346996339  0.048548421 #> 970   162  0.367314354  0.036817809 #> 971   162  0.387632370  0.048548421 #> 972   162  0.387632370  0.072009644 #> 973   163  0.407950385  0.083740256 #> 974   163  0.387632370  0.072009644 #> 975   163  0.387632370  0.048548421 #> 976   163  0.407950385  0.036817809 #> 977   163  0.428268401  0.048548421 #> 978   163  0.428268401  0.072009644 #> 979   164  0.448586416  0.083740256 #> 980   164  0.428268401  0.072009644 #> 981   164  0.428268401  0.048548421 #> 982   164  0.448586416  0.036817809 #> 983   164  0.468904432  0.048548421 #> 984   164  0.468904432  0.072009644 #> 985   165  0.489222447  0.083740256 #> 986   165  0.468904432  0.072009644 #> 987   165  0.468904432  0.048548421 #> 988   165  0.489222447  0.036817809 #> 989   165  0.509540462  0.048548421 #> 990   165  0.509540462  0.072009644 #> 991   166  0.529858478  0.083740256 #> 992   166  0.509540462  0.072009644 #> 993   166  0.509540462  0.048548421 #> 994   166  0.529858478  0.036817809 #> 995   166  0.550176493  0.048548421 #> 996   166  0.550176493  0.072009644 #> 997   167  0.570494509  0.083740256 #> 998   167  0.550176493  0.072009644 #> 999   167  0.550176493  0.048548421 #> 1000  167  0.570494509  0.036817809 #> 1001  167  0.590812524  0.048548421 #> 1002  167  0.590812524  0.072009644 #> 1003  168  0.611130539  0.083740256 #> 1004  168  0.590812524  0.072009644 #> 1005  168  0.590812524  0.048548421 #> 1006  168  0.611130539  0.036817809 #> 1007  168  0.631448555  0.048548421 #> 1008  168  0.631448555  0.072009644 #> 1009  169  0.651766570  0.083740256 #> 1010  169  0.631448555  0.072009644 #> 1011  169  0.631448555  0.048548421 #> 1012  169  0.651766570  0.036817809 #> 1013  169  0.672084586  0.048548421 #> 1014  169  0.672084586  0.072009644 #> 1015  170  0.692402601  0.083740256 #> 1016  170  0.672084586  0.072009644 #> 1017  170  0.672084586  0.048548421 #> 1018  170  0.692402601  0.036817809 #> 1019  170  0.712720616  0.048548421 #> 1020  170  0.712720616  0.072009644 #> 1021  171  0.733038632  0.083740256 #> 1022  171  0.712720616  0.072009644 #> 1023  171  0.712720616  0.048548421 #> 1024  171  0.733038632  0.036817809 #> 1025  171  0.753356647  0.048548421 #> 1026  171  0.753356647  0.072009644 #> 1027  172  0.773674663  0.083740256 #> 1028  172  0.753356647  0.072009644 #> 1029  172  0.753356647  0.048548421 #> 1030  172  0.773674663  0.036817809 #> 1031  172  0.793992678  0.048548421 #> 1032  172  0.793992678  0.072009644 #> 1033  173  0.814310694  0.083740256 #> 1034  173  0.793992678  0.072009644 #> 1035  173  0.793992678  0.048548421 #> 1036  173  0.814310694  0.036817809 #> 1037  173  0.834628709  0.048548421 #> 1038  173  0.834628709  0.072009644 #> 1039  174  0.854946724  0.083740256 #> 1040  174  0.834628709  0.072009644 #> 1041  174  0.834628709  0.048548421 #> 1042  174  0.854946724  0.036817809 #> 1043  174  0.875264740  0.048548421 #> 1044  174  0.875264740  0.072009644 #> 1045  175  0.895582755  0.083740256 #> 1046  175  0.875264740  0.072009644 #> 1047  175  0.875264740  0.048548421 #> 1048  175  0.895582755  0.036817809 #> 1049  175  0.915900771  0.048548421 #> 1050  175  0.915900771  0.072009644 #> 1051  176  0.936218786  0.083740256 #> 1052  176  0.915900771  0.072009644 #> 1053  176  0.915900771  0.048548421 #> 1054  176  0.936218786  0.036817809 #> 1055  176  0.956536801  0.048548421 #> 1056  176  0.956536801  0.072009644 #> 1057  177  0.976854817  0.083740256 #> 1058  177  0.956536801  0.072009644 #> 1059  177  0.956536801  0.048548421 #> 1060  177  0.976854817  0.036817809 #> 1061  177  0.997172832  0.048548421 #> 1062  177  0.997172832  0.072009644 #> 1063  178  1.017490848  0.083740256 #> 1064  178  0.997172832  0.072009644 #> 1065  178  0.997172832  0.048548421 #> 1066  178  1.017490848  0.036817809 #> 1067  178  1.037808863  0.048548421 #> 1068  178  1.037808863  0.072009644 #> 1069  179  1.058126878  0.083740256 #> 1070  179  1.037808863  0.072009644 #> 1071  179  1.037808863  0.048548421 #> 1072  179  1.058126878  0.036817809 #> 1073  179  1.078444894  0.048548421 #> 1074  179  1.078444894  0.072009644 #> 1075  180  1.098762909  0.083740256 #> 1076  180  1.078444894  0.072009644 #> 1077  180  1.078444894  0.048548421 #> 1078  180  1.098762909  0.036817809 #> 1079  180  1.119080925  0.048548421 #> 1080  180  1.119080925  0.072009644 #> 1081  181 -0.100000000  0.118932091 #> 1082  181 -0.120318015  0.107201479 #> 1083  181 -0.120318015  0.083740256 #> 1084  181 -0.100000000  0.072009644 #> 1085  181 -0.079681985  0.083740256 #> 1086  181 -0.079681985  0.107201479 #> 1087  182 -0.059363969  0.118932091 #> 1088  182 -0.079681985  0.107201479 #> 1089  182 -0.079681985  0.083740256 #> 1090  182 -0.059363969  0.072009644 #> 1091  182 -0.039045954  0.083740256 #> 1092  182 -0.039045954  0.107201479 #> 1093  183 -0.018727938  0.118932091 #> 1094  183 -0.039045954  0.107201479 #> 1095  183 -0.039045954  0.083740256 #> 1096  183 -0.018727938  0.072009644 #> 1097  183  0.001590077  0.083740256 #> 1098  183  0.001590077  0.107201479 #> 1099  184  0.021908092  0.118932091 #> 1100  184  0.001590077  0.107201479 #> 1101  184  0.001590077  0.083740256 #> 1102  184  0.021908092  0.072009644 #> 1103  184  0.042226108  0.083740256 #> 1104  184  0.042226108  0.107201479 #> 1105  185  0.062544123  0.118932091 #> 1106  185  0.042226108  0.107201479 #> 1107  185  0.042226108  0.083740256 #> 1108  185  0.062544123  0.072009644 #> 1109  185  0.082862139  0.083740256 #> 1110  185  0.082862139  0.107201479 #> 1111  186  0.103180154  0.118932091 #> 1112  186  0.082862139  0.107201479 #> 1113  186  0.082862139  0.083740256 #> 1114  186  0.103180154  0.072009644 #> 1115  186  0.123498170  0.083740256 #> 1116  186  0.123498170  0.107201479 #> 1117  187  0.143816185  0.118932091 #> 1118  187  0.123498170  0.107201479 #> 1119  187  0.123498170  0.083740256 #> 1120  187  0.143816185  0.072009644 #> 1121  187  0.164134200  0.083740256 #> 1122  187  0.164134200  0.107201479 #> 1123  188  0.184452216  0.118932091 #> 1124  188  0.164134200  0.107201479 #> 1125  188  0.164134200  0.083740256 #> 1126  188  0.184452216  0.072009644 #> 1127  188  0.204770231  0.083740256 #> 1128  188  0.204770231  0.107201479 #> 1129  189  0.225088247  0.118932091 #> 1130  189  0.204770231  0.107201479 #> 1131  189  0.204770231  0.083740256 #> 1132  189  0.225088247  0.072009644 #> 1133  189  0.245406262  0.083740256 #> 1134  189  0.245406262  0.107201479 #> 1135  190  0.265724277  0.118932091 #> 1136  190  0.245406262  0.107201479 #> 1137  190  0.245406262  0.083740256 #> 1138  190  0.265724277  0.072009644 #> 1139  190  0.286042293  0.083740256 #> 1140  190  0.286042293  0.107201479 #> 1141  191  0.306360308  0.118932091 #> 1142  191  0.286042293  0.107201479 #> 1143  191  0.286042293  0.083740256 #> 1144  191  0.306360308  0.072009644 #> 1145  191  0.326678324  0.083740256 #> 1146  191  0.326678324  0.107201479 #> 1147  192  0.346996339  0.118932091 #> 1148  192  0.326678324  0.107201479 #> 1149  192  0.326678324  0.083740256 #> 1150  192  0.346996339  0.072009644 #> 1151  192  0.367314354  0.083740256 #> 1152  192  0.367314354  0.107201479 #> 1153  193  0.387632370  0.118932091 #> 1154  193  0.367314354  0.107201479 #> 1155  193  0.367314354  0.083740256 #> 1156  193  0.387632370  0.072009644 #> 1157  193  0.407950385  0.083740256 #> 1158  193  0.407950385  0.107201479 #> 1159  194  0.428268401  0.118932091 #> 1160  194  0.407950385  0.107201479 #> 1161  194  0.407950385  0.083740256 #> 1162  194  0.428268401  0.072009644 #> 1163  194  0.448586416  0.083740256 #> 1164  194  0.448586416  0.107201479 #> 1165  195  0.468904432  0.118932091 #> 1166  195  0.448586416  0.107201479 #> 1167  195  0.448586416  0.083740256 #> 1168  195  0.468904432  0.072009644 #> 1169  195  0.489222447  0.083740256 #> 1170  195  0.489222447  0.107201479 #> 1171  196  0.509540462  0.118932091 #> 1172  196  0.489222447  0.107201479 #> 1173  196  0.489222447  0.083740256 #> 1174  196  0.509540462  0.072009644 #> 1175  196  0.529858478  0.083740256 #> 1176  196  0.529858478  0.107201479 #> 1177  197  0.550176493  0.118932091 #> 1178  197  0.529858478  0.107201479 #> 1179  197  0.529858478  0.083740256 #> 1180  197  0.550176493  0.072009644 #> 1181  197  0.570494509  0.083740256 #> 1182  197  0.570494509  0.107201479 #> 1183  198  0.590812524  0.118932091 #> 1184  198  0.570494509  0.107201479 #> 1185  198  0.570494509  0.083740256 #> 1186  198  0.590812524  0.072009644 #> 1187  198  0.611130539  0.083740256 #> 1188  198  0.611130539  0.107201479 #> 1189  199  0.631448555  0.118932091 #> 1190  199  0.611130539  0.107201479 #> 1191  199  0.611130539  0.083740256 #> 1192  199  0.631448555  0.072009644 #> 1193  199  0.651766570  0.083740256 #> 1194  199  0.651766570  0.107201479 #> 1195  200  0.672084586  0.118932091 #> 1196  200  0.651766570  0.107201479 #> 1197  200  0.651766570  0.083740256 #> 1198  200  0.672084586  0.072009644 #> 1199  200  0.692402601  0.083740256 #> 1200  200  0.692402601  0.107201479 #> 1201  201  0.712720616  0.118932091 #> 1202  201  0.692402601  0.107201479 #> 1203  201  0.692402601  0.083740256 #> 1204  201  0.712720616  0.072009644 #> 1205  201  0.733038632  0.083740256 #> 1206  201  0.733038632  0.107201479 #> 1207  202  0.753356647  0.118932091 #> 1208  202  0.733038632  0.107201479 #> 1209  202  0.733038632  0.083740256 #> 1210  202  0.753356647  0.072009644 #> 1211  202  0.773674663  0.083740256 #> 1212  202  0.773674663  0.107201479 #> 1213  203  0.793992678  0.118932091 #> 1214  203  0.773674663  0.107201479 #> 1215  203  0.773674663  0.083740256 #> 1216  203  0.793992678  0.072009644 #> 1217  203  0.814310694  0.083740256 #> 1218  203  0.814310694  0.107201479 #> 1219  204  0.834628709  0.118932091 #> 1220  204  0.814310694  0.107201479 #> 1221  204  0.814310694  0.083740256 #> 1222  204  0.834628709  0.072009644 #> 1223  204  0.854946724  0.083740256 #> 1224  204  0.854946724  0.107201479 #> 1225  205  0.875264740  0.118932091 #> 1226  205  0.854946724  0.107201479 #> 1227  205  0.854946724  0.083740256 #> 1228  205  0.875264740  0.072009644 #> 1229  205  0.895582755  0.083740256 #> 1230  205  0.895582755  0.107201479 #> 1231  206  0.915900771  0.118932091 #> 1232  206  0.895582755  0.107201479 #> 1233  206  0.895582755  0.083740256 #> 1234  206  0.915900771  0.072009644 #> 1235  206  0.936218786  0.083740256 #> 1236  206  0.936218786  0.107201479 #> 1237  207  0.956536801  0.118932091 #> 1238  207  0.936218786  0.107201479 #> 1239  207  0.936218786  0.083740256 #> 1240  207  0.956536801  0.072009644 #> 1241  207  0.976854817  0.083740256 #> 1242  207  0.976854817  0.107201479 #> 1243  208  0.997172832  0.118932091 #> 1244  208  0.976854817  0.107201479 #> 1245  208  0.976854817  0.083740256 #> 1246  208  0.997172832  0.072009644 #> 1247  208  1.017490848  0.083740256 #> 1248  208  1.017490848  0.107201479 #> 1249  209  1.037808863  0.118932091 #> 1250  209  1.017490848  0.107201479 #> 1251  209  1.017490848  0.083740256 #> 1252  209  1.037808863  0.072009644 #> 1253  209  1.058126878  0.083740256 #> 1254  209  1.058126878  0.107201479 #> 1255  210  1.078444894  0.118932091 #> 1256  210  1.058126878  0.107201479 #> 1257  210  1.058126878  0.083740256 #> 1258  210  1.078444894  0.072009644 #> 1259  210  1.098762909  0.083740256 #> 1260  210  1.098762909  0.107201479 #> 1261  211 -0.079681985  0.154123926 #> 1262  211 -0.100000000  0.142393314 #> 1263  211 -0.100000000  0.118932091 #> 1264  211 -0.079681985  0.107201479 #> 1265  211 -0.059363969  0.118932091 #> 1266  211 -0.059363969  0.142393314 #> 1267  212 -0.039045954  0.154123926 #> 1268  212 -0.059363969  0.142393314 #> 1269  212 -0.059363969  0.118932091 #> 1270  212 -0.039045954  0.107201479 #> 1271  212 -0.018727938  0.118932091 #> 1272  212 -0.018727938  0.142393314 #> 1273  213  0.001590077  0.154123926 #> 1274  213 -0.018727938  0.142393314 #> 1275  213 -0.018727938  0.118932091 #> 1276  213  0.001590077  0.107201479 #> 1277  213  0.021908092  0.118932091 #> 1278  213  0.021908092  0.142393314 #> 1279  214  0.042226108  0.154123926 #> 1280  214  0.021908092  0.142393314 #> 1281  214  0.021908092  0.118932091 #> 1282  214  0.042226108  0.107201479 #> 1283  214  0.062544123  0.118932091 #> 1284  214  0.062544123  0.142393314 #> 1285  215  0.082862139  0.154123926 #> 1286  215  0.062544123  0.142393314 #> 1287  215  0.062544123  0.118932091 #> 1288  215  0.082862139  0.107201479 #> 1289  215  0.103180154  0.118932091 #> 1290  215  0.103180154  0.142393314 #> 1291  216  0.123498170  0.154123926 #> 1292  216  0.103180154  0.142393314 #> 1293  216  0.103180154  0.118932091 #> 1294  216  0.123498170  0.107201479 #> 1295  216  0.143816185  0.118932091 #> 1296  216  0.143816185  0.142393314 #> 1297  217  0.164134200  0.154123926 #> 1298  217  0.143816185  0.142393314 #> 1299  217  0.143816185  0.118932091 #> 1300  217  0.164134200  0.107201479 #> 1301  217  0.184452216  0.118932091 #> 1302  217  0.184452216  0.142393314 #> 1303  218  0.204770231  0.154123926 #> 1304  218  0.184452216  0.142393314 #> 1305  218  0.184452216  0.118932091 #> 1306  218  0.204770231  0.107201479 #> 1307  218  0.225088247  0.118932091 #> 1308  218  0.225088247  0.142393314 #> 1309  219  0.245406262  0.154123926 #> 1310  219  0.225088247  0.142393314 #> 1311  219  0.225088247  0.118932091 #> 1312  219  0.245406262  0.107201479 #> 1313  219  0.265724277  0.118932091 #> 1314  219  0.265724277  0.142393314 #> 1315  220  0.286042293  0.154123926 #> 1316  220  0.265724277  0.142393314 #> 1317  220  0.265724277  0.118932091 #> 1318  220  0.286042293  0.107201479 #> 1319  220  0.306360308  0.118932091 #> 1320  220  0.306360308  0.142393314 #> 1321  221  0.326678324  0.154123926 #> 1322  221  0.306360308  0.142393314 #> 1323  221  0.306360308  0.118932091 #> 1324  221  0.326678324  0.107201479 #> 1325  221  0.346996339  0.118932091 #> 1326  221  0.346996339  0.142393314 #> 1327  222  0.367314354  0.154123926 #> 1328  222  0.346996339  0.142393314 #> 1329  222  0.346996339  0.118932091 #> 1330  222  0.367314354  0.107201479 #> 1331  222  0.387632370  0.118932091 #> 1332  222  0.387632370  0.142393314 #> 1333  223  0.407950385  0.154123926 #> 1334  223  0.387632370  0.142393314 #> 1335  223  0.387632370  0.118932091 #> 1336  223  0.407950385  0.107201479 #> 1337  223  0.428268401  0.118932091 #> 1338  223  0.428268401  0.142393314 #> 1339  224  0.448586416  0.154123926 #> 1340  224  0.428268401  0.142393314 #> 1341  224  0.428268401  0.118932091 #> 1342  224  0.448586416  0.107201479 #> 1343  224  0.468904432  0.118932091 #> 1344  224  0.468904432  0.142393314 #> 1345  225  0.489222447  0.154123926 #> 1346  225  0.468904432  0.142393314 #> 1347  225  0.468904432  0.118932091 #> 1348  225  0.489222447  0.107201479 #> 1349  225  0.509540462  0.118932091 #> 1350  225  0.509540462  0.142393314 #> 1351  226  0.529858478  0.154123926 #> 1352  226  0.509540462  0.142393314 #> 1353  226  0.509540462  0.118932091 #> 1354  226  0.529858478  0.107201479 #> 1355  226  0.550176493  0.118932091 #> 1356  226  0.550176493  0.142393314 #> 1357  227  0.570494509  0.154123926 #> 1358  227  0.550176493  0.142393314 #> 1359  227  0.550176493  0.118932091 #> 1360  227  0.570494509  0.107201479 #> 1361  227  0.590812524  0.118932091 #> 1362  227  0.590812524  0.142393314 #> 1363  228  0.611130539  0.154123926 #> 1364  228  0.590812524  0.142393314 #> 1365  228  0.590812524  0.118932091 #> 1366  228  0.611130539  0.107201479 #> 1367  228  0.631448555  0.118932091 #> 1368  228  0.631448555  0.142393314 #> 1369  229  0.651766570  0.154123926 #> 1370  229  0.631448555  0.142393314 #> 1371  229  0.631448555  0.118932091 #> 1372  229  0.651766570  0.107201479 #> 1373  229  0.672084586  0.118932091 #> 1374  229  0.672084586  0.142393314 #> 1375  230  0.692402601  0.154123926 #> 1376  230  0.672084586  0.142393314 #> 1377  230  0.672084586  0.118932091 #> 1378  230  0.692402601  0.107201479 #> 1379  230  0.712720616  0.118932091 #> 1380  230  0.712720616  0.142393314 #> 1381  231  0.733038632  0.154123926 #> 1382  231  0.712720616  0.142393314 #> 1383  231  0.712720616  0.118932091 #> 1384  231  0.733038632  0.107201479 #> 1385  231  0.753356647  0.118932091 #> 1386  231  0.753356647  0.142393314 #> 1387  232  0.773674663  0.154123926 #> 1388  232  0.753356647  0.142393314 #> 1389  232  0.753356647  0.118932091 #> 1390  232  0.773674663  0.107201479 #> 1391  232  0.793992678  0.118932091 #> 1392  232  0.793992678  0.142393314 #> 1393  233  0.814310694  0.154123926 #> 1394  233  0.793992678  0.142393314 #> 1395  233  0.793992678  0.118932091 #> 1396  233  0.814310694  0.107201479 #> 1397  233  0.834628709  0.118932091 #> 1398  233  0.834628709  0.142393314 #> 1399  234  0.854946724  0.154123926 #> 1400  234  0.834628709  0.142393314 #> 1401  234  0.834628709  0.118932091 #> 1402  234  0.854946724  0.107201479 #> 1403  234  0.875264740  0.118932091 #> 1404  234  0.875264740  0.142393314 #> 1405  235  0.895582755  0.154123926 #> 1406  235  0.875264740  0.142393314 #> 1407  235  0.875264740  0.118932091 #> 1408  235  0.895582755  0.107201479 #> 1409  235  0.915900771  0.118932091 #> 1410  235  0.915900771  0.142393314 #> 1411  236  0.936218786  0.154123926 #> 1412  236  0.915900771  0.142393314 #> 1413  236  0.915900771  0.118932091 #> 1414  236  0.936218786  0.107201479 #> 1415  236  0.956536801  0.118932091 #> 1416  236  0.956536801  0.142393314 #> 1417  237  0.976854817  0.154123926 #> 1418  237  0.956536801  0.142393314 #> 1419  237  0.956536801  0.118932091 #> 1420  237  0.976854817  0.107201479 #> 1421  237  0.997172832  0.118932091 #> 1422  237  0.997172832  0.142393314 #> 1423  238  1.017490848  0.154123926 #> 1424  238  0.997172832  0.142393314 #> 1425  238  0.997172832  0.118932091 #> 1426  238  1.017490848  0.107201479 #> 1427  238  1.037808863  0.118932091 #> 1428  238  1.037808863  0.142393314 #> 1429  239  1.058126878  0.154123926 #> 1430  239  1.037808863  0.142393314 #> 1431  239  1.037808863  0.118932091 #> 1432  239  1.058126878  0.107201479 #> 1433  239  1.078444894  0.118932091 #> 1434  239  1.078444894  0.142393314 #> 1435  240  1.098762909  0.154123926 #> 1436  240  1.078444894  0.142393314 #> 1437  240  1.078444894  0.118932091 #> 1438  240  1.098762909  0.107201479 #> 1439  240  1.119080925  0.118932091 #> 1440  240  1.119080925  0.142393314 #> 1441  241 -0.100000000  0.189315761 #> 1442  241 -0.120318015  0.177585149 #> 1443  241 -0.120318015  0.154123926 #> 1444  241 -0.100000000  0.142393314 #> 1445  241 -0.079681985  0.154123926 #> 1446  241 -0.079681985  0.177585149 #> 1447  242 -0.059363969  0.189315761 #> 1448  242 -0.079681985  0.177585149 #> 1449  242 -0.079681985  0.154123926 #> 1450  242 -0.059363969  0.142393314 #> 1451  242 -0.039045954  0.154123926 #> 1452  242 -0.039045954  0.177585149 #> 1453  243 -0.018727938  0.189315761 #> 1454  243 -0.039045954  0.177585149 #> 1455  243 -0.039045954  0.154123926 #> 1456  243 -0.018727938  0.142393314 #> 1457  243  0.001590077  0.154123926 #> 1458  243  0.001590077  0.177585149 #> 1459  244  0.021908092  0.189315761 #> 1460  244  0.001590077  0.177585149 #> 1461  244  0.001590077  0.154123926 #> 1462  244  0.021908092  0.142393314 #> 1463  244  0.042226108  0.154123926 #> 1464  244  0.042226108  0.177585149 #> 1465  245  0.062544123  0.189315761 #> 1466  245  0.042226108  0.177585149 #> 1467  245  0.042226108  0.154123926 #> 1468  245  0.062544123  0.142393314 #> 1469  245  0.082862139  0.154123926 #> 1470  245  0.082862139  0.177585149 #> 1471  246  0.103180154  0.189315761 #> 1472  246  0.082862139  0.177585149 #> 1473  246  0.082862139  0.154123926 #> 1474  246  0.103180154  0.142393314 #> 1475  246  0.123498170  0.154123926 #> 1476  246  0.123498170  0.177585149 #> 1477  247  0.143816185  0.189315761 #> 1478  247  0.123498170  0.177585149 #> 1479  247  0.123498170  0.154123926 #> 1480  247  0.143816185  0.142393314 #> 1481  247  0.164134200  0.154123926 #> 1482  247  0.164134200  0.177585149 #> 1483  248  0.184452216  0.189315761 #> 1484  248  0.164134200  0.177585149 #> 1485  248  0.164134200  0.154123926 #> 1486  248  0.184452216  0.142393314 #> 1487  248  0.204770231  0.154123926 #> 1488  248  0.204770231  0.177585149 #> 1489  249  0.225088247  0.189315761 #> 1490  249  0.204770231  0.177585149 #> 1491  249  0.204770231  0.154123926 #> 1492  249  0.225088247  0.142393314 #> 1493  249  0.245406262  0.154123926 #> 1494  249  0.245406262  0.177585149 #> 1495  250  0.265724277  0.189315761 #> 1496  250  0.245406262  0.177585149 #> 1497  250  0.245406262  0.154123926 #> 1498  250  0.265724277  0.142393314 #> 1499  250  0.286042293  0.154123926 #> 1500  250  0.286042293  0.177585149 #> 1501  251  0.306360308  0.189315761 #> 1502  251  0.286042293  0.177585149 #> 1503  251  0.286042293  0.154123926 #> 1504  251  0.306360308  0.142393314 #> 1505  251  0.326678324  0.154123926 #> 1506  251  0.326678324  0.177585149 #> 1507  252  0.346996339  0.189315761 #> 1508  252  0.326678324  0.177585149 #> 1509  252  0.326678324  0.154123926 #> 1510  252  0.346996339  0.142393314 #> 1511  252  0.367314354  0.154123926 #> 1512  252  0.367314354  0.177585149 #> 1513  253  0.387632370  0.189315761 #> 1514  253  0.367314354  0.177585149 #> 1515  253  0.367314354  0.154123926 #> 1516  253  0.387632370  0.142393314 #> 1517  253  0.407950385  0.154123926 #> 1518  253  0.407950385  0.177585149 #> 1519  254  0.428268401  0.189315761 #> 1520  254  0.407950385  0.177585149 #> 1521  254  0.407950385  0.154123926 #> 1522  254  0.428268401  0.142393314 #> 1523  254  0.448586416  0.154123926 #> 1524  254  0.448586416  0.177585149 #> 1525  255  0.468904432  0.189315761 #> 1526  255  0.448586416  0.177585149 #> 1527  255  0.448586416  0.154123926 #> 1528  255  0.468904432  0.142393314 #> 1529  255  0.489222447  0.154123926 #> 1530  255  0.489222447  0.177585149 #> 1531  256  0.509540462  0.189315761 #> 1532  256  0.489222447  0.177585149 #> 1533  256  0.489222447  0.154123926 #> 1534  256  0.509540462  0.142393314 #> 1535  256  0.529858478  0.154123926 #> 1536  256  0.529858478  0.177585149 #> 1537  257  0.550176493  0.189315761 #> 1538  257  0.529858478  0.177585149 #> 1539  257  0.529858478  0.154123926 #> 1540  257  0.550176493  0.142393314 #> 1541  257  0.570494509  0.154123926 #> 1542  257  0.570494509  0.177585149 #> 1543  258  0.590812524  0.189315761 #> 1544  258  0.570494509  0.177585149 #> 1545  258  0.570494509  0.154123926 #> 1546  258  0.590812524  0.142393314 #> 1547  258  0.611130539  0.154123926 #> 1548  258  0.611130539  0.177585149 #> 1549  259  0.631448555  0.189315761 #> 1550  259  0.611130539  0.177585149 #> 1551  259  0.611130539  0.154123926 #> 1552  259  0.631448555  0.142393314 #> 1553  259  0.651766570  0.154123926 #> 1554  259  0.651766570  0.177585149 #> 1555  260  0.672084586  0.189315761 #> 1556  260  0.651766570  0.177585149 #> 1557  260  0.651766570  0.154123926 #> 1558  260  0.672084586  0.142393314 #> 1559  260  0.692402601  0.154123926 #> 1560  260  0.692402601  0.177585149 #> 1561  261  0.712720616  0.189315761 #> 1562  261  0.692402601  0.177585149 #> 1563  261  0.692402601  0.154123926 #> 1564  261  0.712720616  0.142393314 #> 1565  261  0.733038632  0.154123926 #> 1566  261  0.733038632  0.177585149 #> 1567  262  0.753356647  0.189315761 #> 1568  262  0.733038632  0.177585149 #> 1569  262  0.733038632  0.154123926 #> 1570  262  0.753356647  0.142393314 #> 1571  262  0.773674663  0.154123926 #> 1572  262  0.773674663  0.177585149 #> 1573  263  0.793992678  0.189315761 #> 1574  263  0.773674663  0.177585149 #> 1575  263  0.773674663  0.154123926 #> 1576  263  0.793992678  0.142393314 #> 1577  263  0.814310694  0.154123926 #> 1578  263  0.814310694  0.177585149 #> 1579  264  0.834628709  0.189315761 #> 1580  264  0.814310694  0.177585149 #> 1581  264  0.814310694  0.154123926 #> 1582  264  0.834628709  0.142393314 #> 1583  264  0.854946724  0.154123926 #> 1584  264  0.854946724  0.177585149 #> 1585  265  0.875264740  0.189315761 #> 1586  265  0.854946724  0.177585149 #> 1587  265  0.854946724  0.154123926 #> 1588  265  0.875264740  0.142393314 #> 1589  265  0.895582755  0.154123926 #> 1590  265  0.895582755  0.177585149 #> 1591  266  0.915900771  0.189315761 #> 1592  266  0.895582755  0.177585149 #> 1593  266  0.895582755  0.154123926 #> 1594  266  0.915900771  0.142393314 #> 1595  266  0.936218786  0.154123926 #> 1596  266  0.936218786  0.177585149 #> 1597  267  0.956536801  0.189315761 #> 1598  267  0.936218786  0.177585149 #> 1599  267  0.936218786  0.154123926 #> 1600  267  0.956536801  0.142393314 #> 1601  267  0.976854817  0.154123926 #> 1602  267  0.976854817  0.177585149 #> 1603  268  0.997172832  0.189315761 #> 1604  268  0.976854817  0.177585149 #> 1605  268  0.976854817  0.154123926 #> 1606  268  0.997172832  0.142393314 #> 1607  268  1.017490848  0.154123926 #> 1608  268  1.017490848  0.177585149 #> 1609  269  1.037808863  0.189315761 #> 1610  269  1.017490848  0.177585149 #> 1611  269  1.017490848  0.154123926 #> 1612  269  1.037808863  0.142393314 #> 1613  269  1.058126878  0.154123926 #> 1614  269  1.058126878  0.177585149 #> 1615  270  1.078444894  0.189315761 #> 1616  270  1.058126878  0.177585149 #> 1617  270  1.058126878  0.154123926 #> 1618  270  1.078444894  0.142393314 #> 1619  270  1.098762909  0.154123926 #> 1620  270  1.098762909  0.177585149 #> 1621  271 -0.079681985  0.224507596 #> 1622  271 -0.100000000  0.212776984 #> 1623  271 -0.100000000  0.189315761 #> 1624  271 -0.079681985  0.177585149 #> 1625  271 -0.059363969  0.189315761 #> 1626  271 -0.059363969  0.212776984 #> 1627  272 -0.039045954  0.224507596 #> 1628  272 -0.059363969  0.212776984 #> 1629  272 -0.059363969  0.189315761 #> 1630  272 -0.039045954  0.177585149 #> 1631  272 -0.018727938  0.189315761 #> 1632  272 -0.018727938  0.212776984 #> 1633  273  0.001590077  0.224507596 #> 1634  273 -0.018727938  0.212776984 #> 1635  273 -0.018727938  0.189315761 #> 1636  273  0.001590077  0.177585149 #> 1637  273  0.021908092  0.189315761 #> 1638  273  0.021908092  0.212776984 #> 1639  274  0.042226108  0.224507596 #> 1640  274  0.021908092  0.212776984 #> 1641  274  0.021908092  0.189315761 #> 1642  274  0.042226108  0.177585149 #> 1643  274  0.062544123  0.189315761 #> 1644  274  0.062544123  0.212776984 #> 1645  275  0.082862139  0.224507596 #> 1646  275  0.062544123  0.212776984 #> 1647  275  0.062544123  0.189315761 #> 1648  275  0.082862139  0.177585149 #> 1649  275  0.103180154  0.189315761 #> 1650  275  0.103180154  0.212776984 #> 1651  276  0.123498170  0.224507596 #> 1652  276  0.103180154  0.212776984 #> 1653  276  0.103180154  0.189315761 #> 1654  276  0.123498170  0.177585149 #> 1655  276  0.143816185  0.189315761 #> 1656  276  0.143816185  0.212776984 #> 1657  277  0.164134200  0.224507596 #> 1658  277  0.143816185  0.212776984 #> 1659  277  0.143816185  0.189315761 #> 1660  277  0.164134200  0.177585149 #> 1661  277  0.184452216  0.189315761 #> 1662  277  0.184452216  0.212776984 #> 1663  278  0.204770231  0.224507596 #> 1664  278  0.184452216  0.212776984 #> 1665  278  0.184452216  0.189315761 #> 1666  278  0.204770231  0.177585149 #> 1667  278  0.225088247  0.189315761 #> 1668  278  0.225088247  0.212776984 #> 1669  279  0.245406262  0.224507596 #> 1670  279  0.225088247  0.212776984 #> 1671  279  0.225088247  0.189315761 #> 1672  279  0.245406262  0.177585149 #> 1673  279  0.265724277  0.189315761 #> 1674  279  0.265724277  0.212776984 #> 1675  280  0.286042293  0.224507596 #> 1676  280  0.265724277  0.212776984 #> 1677  280  0.265724277  0.189315761 #> 1678  280  0.286042293  0.177585149 #> 1679  280  0.306360308  0.189315761 #> 1680  280  0.306360308  0.212776984 #> 1681  281  0.326678324  0.224507596 #> 1682  281  0.306360308  0.212776984 #> 1683  281  0.306360308  0.189315761 #> 1684  281  0.326678324  0.177585149 #> 1685  281  0.346996339  0.189315761 #> 1686  281  0.346996339  0.212776984 #> 1687  282  0.367314354  0.224507596 #> 1688  282  0.346996339  0.212776984 #> 1689  282  0.346996339  0.189315761 #> 1690  282  0.367314354  0.177585149 #> 1691  282  0.387632370  0.189315761 #> 1692  282  0.387632370  0.212776984 #> 1693  283  0.407950385  0.224507596 #> 1694  283  0.387632370  0.212776984 #> 1695  283  0.387632370  0.189315761 #> 1696  283  0.407950385  0.177585149 #> 1697  283  0.428268401  0.189315761 #> 1698  283  0.428268401  0.212776984 #> 1699  284  0.448586416  0.224507596 #> 1700  284  0.428268401  0.212776984 #> 1701  284  0.428268401  0.189315761 #> 1702  284  0.448586416  0.177585149 #> 1703  284  0.468904432  0.189315761 #> 1704  284  0.468904432  0.212776984 #> 1705  285  0.489222447  0.224507596 #> 1706  285  0.468904432  0.212776984 #> 1707  285  0.468904432  0.189315761 #> 1708  285  0.489222447  0.177585149 #> 1709  285  0.509540462  0.189315761 #> 1710  285  0.509540462  0.212776984 #> 1711  286  0.529858478  0.224507596 #> 1712  286  0.509540462  0.212776984 #> 1713  286  0.509540462  0.189315761 #> 1714  286  0.529858478  0.177585149 #> 1715  286  0.550176493  0.189315761 #> 1716  286  0.550176493  0.212776984 #> 1717  287  0.570494509  0.224507596 #> 1718  287  0.550176493  0.212776984 #> 1719  287  0.550176493  0.189315761 #> 1720  287  0.570494509  0.177585149 #> 1721  287  0.590812524  0.189315761 #> 1722  287  0.590812524  0.212776984 #> 1723  288  0.611130539  0.224507596 #> 1724  288  0.590812524  0.212776984 #> 1725  288  0.590812524  0.189315761 #> 1726  288  0.611130539  0.177585149 #> 1727  288  0.631448555  0.189315761 #> 1728  288  0.631448555  0.212776984 #> 1729  289  0.651766570  0.224507596 #> 1730  289  0.631448555  0.212776984 #> 1731  289  0.631448555  0.189315761 #> 1732  289  0.651766570  0.177585149 #> 1733  289  0.672084586  0.189315761 #> 1734  289  0.672084586  0.212776984 #> 1735  290  0.692402601  0.224507596 #> 1736  290  0.672084586  0.212776984 #> 1737  290  0.672084586  0.189315761 #> 1738  290  0.692402601  0.177585149 #> 1739  290  0.712720616  0.189315761 #> 1740  290  0.712720616  0.212776984 #> 1741  291  0.733038632  0.224507596 #> 1742  291  0.712720616  0.212776984 #> 1743  291  0.712720616  0.189315761 #> 1744  291  0.733038632  0.177585149 #> 1745  291  0.753356647  0.189315761 #> 1746  291  0.753356647  0.212776984 #> 1747  292  0.773674663  0.224507596 #> 1748  292  0.753356647  0.212776984 #> 1749  292  0.753356647  0.189315761 #> 1750  292  0.773674663  0.177585149 #> 1751  292  0.793992678  0.189315761 #> 1752  292  0.793992678  0.212776984 #> 1753  293  0.814310694  0.224507596 #> 1754  293  0.793992678  0.212776984 #> 1755  293  0.793992678  0.189315761 #> 1756  293  0.814310694  0.177585149 #> 1757  293  0.834628709  0.189315761 #> 1758  293  0.834628709  0.212776984 #> 1759  294  0.854946724  0.224507596 #> 1760  294  0.834628709  0.212776984 #> 1761  294  0.834628709  0.189315761 #> 1762  294  0.854946724  0.177585149 #> 1763  294  0.875264740  0.189315761 #> 1764  294  0.875264740  0.212776984 #> 1765  295  0.895582755  0.224507596 #> 1766  295  0.875264740  0.212776984 #> 1767  295  0.875264740  0.189315761 #> 1768  295  0.895582755  0.177585149 #> 1769  295  0.915900771  0.189315761 #> 1770  295  0.915900771  0.212776984 #> 1771  296  0.936218786  0.224507596 #> 1772  296  0.915900771  0.212776984 #> 1773  296  0.915900771  0.189315761 #> 1774  296  0.936218786  0.177585149 #> 1775  296  0.956536801  0.189315761 #> 1776  296  0.956536801  0.212776984 #> 1777  297  0.976854817  0.224507596 #> 1778  297  0.956536801  0.212776984 #> 1779  297  0.956536801  0.189315761 #> 1780  297  0.976854817  0.177585149 #> 1781  297  0.997172832  0.189315761 #> 1782  297  0.997172832  0.212776984 #> 1783  298  1.017490848  0.224507596 #> 1784  298  0.997172832  0.212776984 #> 1785  298  0.997172832  0.189315761 #> 1786  298  1.017490848  0.177585149 #> 1787  298  1.037808863  0.189315761 #> 1788  298  1.037808863  0.212776984 #> 1789  299  1.058126878  0.224507596 #> 1790  299  1.037808863  0.212776984 #> 1791  299  1.037808863  0.189315761 #> 1792  299  1.058126878  0.177585149 #> 1793  299  1.078444894  0.189315761 #> 1794  299  1.078444894  0.212776984 #> 1795  300  1.098762909  0.224507596 #> 1796  300  1.078444894  0.212776984 #> 1797  300  1.078444894  0.189315761 #> 1798  300  1.098762909  0.177585149 #> 1799  300  1.119080925  0.189315761 #> 1800  300  1.119080925  0.212776984 #> 1801  301 -0.100000000  0.259699431 #> 1802  301 -0.120318015  0.247968819 #> 1803  301 -0.120318015  0.224507596 #> 1804  301 -0.100000000  0.212776984 #> 1805  301 -0.079681985  0.224507596 #> 1806  301 -0.079681985  0.247968819 #> 1807  302 -0.059363969  0.259699431 #> 1808  302 -0.079681985  0.247968819 #> 1809  302 -0.079681985  0.224507596 #> 1810  302 -0.059363969  0.212776984 #> 1811  302 -0.039045954  0.224507596 #> 1812  302 -0.039045954  0.247968819 #> 1813  303 -0.018727938  0.259699431 #> 1814  303 -0.039045954  0.247968819 #> 1815  303 -0.039045954  0.224507596 #> 1816  303 -0.018727938  0.212776984 #> 1817  303  0.001590077  0.224507596 #> 1818  303  0.001590077  0.247968819 #> 1819  304  0.021908092  0.259699431 #> 1820  304  0.001590077  0.247968819 #> 1821  304  0.001590077  0.224507596 #> 1822  304  0.021908092  0.212776984 #> 1823  304  0.042226108  0.224507596 #> 1824  304  0.042226108  0.247968819 #> 1825  305  0.062544123  0.259699431 #> 1826  305  0.042226108  0.247968819 #> 1827  305  0.042226108  0.224507596 #> 1828  305  0.062544123  0.212776984 #> 1829  305  0.082862139  0.224507596 #> 1830  305  0.082862139  0.247968819 #> 1831  306  0.103180154  0.259699431 #> 1832  306  0.082862139  0.247968819 #> 1833  306  0.082862139  0.224507596 #> 1834  306  0.103180154  0.212776984 #> 1835  306  0.123498170  0.224507596 #> 1836  306  0.123498170  0.247968819 #> 1837  307  0.143816185  0.259699431 #> 1838  307  0.123498170  0.247968819 #> 1839  307  0.123498170  0.224507596 #> 1840  307  0.143816185  0.212776984 #> 1841  307  0.164134200  0.224507596 #> 1842  307  0.164134200  0.247968819 #> 1843  308  0.184452216  0.259699431 #> 1844  308  0.164134200  0.247968819 #> 1845  308  0.164134200  0.224507596 #> 1846  308  0.184452216  0.212776984 #> 1847  308  0.204770231  0.224507596 #> 1848  308  0.204770231  0.247968819 #> 1849  309  0.225088247  0.259699431 #> 1850  309  0.204770231  0.247968819 #> 1851  309  0.204770231  0.224507596 #> 1852  309  0.225088247  0.212776984 #> 1853  309  0.245406262  0.224507596 #> 1854  309  0.245406262  0.247968819 #> 1855  310  0.265724277  0.259699431 #> 1856  310  0.245406262  0.247968819 #> 1857  310  0.245406262  0.224507596 #> 1858  310  0.265724277  0.212776984 #> 1859  310  0.286042293  0.224507596 #> 1860  310  0.286042293  0.247968819 #> 1861  311  0.306360308  0.259699431 #> 1862  311  0.286042293  0.247968819 #> 1863  311  0.286042293  0.224507596 #> 1864  311  0.306360308  0.212776984 #> 1865  311  0.326678324  0.224507596 #> 1866  311  0.326678324  0.247968819 #> 1867  312  0.346996339  0.259699431 #> 1868  312  0.326678324  0.247968819 #> 1869  312  0.326678324  0.224507596 #> 1870  312  0.346996339  0.212776984 #> 1871  312  0.367314354  0.224507596 #> 1872  312  0.367314354  0.247968819 #> 1873  313  0.387632370  0.259699431 #> 1874  313  0.367314354  0.247968819 #> 1875  313  0.367314354  0.224507596 #> 1876  313  0.387632370  0.212776984 #> 1877  313  0.407950385  0.224507596 #> 1878  313  0.407950385  0.247968819 #> 1879  314  0.428268401  0.259699431 #> 1880  314  0.407950385  0.247968819 #> 1881  314  0.407950385  0.224507596 #> 1882  314  0.428268401  0.212776984 #> 1883  314  0.448586416  0.224507596 #> 1884  314  0.448586416  0.247968819 #> 1885  315  0.468904432  0.259699431 #> 1886  315  0.448586416  0.247968819 #> 1887  315  0.448586416  0.224507596 #> 1888  315  0.468904432  0.212776984 #> 1889  315  0.489222447  0.224507596 #> 1890  315  0.489222447  0.247968819 #> 1891  316  0.509540462  0.259699431 #> 1892  316  0.489222447  0.247968819 #> 1893  316  0.489222447  0.224507596 #> 1894  316  0.509540462  0.212776984 #> 1895  316  0.529858478  0.224507596 #> 1896  316  0.529858478  0.247968819 #> 1897  317  0.550176493  0.259699431 #> 1898  317  0.529858478  0.247968819 #> 1899  317  0.529858478  0.224507596 #> 1900  317  0.550176493  0.212776984 #> 1901  317  0.570494509  0.224507596 #> 1902  317  0.570494509  0.247968819 #> 1903  318  0.590812524  0.259699431 #> 1904  318  0.570494509  0.247968819 #> 1905  318  0.570494509  0.224507596 #> 1906  318  0.590812524  0.212776984 #> 1907  318  0.611130539  0.224507596 #> 1908  318  0.611130539  0.247968819 #> 1909  319  0.631448555  0.259699431 #> 1910  319  0.611130539  0.247968819 #> 1911  319  0.611130539  0.224507596 #> 1912  319  0.631448555  0.212776984 #> 1913  319  0.651766570  0.224507596 #> 1914  319  0.651766570  0.247968819 #> 1915  320  0.672084586  0.259699431 #> 1916  320  0.651766570  0.247968819 #> 1917  320  0.651766570  0.224507596 #> 1918  320  0.672084586  0.212776984 #> 1919  320  0.692402601  0.224507596 #> 1920  320  0.692402601  0.247968819 #> 1921  321  0.712720616  0.259699431 #> 1922  321  0.692402601  0.247968819 #> 1923  321  0.692402601  0.224507596 #> 1924  321  0.712720616  0.212776984 #> 1925  321  0.733038632  0.224507596 #> 1926  321  0.733038632  0.247968819 #> 1927  322  0.753356647  0.259699431 #> 1928  322  0.733038632  0.247968819 #> 1929  322  0.733038632  0.224507596 #> 1930  322  0.753356647  0.212776984 #> 1931  322  0.773674663  0.224507596 #> 1932  322  0.773674663  0.247968819 #> 1933  323  0.793992678  0.259699431 #> 1934  323  0.773674663  0.247968819 #> 1935  323  0.773674663  0.224507596 #> 1936  323  0.793992678  0.212776984 #> 1937  323  0.814310694  0.224507596 #> 1938  323  0.814310694  0.247968819 #> 1939  324  0.834628709  0.259699431 #> 1940  324  0.814310694  0.247968819 #> 1941  324  0.814310694  0.224507596 #> 1942  324  0.834628709  0.212776984 #> 1943  324  0.854946724  0.224507596 #> 1944  324  0.854946724  0.247968819 #> 1945  325  0.875264740  0.259699431 #> 1946  325  0.854946724  0.247968819 #> 1947  325  0.854946724  0.224507596 #> 1948  325  0.875264740  0.212776984 #> 1949  325  0.895582755  0.224507596 #> 1950  325  0.895582755  0.247968819 #> 1951  326  0.915900771  0.259699431 #> 1952  326  0.895582755  0.247968819 #> 1953  326  0.895582755  0.224507596 #> 1954  326  0.915900771  0.212776984 #> 1955  326  0.936218786  0.224507596 #> 1956  326  0.936218786  0.247968819 #> 1957  327  0.956536801  0.259699431 #> 1958  327  0.936218786  0.247968819 #> 1959  327  0.936218786  0.224507596 #> 1960  327  0.956536801  0.212776984 #> 1961  327  0.976854817  0.224507596 #> 1962  327  0.976854817  0.247968819 #> 1963  328  0.997172832  0.259699431 #> 1964  328  0.976854817  0.247968819 #> 1965  328  0.976854817  0.224507596 #> 1966  328  0.997172832  0.212776984 #> 1967  328  1.017490848  0.224507596 #> 1968  328  1.017490848  0.247968819 #> 1969  329  1.037808863  0.259699431 #> 1970  329  1.017490848  0.247968819 #> 1971  329  1.017490848  0.224507596 #> 1972  329  1.037808863  0.212776984 #> 1973  329  1.058126878  0.224507596 #> 1974  329  1.058126878  0.247968819 #> 1975  330  1.078444894  0.259699431 #> 1976  330  1.058126878  0.247968819 #> 1977  330  1.058126878  0.224507596 #> 1978  330  1.078444894  0.212776984 #> 1979  330  1.098762909  0.224507596 #> 1980  330  1.098762909  0.247968819 #> 1981  331 -0.079681985  0.294891266 #> 1982  331 -0.100000000  0.283160654 #> 1983  331 -0.100000000  0.259699431 #> 1984  331 -0.079681985  0.247968819 #> 1985  331 -0.059363969  0.259699431 #> 1986  331 -0.059363969  0.283160654 #> 1987  332 -0.039045954  0.294891266 #> 1988  332 -0.059363969  0.283160654 #> 1989  332 -0.059363969  0.259699431 #> 1990  332 -0.039045954  0.247968819 #> 1991  332 -0.018727938  0.259699431 #> 1992  332 -0.018727938  0.283160654 #> 1993  333  0.001590077  0.294891266 #> 1994  333 -0.018727938  0.283160654 #> 1995  333 -0.018727938  0.259699431 #> 1996  333  0.001590077  0.247968819 #> 1997  333  0.021908092  0.259699431 #> 1998  333  0.021908092  0.283160654 #> 1999  334  0.042226108  0.294891266 #> 2000  334  0.021908092  0.283160654 #> 2001  334  0.021908092  0.259699431 #> 2002  334  0.042226108  0.247968819 #> 2003  334  0.062544123  0.259699431 #> 2004  334  0.062544123  0.283160654 #> 2005  335  0.082862139  0.294891266 #> 2006  335  0.062544123  0.283160654 #> 2007  335  0.062544123  0.259699431 #> 2008  335  0.082862139  0.247968819 #> 2009  335  0.103180154  0.259699431 #> 2010  335  0.103180154  0.283160654 #> 2011  336  0.123498170  0.294891266 #> 2012  336  0.103180154  0.283160654 #> 2013  336  0.103180154  0.259699431 #> 2014  336  0.123498170  0.247968819 #> 2015  336  0.143816185  0.259699431 #> 2016  336  0.143816185  0.283160654 #> 2017  337  0.164134200  0.294891266 #> 2018  337  0.143816185  0.283160654 #> 2019  337  0.143816185  0.259699431 #> 2020  337  0.164134200  0.247968819 #> 2021  337  0.184452216  0.259699431 #> 2022  337  0.184452216  0.283160654 #> 2023  338  0.204770231  0.294891266 #> 2024  338  0.184452216  0.283160654 #> 2025  338  0.184452216  0.259699431 #> 2026  338  0.204770231  0.247968819 #> 2027  338  0.225088247  0.259699431 #> 2028  338  0.225088247  0.283160654 #> 2029  339  0.245406262  0.294891266 #> 2030  339  0.225088247  0.283160654 #> 2031  339  0.225088247  0.259699431 #> 2032  339  0.245406262  0.247968819 #> 2033  339  0.265724277  0.259699431 #> 2034  339  0.265724277  0.283160654 #> 2035  340  0.286042293  0.294891266 #> 2036  340  0.265724277  0.283160654 #> 2037  340  0.265724277  0.259699431 #> 2038  340  0.286042293  0.247968819 #> 2039  340  0.306360308  0.259699431 #> 2040  340  0.306360308  0.283160654 #> 2041  341  0.326678324  0.294891266 #> 2042  341  0.306360308  0.283160654 #> 2043  341  0.306360308  0.259699431 #> 2044  341  0.326678324  0.247968819 #> 2045  341  0.346996339  0.259699431 #> 2046  341  0.346996339  0.283160654 #> 2047  342  0.367314354  0.294891266 #> 2048  342  0.346996339  0.283160654 #> 2049  342  0.346996339  0.259699431 #> 2050  342  0.367314354  0.247968819 #> 2051  342  0.387632370  0.259699431 #> 2052  342  0.387632370  0.283160654 #> 2053  343  0.407950385  0.294891266 #> 2054  343  0.387632370  0.283160654 #> 2055  343  0.387632370  0.259699431 #> 2056  343  0.407950385  0.247968819 #> 2057  343  0.428268401  0.259699431 #> 2058  343  0.428268401  0.283160654 #> 2059  344  0.448586416  0.294891266 #> 2060  344  0.428268401  0.283160654 #> 2061  344  0.428268401  0.259699431 #> 2062  344  0.448586416  0.247968819 #> 2063  344  0.468904432  0.259699431 #> 2064  344  0.468904432  0.283160654 #> 2065  345  0.489222447  0.294891266 #> 2066  345  0.468904432  0.283160654 #> 2067  345  0.468904432  0.259699431 #> 2068  345  0.489222447  0.247968819 #> 2069  345  0.509540462  0.259699431 #> 2070  345  0.509540462  0.283160654 #> 2071  346  0.529858478  0.294891266 #> 2072  346  0.509540462  0.283160654 #> 2073  346  0.509540462  0.259699431 #> 2074  346  0.529858478  0.247968819 #> 2075  346  0.550176493  0.259699431 #> 2076  346  0.550176493  0.283160654 #> 2077  347  0.570494509  0.294891266 #> 2078  347  0.550176493  0.283160654 #> 2079  347  0.550176493  0.259699431 #> 2080  347  0.570494509  0.247968819 #> 2081  347  0.590812524  0.259699431 #> 2082  347  0.590812524  0.283160654 #> 2083  348  0.611130539  0.294891266 #> 2084  348  0.590812524  0.283160654 #> 2085  348  0.590812524  0.259699431 #> 2086  348  0.611130539  0.247968819 #> 2087  348  0.631448555  0.259699431 #> 2088  348  0.631448555  0.283160654 #> 2089  349  0.651766570  0.294891266 #> 2090  349  0.631448555  0.283160654 #> 2091  349  0.631448555  0.259699431 #> 2092  349  0.651766570  0.247968819 #> 2093  349  0.672084586  0.259699431 #> 2094  349  0.672084586  0.283160654 #> 2095  350  0.692402601  0.294891266 #> 2096  350  0.672084586  0.283160654 #> 2097  350  0.672084586  0.259699431 #> 2098  350  0.692402601  0.247968819 #> 2099  350  0.712720616  0.259699431 #> 2100  350  0.712720616  0.283160654 #> 2101  351  0.733038632  0.294891266 #> 2102  351  0.712720616  0.283160654 #> 2103  351  0.712720616  0.259699431 #> 2104  351  0.733038632  0.247968819 #> 2105  351  0.753356647  0.259699431 #> 2106  351  0.753356647  0.283160654 #> 2107  352  0.773674663  0.294891266 #> 2108  352  0.753356647  0.283160654 #> 2109  352  0.753356647  0.259699431 #> 2110  352  0.773674663  0.247968819 #> 2111  352  0.793992678  0.259699431 #> 2112  352  0.793992678  0.283160654 #> 2113  353  0.814310694  0.294891266 #> 2114  353  0.793992678  0.283160654 #> 2115  353  0.793992678  0.259699431 #> 2116  353  0.814310694  0.247968819 #> 2117  353  0.834628709  0.259699431 #> 2118  353  0.834628709  0.283160654 #> 2119  354  0.854946724  0.294891266 #> 2120  354  0.834628709  0.283160654 #> 2121  354  0.834628709  0.259699431 #> 2122  354  0.854946724  0.247968819 #> 2123  354  0.875264740  0.259699431 #> 2124  354  0.875264740  0.283160654 #> 2125  355  0.895582755  0.294891266 #> 2126  355  0.875264740  0.283160654 #> 2127  355  0.875264740  0.259699431 #> 2128  355  0.895582755  0.247968819 #> 2129  355  0.915900771  0.259699431 #> 2130  355  0.915900771  0.283160654 #> 2131  356  0.936218786  0.294891266 #> 2132  356  0.915900771  0.283160654 #> 2133  356  0.915900771  0.259699431 #> 2134  356  0.936218786  0.247968819 #> 2135  356  0.956536801  0.259699431 #> 2136  356  0.956536801  0.283160654 #> 2137  357  0.976854817  0.294891266 #> 2138  357  0.956536801  0.283160654 #> 2139  357  0.956536801  0.259699431 #> 2140  357  0.976854817  0.247968819 #> 2141  357  0.997172832  0.259699431 #> 2142  357  0.997172832  0.283160654 #> 2143  358  1.017490848  0.294891266 #> 2144  358  0.997172832  0.283160654 #> 2145  358  0.997172832  0.259699431 #> 2146  358  1.017490848  0.247968819 #> 2147  358  1.037808863  0.259699431 #> 2148  358  1.037808863  0.283160654 #> 2149  359  1.058126878  0.294891266 #> 2150  359  1.037808863  0.283160654 #> 2151  359  1.037808863  0.259699431 #> 2152  359  1.058126878  0.247968819 #> 2153  359  1.078444894  0.259699431 #> 2154  359  1.078444894  0.283160654 #> 2155  360  1.098762909  0.294891266 #> 2156  360  1.078444894  0.283160654 #> 2157  360  1.078444894  0.259699431 #> 2158  360  1.098762909  0.247968819 #> 2159  360  1.119080925  0.259699431 #> 2160  360  1.119080925  0.283160654 #> 2161  361 -0.100000000  0.330083101 #> 2162  361 -0.120318015  0.318352489 #> 2163  361 -0.120318015  0.294891266 #> 2164  361 -0.100000000  0.283160654 #> 2165  361 -0.079681985  0.294891266 #> 2166  361 -0.079681985  0.318352489 #> 2167  362 -0.059363969  0.330083101 #> 2168  362 -0.079681985  0.318352489 #> 2169  362 -0.079681985  0.294891266 #> 2170  362 -0.059363969  0.283160654 #> 2171  362 -0.039045954  0.294891266 #> 2172  362 -0.039045954  0.318352489 #> 2173  363 -0.018727938  0.330083101 #> 2174  363 -0.039045954  0.318352489 #> 2175  363 -0.039045954  0.294891266 #> 2176  363 -0.018727938  0.283160654 #> 2177  363  0.001590077  0.294891266 #> 2178  363  0.001590077  0.318352489 #> 2179  364  0.021908092  0.330083101 #> 2180  364  0.001590077  0.318352489 #> 2181  364  0.001590077  0.294891266 #> 2182  364  0.021908092  0.283160654 #> 2183  364  0.042226108  0.294891266 #> 2184  364  0.042226108  0.318352489 #> 2185  365  0.062544123  0.330083101 #> 2186  365  0.042226108  0.318352489 #> 2187  365  0.042226108  0.294891266 #> 2188  365  0.062544123  0.283160654 #> 2189  365  0.082862139  0.294891266 #> 2190  365  0.082862139  0.318352489 #> 2191  366  0.103180154  0.330083101 #> 2192  366  0.082862139  0.318352489 #> 2193  366  0.082862139  0.294891266 #> 2194  366  0.103180154  0.283160654 #> 2195  366  0.123498170  0.294891266 #> 2196  366  0.123498170  0.318352489 #> 2197  367  0.143816185  0.330083101 #> 2198  367  0.123498170  0.318352489 #> 2199  367  0.123498170  0.294891266 #> 2200  367  0.143816185  0.283160654 #> 2201  367  0.164134200  0.294891266 #> 2202  367  0.164134200  0.318352489 #> 2203  368  0.184452216  0.330083101 #> 2204  368  0.164134200  0.318352489 #> 2205  368  0.164134200  0.294891266 #> 2206  368  0.184452216  0.283160654 #> 2207  368  0.204770231  0.294891266 #> 2208  368  0.204770231  0.318352489 #> 2209  369  0.225088247  0.330083101 #> 2210  369  0.204770231  0.318352489 #> 2211  369  0.204770231  0.294891266 #> 2212  369  0.225088247  0.283160654 #> 2213  369  0.245406262  0.294891266 #> 2214  369  0.245406262  0.318352489 #> 2215  370  0.265724277  0.330083101 #> 2216  370  0.245406262  0.318352489 #> 2217  370  0.245406262  0.294891266 #> 2218  370  0.265724277  0.283160654 #> 2219  370  0.286042293  0.294891266 #> 2220  370  0.286042293  0.318352489 #> 2221  371  0.306360308  0.330083101 #> 2222  371  0.286042293  0.318352489 #> 2223  371  0.286042293  0.294891266 #> 2224  371  0.306360308  0.283160654 #> 2225  371  0.326678324  0.294891266 #> 2226  371  0.326678324  0.318352489 #> 2227  372  0.346996339  0.330083101 #> 2228  372  0.326678324  0.318352489 #> 2229  372  0.326678324  0.294891266 #> 2230  372  0.346996339  0.283160654 #> 2231  372  0.367314354  0.294891266 #> 2232  372  0.367314354  0.318352489 #> 2233  373  0.387632370  0.330083101 #> 2234  373  0.367314354  0.318352489 #> 2235  373  0.367314354  0.294891266 #> 2236  373  0.387632370  0.283160654 #> 2237  373  0.407950385  0.294891266 #> 2238  373  0.407950385  0.318352489 #> 2239  374  0.428268401  0.330083101 #> 2240  374  0.407950385  0.318352489 #> 2241  374  0.407950385  0.294891266 #> 2242  374  0.428268401  0.283160654 #> 2243  374  0.448586416  0.294891266 #> 2244  374  0.448586416  0.318352489 #> 2245  375  0.468904432  0.330083101 #> 2246  375  0.448586416  0.318352489 #> 2247  375  0.448586416  0.294891266 #> 2248  375  0.468904432  0.283160654 #> 2249  375  0.489222447  0.294891266 #> 2250  375  0.489222447  0.318352489 #> 2251  376  0.509540462  0.330083101 #> 2252  376  0.489222447  0.318352489 #> 2253  376  0.489222447  0.294891266 #> 2254  376  0.509540462  0.283160654 #> 2255  376  0.529858478  0.294891266 #> 2256  376  0.529858478  0.318352489 #> 2257  377  0.550176493  0.330083101 #> 2258  377  0.529858478  0.318352489 #> 2259  377  0.529858478  0.294891266 #> 2260  377  0.550176493  0.283160654 #> 2261  377  0.570494509  0.294891266 #> 2262  377  0.570494509  0.318352489 #> 2263  378  0.590812524  0.330083101 #> 2264  378  0.570494509  0.318352489 #> 2265  378  0.570494509  0.294891266 #> 2266  378  0.590812524  0.283160654 #> 2267  378  0.611130539  0.294891266 #> 2268  378  0.611130539  0.318352489 #> 2269  379  0.631448555  0.330083101 #> 2270  379  0.611130539  0.318352489 #> 2271  379  0.611130539  0.294891266 #> 2272  379  0.631448555  0.283160654 #> 2273  379  0.651766570  0.294891266 #> 2274  379  0.651766570  0.318352489 #> 2275  380  0.672084586  0.330083101 #> 2276  380  0.651766570  0.318352489 #> 2277  380  0.651766570  0.294891266 #> 2278  380  0.672084586  0.283160654 #> 2279  380  0.692402601  0.294891266 #> 2280  380  0.692402601  0.318352489 #> 2281  381  0.712720616  0.330083101 #> 2282  381  0.692402601  0.318352489 #> 2283  381  0.692402601  0.294891266 #> 2284  381  0.712720616  0.283160654 #> 2285  381  0.733038632  0.294891266 #> 2286  381  0.733038632  0.318352489 #> 2287  382  0.753356647  0.330083101 #> 2288  382  0.733038632  0.318352489 #> 2289  382  0.733038632  0.294891266 #> 2290  382  0.753356647  0.283160654 #> 2291  382  0.773674663  0.294891266 #> 2292  382  0.773674663  0.318352489 #> 2293  383  0.793992678  0.330083101 #> 2294  383  0.773674663  0.318352489 #> 2295  383  0.773674663  0.294891266 #> 2296  383  0.793992678  0.283160654 #> 2297  383  0.814310694  0.294891266 #> 2298  383  0.814310694  0.318352489 #> 2299  384  0.834628709  0.330083101 #> 2300  384  0.814310694  0.318352489 #> 2301  384  0.814310694  0.294891266 #> 2302  384  0.834628709  0.283160654 #> 2303  384  0.854946724  0.294891266 #> 2304  384  0.854946724  0.318352489 #> 2305  385  0.875264740  0.330083101 #> 2306  385  0.854946724  0.318352489 #> 2307  385  0.854946724  0.294891266 #> 2308  385  0.875264740  0.283160654 #> 2309  385  0.895582755  0.294891266 #> 2310  385  0.895582755  0.318352489 #> 2311  386  0.915900771  0.330083101 #> 2312  386  0.895582755  0.318352489 #> 2313  386  0.895582755  0.294891266 #> 2314  386  0.915900771  0.283160654 #> 2315  386  0.936218786  0.294891266 #> 2316  386  0.936218786  0.318352489 #> 2317  387  0.956536801  0.330083101 #> 2318  387  0.936218786  0.318352489 #> 2319  387  0.936218786  0.294891266 #> 2320  387  0.956536801  0.283160654 #> 2321  387  0.976854817  0.294891266 #> 2322  387  0.976854817  0.318352489 #> 2323  388  0.997172832  0.330083101 #> 2324  388  0.976854817  0.318352489 #> 2325  388  0.976854817  0.294891266 #> 2326  388  0.997172832  0.283160654 #> 2327  388  1.017490848  0.294891266 #> 2328  388  1.017490848  0.318352489 #> 2329  389  1.037808863  0.330083101 #> 2330  389  1.017490848  0.318352489 #> 2331  389  1.017490848  0.294891266 #> 2332  389  1.037808863  0.283160654 #> 2333  389  1.058126878  0.294891266 #> 2334  389  1.058126878  0.318352489 #> 2335  390  1.078444894  0.330083101 #> 2336  390  1.058126878  0.318352489 #> 2337  390  1.058126878  0.294891266 #> 2338  390  1.078444894  0.283160654 #> 2339  390  1.098762909  0.294891266 #> 2340  390  1.098762909  0.318352489 #> 2341  391 -0.079681985  0.365274936 #> 2342  391 -0.100000000  0.353544324 #> 2343  391 -0.100000000  0.330083101 #> 2344  391 -0.079681985  0.318352489 #> 2345  391 -0.059363969  0.330083101 #> 2346  391 -0.059363969  0.353544324 #> 2347  392 -0.039045954  0.365274936 #> 2348  392 -0.059363969  0.353544324 #> 2349  392 -0.059363969  0.330083101 #> 2350  392 -0.039045954  0.318352489 #> 2351  392 -0.018727938  0.330083101 #> 2352  392 -0.018727938  0.353544324 #> 2353  393  0.001590077  0.365274936 #> 2354  393 -0.018727938  0.353544324 #> 2355  393 -0.018727938  0.330083101 #> 2356  393  0.001590077  0.318352489 #> 2357  393  0.021908092  0.330083101 #> 2358  393  0.021908092  0.353544324 #> 2359  394  0.042226108  0.365274936 #> 2360  394  0.021908092  0.353544324 #> 2361  394  0.021908092  0.330083101 #> 2362  394  0.042226108  0.318352489 #> 2363  394  0.062544123  0.330083101 #> 2364  394  0.062544123  0.353544324 #> 2365  395  0.082862139  0.365274936 #> 2366  395  0.062544123  0.353544324 #> 2367  395  0.062544123  0.330083101 #> 2368  395  0.082862139  0.318352489 #> 2369  395  0.103180154  0.330083101 #> 2370  395  0.103180154  0.353544324 #> 2371  396  0.123498170  0.365274936 #> 2372  396  0.103180154  0.353544324 #> 2373  396  0.103180154  0.330083101 #> 2374  396  0.123498170  0.318352489 #> 2375  396  0.143816185  0.330083101 #> 2376  396  0.143816185  0.353544324 #> 2377  397  0.164134200  0.365274936 #> 2378  397  0.143816185  0.353544324 #> 2379  397  0.143816185  0.330083101 #> 2380  397  0.164134200  0.318352489 #> 2381  397  0.184452216  0.330083101 #> 2382  397  0.184452216  0.353544324 #> 2383  398  0.204770231  0.365274936 #> 2384  398  0.184452216  0.353544324 #> 2385  398  0.184452216  0.330083101 #> 2386  398  0.204770231  0.318352489 #> 2387  398  0.225088247  0.330083101 #> 2388  398  0.225088247  0.353544324 #> 2389  399  0.245406262  0.365274936 #> 2390  399  0.225088247  0.353544324 #> 2391  399  0.225088247  0.330083101 #> 2392  399  0.245406262  0.318352489 #> 2393  399  0.265724277  0.330083101 #> 2394  399  0.265724277  0.353544324 #> 2395  400  0.286042293  0.365274936 #> 2396  400  0.265724277  0.353544324 #> 2397  400  0.265724277  0.330083101 #> 2398  400  0.286042293  0.318352489 #> 2399  400  0.306360308  0.330083101 #> 2400  400  0.306360308  0.353544324 #> 2401  401  0.326678324  0.365274936 #> 2402  401  0.306360308  0.353544324 #> 2403  401  0.306360308  0.330083101 #> 2404  401  0.326678324  0.318352489 #> 2405  401  0.346996339  0.330083101 #> 2406  401  0.346996339  0.353544324 #> 2407  402  0.367314354  0.365274936 #> 2408  402  0.346996339  0.353544324 #> 2409  402  0.346996339  0.330083101 #> 2410  402  0.367314354  0.318352489 #> 2411  402  0.387632370  0.330083101 #> 2412  402  0.387632370  0.353544324 #> 2413  403  0.407950385  0.365274936 #> 2414  403  0.387632370  0.353544324 #> 2415  403  0.387632370  0.330083101 #> 2416  403  0.407950385  0.318352489 #> 2417  403  0.428268401  0.330083101 #> 2418  403  0.428268401  0.353544324 #> 2419  404  0.448586416  0.365274936 #> 2420  404  0.428268401  0.353544324 #> 2421  404  0.428268401  0.330083101 #> 2422  404  0.448586416  0.318352489 #> 2423  404  0.468904432  0.330083101 #> 2424  404  0.468904432  0.353544324 #> 2425  405  0.489222447  0.365274936 #> 2426  405  0.468904432  0.353544324 #> 2427  405  0.468904432  0.330083101 #> 2428  405  0.489222447  0.318352489 #> 2429  405  0.509540462  0.330083101 #> 2430  405  0.509540462  0.353544324 #> 2431  406  0.529858478  0.365274936 #> 2432  406  0.509540462  0.353544324 #> 2433  406  0.509540462  0.330083101 #> 2434  406  0.529858478  0.318352489 #> 2435  406  0.550176493  0.330083101 #> 2436  406  0.550176493  0.353544324 #> 2437  407  0.570494509  0.365274936 #> 2438  407  0.550176493  0.353544324 #> 2439  407  0.550176493  0.330083101 #> 2440  407  0.570494509  0.318352489 #> 2441  407  0.590812524  0.330083101 #> 2442  407  0.590812524  0.353544324 #> 2443  408  0.611130539  0.365274936 #> 2444  408  0.590812524  0.353544324 #> 2445  408  0.590812524  0.330083101 #> 2446  408  0.611130539  0.318352489 #> 2447  408  0.631448555  0.330083101 #> 2448  408  0.631448555  0.353544324 #> 2449  409  0.651766570  0.365274936 #> 2450  409  0.631448555  0.353544324 #> 2451  409  0.631448555  0.330083101 #> 2452  409  0.651766570  0.318352489 #> 2453  409  0.672084586  0.330083101 #> 2454  409  0.672084586  0.353544324 #> 2455  410  0.692402601  0.365274936 #> 2456  410  0.672084586  0.353544324 #> 2457  410  0.672084586  0.330083101 #> 2458  410  0.692402601  0.318352489 #> 2459  410  0.712720616  0.330083101 #> 2460  410  0.712720616  0.353544324 #> 2461  411  0.733038632  0.365274936 #> 2462  411  0.712720616  0.353544324 #> 2463  411  0.712720616  0.330083101 #> 2464  411  0.733038632  0.318352489 #> 2465  411  0.753356647  0.330083101 #> 2466  411  0.753356647  0.353544324 #> 2467  412  0.773674663  0.365274936 #> 2468  412  0.753356647  0.353544324 #> 2469  412  0.753356647  0.330083101 #> 2470  412  0.773674663  0.318352489 #> 2471  412  0.793992678  0.330083101 #> 2472  412  0.793992678  0.353544324 #> 2473  413  0.814310694  0.365274936 #> 2474  413  0.793992678  0.353544324 #> 2475  413  0.793992678  0.330083101 #> 2476  413  0.814310694  0.318352489 #> 2477  413  0.834628709  0.330083101 #> 2478  413  0.834628709  0.353544324 #> 2479  414  0.854946724  0.365274936 #> 2480  414  0.834628709  0.353544324 #> 2481  414  0.834628709  0.330083101 #> 2482  414  0.854946724  0.318352489 #> 2483  414  0.875264740  0.330083101 #> 2484  414  0.875264740  0.353544324 #> 2485  415  0.895582755  0.365274936 #> 2486  415  0.875264740  0.353544324 #> 2487  415  0.875264740  0.330083101 #> 2488  415  0.895582755  0.318352489 #> 2489  415  0.915900771  0.330083101 #> 2490  415  0.915900771  0.353544324 #> 2491  416  0.936218786  0.365274936 #> 2492  416  0.915900771  0.353544324 #> 2493  416  0.915900771  0.330083101 #> 2494  416  0.936218786  0.318352489 #> 2495  416  0.956536801  0.330083101 #> 2496  416  0.956536801  0.353544324 #> 2497  417  0.976854817  0.365274936 #> 2498  417  0.956536801  0.353544324 #> 2499  417  0.956536801  0.330083101 #> 2500  417  0.976854817  0.318352489 #> 2501  417  0.997172832  0.330083101 #> 2502  417  0.997172832  0.353544324 #> 2503  418  1.017490848  0.365274936 #> 2504  418  0.997172832  0.353544324 #> 2505  418  0.997172832  0.330083101 #> 2506  418  1.017490848  0.318352489 #> 2507  418  1.037808863  0.330083101 #> 2508  418  1.037808863  0.353544324 #> 2509  419  1.058126878  0.365274936 #> 2510  419  1.037808863  0.353544324 #> 2511  419  1.037808863  0.330083101 #> 2512  419  1.058126878  0.318352489 #> 2513  419  1.078444894  0.330083101 #> 2514  419  1.078444894  0.353544324 #> 2515  420  1.098762909  0.365274936 #> 2516  420  1.078444894  0.353544324 #> 2517  420  1.078444894  0.330083101 #> 2518  420  1.098762909  0.318352489 #> 2519  420  1.119080925  0.330083101 #> 2520  420  1.119080925  0.353544324 #> 2521  421 -0.100000000  0.400466771 #> 2522  421 -0.120318015  0.388736159 #> 2523  421 -0.120318015  0.365274936 #> 2524  421 -0.100000000  0.353544324 #> 2525  421 -0.079681985  0.365274936 #> 2526  421 -0.079681985  0.388736159 #> 2527  422 -0.059363969  0.400466771 #> 2528  422 -0.079681985  0.388736159 #> 2529  422 -0.079681985  0.365274936 #> 2530  422 -0.059363969  0.353544324 #> 2531  422 -0.039045954  0.365274936 #> 2532  422 -0.039045954  0.388736159 #> 2533  423 -0.018727938  0.400466771 #> 2534  423 -0.039045954  0.388736159 #> 2535  423 -0.039045954  0.365274936 #> 2536  423 -0.018727938  0.353544324 #> 2537  423  0.001590077  0.365274936 #> 2538  423  0.001590077  0.388736159 #> 2539  424  0.021908092  0.400466771 #> 2540  424  0.001590077  0.388736159 #> 2541  424  0.001590077  0.365274936 #> 2542  424  0.021908092  0.353544324 #> 2543  424  0.042226108  0.365274936 #> 2544  424  0.042226108  0.388736159 #> 2545  425  0.062544123  0.400466771 #> 2546  425  0.042226108  0.388736159 #> 2547  425  0.042226108  0.365274936 #> 2548  425  0.062544123  0.353544324 #> 2549  425  0.082862139  0.365274936 #> 2550  425  0.082862139  0.388736159 #> 2551  426  0.103180154  0.400466771 #> 2552  426  0.082862139  0.388736159 #> 2553  426  0.082862139  0.365274936 #> 2554  426  0.103180154  0.353544324 #> 2555  426  0.123498170  0.365274936 #> 2556  426  0.123498170  0.388736159 #> 2557  427  0.143816185  0.400466771 #> 2558  427  0.123498170  0.388736159 #> 2559  427  0.123498170  0.365274936 #> 2560  427  0.143816185  0.353544324 #> 2561  427  0.164134200  0.365274936 #> 2562  427  0.164134200  0.388736159 #> 2563  428  0.184452216  0.400466771 #> 2564  428  0.164134200  0.388736159 #> 2565  428  0.164134200  0.365274936 #> 2566  428  0.184452216  0.353544324 #> 2567  428  0.204770231  0.365274936 #> 2568  428  0.204770231  0.388736159 #> 2569  429  0.225088247  0.400466771 #> 2570  429  0.204770231  0.388736159 #> 2571  429  0.204770231  0.365274936 #> 2572  429  0.225088247  0.353544324 #> 2573  429  0.245406262  0.365274936 #> 2574  429  0.245406262  0.388736159 #> 2575  430  0.265724277  0.400466771 #> 2576  430  0.245406262  0.388736159 #> 2577  430  0.245406262  0.365274936 #> 2578  430  0.265724277  0.353544324 #> 2579  430  0.286042293  0.365274936 #> 2580  430  0.286042293  0.388736159 #> 2581  431  0.306360308  0.400466771 #> 2582  431  0.286042293  0.388736159 #> 2583  431  0.286042293  0.365274936 #> 2584  431  0.306360308  0.353544324 #> 2585  431  0.326678324  0.365274936 #> 2586  431  0.326678324  0.388736159 #> 2587  432  0.346996339  0.400466771 #> 2588  432  0.326678324  0.388736159 #> 2589  432  0.326678324  0.365274936 #> 2590  432  0.346996339  0.353544324 #> 2591  432  0.367314354  0.365274936 #> 2592  432  0.367314354  0.388736159 #> 2593  433  0.387632370  0.400466771 #> 2594  433  0.367314354  0.388736159 #> 2595  433  0.367314354  0.365274936 #> 2596  433  0.387632370  0.353544324 #> 2597  433  0.407950385  0.365274936 #> 2598  433  0.407950385  0.388736159 #> 2599  434  0.428268401  0.400466771 #> 2600  434  0.407950385  0.388736159 #> 2601  434  0.407950385  0.365274936 #> 2602  434  0.428268401  0.353544324 #> 2603  434  0.448586416  0.365274936 #> 2604  434  0.448586416  0.388736159 #> 2605  435  0.468904432  0.400466771 #> 2606  435  0.448586416  0.388736159 #> 2607  435  0.448586416  0.365274936 #> 2608  435  0.468904432  0.353544324 #> 2609  435  0.489222447  0.365274936 #> 2610  435  0.489222447  0.388736159 #> 2611  436  0.509540462  0.400466771 #> 2612  436  0.489222447  0.388736159 #> 2613  436  0.489222447  0.365274936 #> 2614  436  0.509540462  0.353544324 #> 2615  436  0.529858478  0.365274936 #> 2616  436  0.529858478  0.388736159 #> 2617  437  0.550176493  0.400466771 #> 2618  437  0.529858478  0.388736159 #> 2619  437  0.529858478  0.365274936 #> 2620  437  0.550176493  0.353544324 #> 2621  437  0.570494509  0.365274936 #> 2622  437  0.570494509  0.388736159 #> 2623  438  0.590812524  0.400466771 #> 2624  438  0.570494509  0.388736159 #> 2625  438  0.570494509  0.365274936 #> 2626  438  0.590812524  0.353544324 #> 2627  438  0.611130539  0.365274936 #> 2628  438  0.611130539  0.388736159 #> 2629  439  0.631448555  0.400466771 #> 2630  439  0.611130539  0.388736159 #> 2631  439  0.611130539  0.365274936 #> 2632  439  0.631448555  0.353544324 #> 2633  439  0.651766570  0.365274936 #> 2634  439  0.651766570  0.388736159 #> 2635  440  0.672084586  0.400466771 #> 2636  440  0.651766570  0.388736159 #> 2637  440  0.651766570  0.365274936 #> 2638  440  0.672084586  0.353544324 #> 2639  440  0.692402601  0.365274936 #> 2640  440  0.692402601  0.388736159 #> 2641  441  0.712720616  0.400466771 #> 2642  441  0.692402601  0.388736159 #> 2643  441  0.692402601  0.365274936 #> 2644  441  0.712720616  0.353544324 #> 2645  441  0.733038632  0.365274936 #> 2646  441  0.733038632  0.388736159 #> 2647  442  0.753356647  0.400466771 #> 2648  442  0.733038632  0.388736159 #> 2649  442  0.733038632  0.365274936 #> 2650  442  0.753356647  0.353544324 #> 2651  442  0.773674663  0.365274936 #> 2652  442  0.773674663  0.388736159 #> 2653  443  0.793992678  0.400466771 #> 2654  443  0.773674663  0.388736159 #> 2655  443  0.773674663  0.365274936 #> 2656  443  0.793992678  0.353544324 #> 2657  443  0.814310694  0.365274936 #> 2658  443  0.814310694  0.388736159 #> 2659  444  0.834628709  0.400466771 #> 2660  444  0.814310694  0.388736159 #> 2661  444  0.814310694  0.365274936 #> 2662  444  0.834628709  0.353544324 #> 2663  444  0.854946724  0.365274936 #> 2664  444  0.854946724  0.388736159 #> 2665  445  0.875264740  0.400466771 #> 2666  445  0.854946724  0.388736159 #> 2667  445  0.854946724  0.365274936 #> 2668  445  0.875264740  0.353544324 #> 2669  445  0.895582755  0.365274936 #> 2670  445  0.895582755  0.388736159 #> 2671  446  0.915900771  0.400466771 #> 2672  446  0.895582755  0.388736159 #> 2673  446  0.895582755  0.365274936 #> 2674  446  0.915900771  0.353544324 #> 2675  446  0.936218786  0.365274936 #> 2676  446  0.936218786  0.388736159 #> 2677  447  0.956536801  0.400466771 #> 2678  447  0.936218786  0.388736159 #> 2679  447  0.936218786  0.365274936 #> 2680  447  0.956536801  0.353544324 #> 2681  447  0.976854817  0.365274936 #> 2682  447  0.976854817  0.388736159 #> 2683  448  0.997172832  0.400466771 #> 2684  448  0.976854817  0.388736159 #> 2685  448  0.976854817  0.365274936 #> 2686  448  0.997172832  0.353544324 #> 2687  448  1.017490848  0.365274936 #> 2688  448  1.017490848  0.388736159 #> 2689  449  1.037808863  0.400466771 #> 2690  449  1.017490848  0.388736159 #> 2691  449  1.017490848  0.365274936 #> 2692  449  1.037808863  0.353544324 #> 2693  449  1.058126878  0.365274936 #> 2694  449  1.058126878  0.388736159 #> 2695  450  1.078444894  0.400466771 #> 2696  450  1.058126878  0.388736159 #> 2697  450  1.058126878  0.365274936 #> 2698  450  1.078444894  0.353544324 #> 2699  450  1.098762909  0.365274936 #> 2700  450  1.098762909  0.388736159 #> 2701  451 -0.079681985  0.435658606 #> 2702  451 -0.100000000  0.423927994 #> 2703  451 -0.100000000  0.400466771 #> 2704  451 -0.079681985  0.388736159 #> 2705  451 -0.059363969  0.400466771 #> 2706  451 -0.059363969  0.423927994 #> 2707  452 -0.039045954  0.435658606 #> 2708  452 -0.059363969  0.423927994 #> 2709  452 -0.059363969  0.400466771 #> 2710  452 -0.039045954  0.388736159 #> 2711  452 -0.018727938  0.400466771 #> 2712  452 -0.018727938  0.423927994 #> 2713  453  0.001590077  0.435658606 #> 2714  453 -0.018727938  0.423927994 #> 2715  453 -0.018727938  0.400466771 #> 2716  453  0.001590077  0.388736159 #> 2717  453  0.021908092  0.400466771 #> 2718  453  0.021908092  0.423927994 #> 2719  454  0.042226108  0.435658606 #> 2720  454  0.021908092  0.423927994 #> 2721  454  0.021908092  0.400466771 #> 2722  454  0.042226108  0.388736159 #> 2723  454  0.062544123  0.400466771 #> 2724  454  0.062544123  0.423927994 #> 2725  455  0.082862139  0.435658606 #> 2726  455  0.062544123  0.423927994 #> 2727  455  0.062544123  0.400466771 #> 2728  455  0.082862139  0.388736159 #> 2729  455  0.103180154  0.400466771 #> 2730  455  0.103180154  0.423927994 #> 2731  456  0.123498170  0.435658606 #> 2732  456  0.103180154  0.423927994 #> 2733  456  0.103180154  0.400466771 #> 2734  456  0.123498170  0.388736159 #> 2735  456  0.143816185  0.400466771 #> 2736  456  0.143816185  0.423927994 #> 2737  457  0.164134200  0.435658606 #> 2738  457  0.143816185  0.423927994 #> 2739  457  0.143816185  0.400466771 #> 2740  457  0.164134200  0.388736159 #> 2741  457  0.184452216  0.400466771 #> 2742  457  0.184452216  0.423927994 #> 2743  458  0.204770231  0.435658606 #> 2744  458  0.184452216  0.423927994 #> 2745  458  0.184452216  0.400466771 #> 2746  458  0.204770231  0.388736159 #> 2747  458  0.225088247  0.400466771 #> 2748  458  0.225088247  0.423927994 #> 2749  459  0.245406262  0.435658606 #> 2750  459  0.225088247  0.423927994 #> 2751  459  0.225088247  0.400466771 #> 2752  459  0.245406262  0.388736159 #> 2753  459  0.265724277  0.400466771 #> 2754  459  0.265724277  0.423927994 #> 2755  460  0.286042293  0.435658606 #> 2756  460  0.265724277  0.423927994 #> 2757  460  0.265724277  0.400466771 #> 2758  460  0.286042293  0.388736159 #> 2759  460  0.306360308  0.400466771 #> 2760  460  0.306360308  0.423927994 #> 2761  461  0.326678324  0.435658606 #> 2762  461  0.306360308  0.423927994 #> 2763  461  0.306360308  0.400466771 #> 2764  461  0.326678324  0.388736159 #> 2765  461  0.346996339  0.400466771 #> 2766  461  0.346996339  0.423927994 #> 2767  462  0.367314354  0.435658606 #> 2768  462  0.346996339  0.423927994 #> 2769  462  0.346996339  0.400466771 #> 2770  462  0.367314354  0.388736159 #> 2771  462  0.387632370  0.400466771 #> 2772  462  0.387632370  0.423927994 #> 2773  463  0.407950385  0.435658606 #> 2774  463  0.387632370  0.423927994 #> 2775  463  0.387632370  0.400466771 #> 2776  463  0.407950385  0.388736159 #> 2777  463  0.428268401  0.400466771 #> 2778  463  0.428268401  0.423927994 #> 2779  464  0.448586416  0.435658606 #> 2780  464  0.428268401  0.423927994 #> 2781  464  0.428268401  0.400466771 #> 2782  464  0.448586416  0.388736159 #> 2783  464  0.468904432  0.400466771 #> 2784  464  0.468904432  0.423927994 #> 2785  465  0.489222447  0.435658606 #> 2786  465  0.468904432  0.423927994 #> 2787  465  0.468904432  0.400466771 #> 2788  465  0.489222447  0.388736159 #> 2789  465  0.509540462  0.400466771 #> 2790  465  0.509540462  0.423927994 #> 2791  466  0.529858478  0.435658606 #> 2792  466  0.509540462  0.423927994 #> 2793  466  0.509540462  0.400466771 #> 2794  466  0.529858478  0.388736159 #> 2795  466  0.550176493  0.400466771 #> 2796  466  0.550176493  0.423927994 #> 2797  467  0.570494509  0.435658606 #> 2798  467  0.550176493  0.423927994 #> 2799  467  0.550176493  0.400466771 #> 2800  467  0.570494509  0.388736159 #> 2801  467  0.590812524  0.400466771 #> 2802  467  0.590812524  0.423927994 #> 2803  468  0.611130539  0.435658606 #> 2804  468  0.590812524  0.423927994 #> 2805  468  0.590812524  0.400466771 #> 2806  468  0.611130539  0.388736159 #> 2807  468  0.631448555  0.400466771 #> 2808  468  0.631448555  0.423927994 #> 2809  469  0.651766570  0.435658606 #> 2810  469  0.631448555  0.423927994 #> 2811  469  0.631448555  0.400466771 #> 2812  469  0.651766570  0.388736159 #> 2813  469  0.672084586  0.400466771 #> 2814  469  0.672084586  0.423927994 #> 2815  470  0.692402601  0.435658606 #> 2816  470  0.672084586  0.423927994 #> 2817  470  0.672084586  0.400466771 #> 2818  470  0.692402601  0.388736159 #> 2819  470  0.712720616  0.400466771 #> 2820  470  0.712720616  0.423927994 #> 2821  471  0.733038632  0.435658606 #> 2822  471  0.712720616  0.423927994 #> 2823  471  0.712720616  0.400466771 #> 2824  471  0.733038632  0.388736159 #> 2825  471  0.753356647  0.400466771 #> 2826  471  0.753356647  0.423927994 #> 2827  472  0.773674663  0.435658606 #> 2828  472  0.753356647  0.423927994 #> 2829  472  0.753356647  0.400466771 #> 2830  472  0.773674663  0.388736159 #> 2831  472  0.793992678  0.400466771 #> 2832  472  0.793992678  0.423927994 #> 2833  473  0.814310694  0.435658606 #> 2834  473  0.793992678  0.423927994 #> 2835  473  0.793992678  0.400466771 #> 2836  473  0.814310694  0.388736159 #> 2837  473  0.834628709  0.400466771 #> 2838  473  0.834628709  0.423927994 #> 2839  474  0.854946724  0.435658606 #> 2840  474  0.834628709  0.423927994 #> 2841  474  0.834628709  0.400466771 #> 2842  474  0.854946724  0.388736159 #> 2843  474  0.875264740  0.400466771 #> 2844  474  0.875264740  0.423927994 #> 2845  475  0.895582755  0.435658606 #> 2846  475  0.875264740  0.423927994 #> 2847  475  0.875264740  0.400466771 #> 2848  475  0.895582755  0.388736159 #> 2849  475  0.915900771  0.400466771 #> 2850  475  0.915900771  0.423927994 #> 2851  476  0.936218786  0.435658606 #> 2852  476  0.915900771  0.423927994 #> 2853  476  0.915900771  0.400466771 #> 2854  476  0.936218786  0.388736159 #> 2855  476  0.956536801  0.400466771 #> 2856  476  0.956536801  0.423927994 #> 2857  477  0.976854817  0.435658606 #> 2858  477  0.956536801  0.423927994 #> 2859  477  0.956536801  0.400466771 #> 2860  477  0.976854817  0.388736159 #> 2861  477  0.997172832  0.400466771 #> 2862  477  0.997172832  0.423927994 #> 2863  478  1.017490848  0.435658606 #> 2864  478  0.997172832  0.423927994 #> 2865  478  0.997172832  0.400466771 #> 2866  478  1.017490848  0.388736159 #> 2867  478  1.037808863  0.400466771 #> 2868  478  1.037808863  0.423927994 #> 2869  479  1.058126878  0.435658606 #> 2870  479  1.037808863  0.423927994 #> 2871  479  1.037808863  0.400466771 #> 2872  479  1.058126878  0.388736159 #> 2873  479  1.078444894  0.400466771 #> 2874  479  1.078444894  0.423927994 #> 2875  480  1.098762909  0.435658606 #> 2876  480  1.078444894  0.423927994 #> 2877  480  1.078444894  0.400466771 #> 2878  480  1.098762909  0.388736159 #> 2879  480  1.119080925  0.400466771 #> 2880  480  1.119080925  0.423927994 #> 2881  481 -0.100000000  0.470850441 #> 2882  481 -0.120318015  0.459119829 #> 2883  481 -0.120318015  0.435658606 #> 2884  481 -0.100000000  0.423927994 #> 2885  481 -0.079681985  0.435658606 #> 2886  481 -0.079681985  0.459119829 #> 2887  482 -0.059363969  0.470850441 #> 2888  482 -0.079681985  0.459119829 #> 2889  482 -0.079681985  0.435658606 #> 2890  482 -0.059363969  0.423927994 #> 2891  482 -0.039045954  0.435658606 #> 2892  482 -0.039045954  0.459119829 #> 2893  483 -0.018727938  0.470850441 #> 2894  483 -0.039045954  0.459119829 #> 2895  483 -0.039045954  0.435658606 #> 2896  483 -0.018727938  0.423927994 #> 2897  483  0.001590077  0.435658606 #> 2898  483  0.001590077  0.459119829 #> 2899  484  0.021908092  0.470850441 #> 2900  484  0.001590077  0.459119829 #> 2901  484  0.001590077  0.435658606 #> 2902  484  0.021908092  0.423927994 #> 2903  484  0.042226108  0.435658606 #> 2904  484  0.042226108  0.459119829 #> 2905  485  0.062544123  0.470850441 #> 2906  485  0.042226108  0.459119829 #> 2907  485  0.042226108  0.435658606 #> 2908  485  0.062544123  0.423927994 #> 2909  485  0.082862139  0.435658606 #> 2910  485  0.082862139  0.459119829 #> 2911  486  0.103180154  0.470850441 #> 2912  486  0.082862139  0.459119829 #> 2913  486  0.082862139  0.435658606 #> 2914  486  0.103180154  0.423927994 #> 2915  486  0.123498170  0.435658606 #> 2916  486  0.123498170  0.459119829 #> 2917  487  0.143816185  0.470850441 #> 2918  487  0.123498170  0.459119829 #> 2919  487  0.123498170  0.435658606 #> 2920  487  0.143816185  0.423927994 #> 2921  487  0.164134200  0.435658606 #> 2922  487  0.164134200  0.459119829 #> 2923  488  0.184452216  0.470850441 #> 2924  488  0.164134200  0.459119829 #> 2925  488  0.164134200  0.435658606 #> 2926  488  0.184452216  0.423927994 #> 2927  488  0.204770231  0.435658606 #> 2928  488  0.204770231  0.459119829 #> 2929  489  0.225088247  0.470850441 #> 2930  489  0.204770231  0.459119829 #> 2931  489  0.204770231  0.435658606 #> 2932  489  0.225088247  0.423927994 #> 2933  489  0.245406262  0.435658606 #> 2934  489  0.245406262  0.459119829 #> 2935  490  0.265724277  0.470850441 #> 2936  490  0.245406262  0.459119829 #> 2937  490  0.245406262  0.435658606 #> 2938  490  0.265724277  0.423927994 #> 2939  490  0.286042293  0.435658606 #> 2940  490  0.286042293  0.459119829 #> 2941  491  0.306360308  0.470850441 #> 2942  491  0.286042293  0.459119829 #> 2943  491  0.286042293  0.435658606 #> 2944  491  0.306360308  0.423927994 #> 2945  491  0.326678324  0.435658606 #> 2946  491  0.326678324  0.459119829 #> 2947  492  0.346996339  0.470850441 #> 2948  492  0.326678324  0.459119829 #> 2949  492  0.326678324  0.435658606 #> 2950  492  0.346996339  0.423927994 #> 2951  492  0.367314354  0.435658606 #> 2952  492  0.367314354  0.459119829 #> 2953  493  0.387632370  0.470850441 #> 2954  493  0.367314354  0.459119829 #> 2955  493  0.367314354  0.435658606 #> 2956  493  0.387632370  0.423927994 #> 2957  493  0.407950385  0.435658606 #> 2958  493  0.407950385  0.459119829 #> 2959  494  0.428268401  0.470850441 #> 2960  494  0.407950385  0.459119829 #> 2961  494  0.407950385  0.435658606 #> 2962  494  0.428268401  0.423927994 #> 2963  494  0.448586416  0.435658606 #> 2964  494  0.448586416  0.459119829 #> 2965  495  0.468904432  0.470850441 #> 2966  495  0.448586416  0.459119829 #> 2967  495  0.448586416  0.435658606 #> 2968  495  0.468904432  0.423927994 #> 2969  495  0.489222447  0.435658606 #> 2970  495  0.489222447  0.459119829 #> 2971  496  0.509540462  0.470850441 #> 2972  496  0.489222447  0.459119829 #> 2973  496  0.489222447  0.435658606 #> 2974  496  0.509540462  0.423927994 #> 2975  496  0.529858478  0.435658606 #> 2976  496  0.529858478  0.459119829 #> 2977  497  0.550176493  0.470850441 #> 2978  497  0.529858478  0.459119829 #> 2979  497  0.529858478  0.435658606 #> 2980  497  0.550176493  0.423927994 #> 2981  497  0.570494509  0.435658606 #> 2982  497  0.570494509  0.459119829 #> 2983  498  0.590812524  0.470850441 #> 2984  498  0.570494509  0.459119829 #> 2985  498  0.570494509  0.435658606 #> 2986  498  0.590812524  0.423927994 #> 2987  498  0.611130539  0.435658606 #> 2988  498  0.611130539  0.459119829 #> 2989  499  0.631448555  0.470850441 #> 2990  499  0.611130539  0.459119829 #> 2991  499  0.611130539  0.435658606 #> 2992  499  0.631448555  0.423927994 #> 2993  499  0.651766570  0.435658606 #> 2994  499  0.651766570  0.459119829 #> 2995  500  0.672084586  0.470850441 #> 2996  500  0.651766570  0.459119829 #> 2997  500  0.651766570  0.435658606 #> 2998  500  0.672084586  0.423927994 #> 2999  500  0.692402601  0.435658606 #> 3000  500  0.692402601  0.459119829 #> 3001  501  0.712720616  0.470850441 #> 3002  501  0.692402601  0.459119829 #> 3003  501  0.692402601  0.435658606 #> 3004  501  0.712720616  0.423927994 #> 3005  501  0.733038632  0.435658606 #> 3006  501  0.733038632  0.459119829 #> 3007  502  0.753356647  0.470850441 #> 3008  502  0.733038632  0.459119829 #> 3009  502  0.733038632  0.435658606 #> 3010  502  0.753356647  0.423927994 #> 3011  502  0.773674663  0.435658606 #> 3012  502  0.773674663  0.459119829 #> 3013  503  0.793992678  0.470850441 #> 3014  503  0.773674663  0.459119829 #> 3015  503  0.773674663  0.435658606 #> 3016  503  0.793992678  0.423927994 #> 3017  503  0.814310694  0.435658606 #> 3018  503  0.814310694  0.459119829 #> 3019  504  0.834628709  0.470850441 #> 3020  504  0.814310694  0.459119829 #> 3021  504  0.814310694  0.435658606 #> 3022  504  0.834628709  0.423927994 #> 3023  504  0.854946724  0.435658606 #> 3024  504  0.854946724  0.459119829 #> 3025  505  0.875264740  0.470850441 #> 3026  505  0.854946724  0.459119829 #> 3027  505  0.854946724  0.435658606 #> 3028  505  0.875264740  0.423927994 #> 3029  505  0.895582755  0.435658606 #> 3030  505  0.895582755  0.459119829 #> 3031  506  0.915900771  0.470850441 #> 3032  506  0.895582755  0.459119829 #> 3033  506  0.895582755  0.435658606 #> 3034  506  0.915900771  0.423927994 #> 3035  506  0.936218786  0.435658606 #> 3036  506  0.936218786  0.459119829 #> 3037  507  0.956536801  0.470850441 #> 3038  507  0.936218786  0.459119829 #> 3039  507  0.936218786  0.435658606 #> 3040  507  0.956536801  0.423927994 #> 3041  507  0.976854817  0.435658606 #> 3042  507  0.976854817  0.459119829 #> 3043  508  0.997172832  0.470850441 #> 3044  508  0.976854817  0.459119829 #> 3045  508  0.976854817  0.435658606 #> 3046  508  0.997172832  0.423927994 #> 3047  508  1.017490848  0.435658606 #> 3048  508  1.017490848  0.459119829 #> 3049  509  1.037808863  0.470850441 #> 3050  509  1.017490848  0.459119829 #> 3051  509  1.017490848  0.435658606 #> 3052  509  1.037808863  0.423927994 #> 3053  509  1.058126878  0.435658606 #> 3054  509  1.058126878  0.459119829 #> 3055  510  1.078444894  0.470850441 #> 3056  510  1.058126878  0.459119829 #> 3057  510  1.058126878  0.435658606 #> 3058  510  1.078444894  0.423927994 #> 3059  510  1.098762909  0.435658606 #> 3060  510  1.098762909  0.459119829 #> 3061  511 -0.079681985  0.506042276 #> 3062  511 -0.100000000  0.494311664 #> 3063  511 -0.100000000  0.470850441 #> 3064  511 -0.079681985  0.459119829 #> 3065  511 -0.059363969  0.470850441 #> 3066  511 -0.059363969  0.494311664 #> 3067  512 -0.039045954  0.506042276 #> 3068  512 -0.059363969  0.494311664 #> 3069  512 -0.059363969  0.470850441 #> 3070  512 -0.039045954  0.459119829 #> 3071  512 -0.018727938  0.470850441 #> 3072  512 -0.018727938  0.494311664 #> 3073  513  0.001590077  0.506042276 #> 3074  513 -0.018727938  0.494311664 #> 3075  513 -0.018727938  0.470850441 #> 3076  513  0.001590077  0.459119829 #> 3077  513  0.021908092  0.470850441 #> 3078  513  0.021908092  0.494311664 #> 3079  514  0.042226108  0.506042276 #> 3080  514  0.021908092  0.494311664 #> 3081  514  0.021908092  0.470850441 #> 3082  514  0.042226108  0.459119829 #> 3083  514  0.062544123  0.470850441 #> 3084  514  0.062544123  0.494311664 #> 3085  515  0.082862139  0.506042276 #> 3086  515  0.062544123  0.494311664 #> 3087  515  0.062544123  0.470850441 #> 3088  515  0.082862139  0.459119829 #> 3089  515  0.103180154  0.470850441 #> 3090  515  0.103180154  0.494311664 #> 3091  516  0.123498170  0.506042276 #> 3092  516  0.103180154  0.494311664 #> 3093  516  0.103180154  0.470850441 #> 3094  516  0.123498170  0.459119829 #> 3095  516  0.143816185  0.470850441 #> 3096  516  0.143816185  0.494311664 #> 3097  517  0.164134200  0.506042276 #> 3098  517  0.143816185  0.494311664 #> 3099  517  0.143816185  0.470850441 #> 3100  517  0.164134200  0.459119829 #> 3101  517  0.184452216  0.470850441 #> 3102  517  0.184452216  0.494311664 #> 3103  518  0.204770231  0.506042276 #> 3104  518  0.184452216  0.494311664 #> 3105  518  0.184452216  0.470850441 #> 3106  518  0.204770231  0.459119829 #> 3107  518  0.225088247  0.470850441 #> 3108  518  0.225088247  0.494311664 #> 3109  519  0.245406262  0.506042276 #> 3110  519  0.225088247  0.494311664 #> 3111  519  0.225088247  0.470850441 #> 3112  519  0.245406262  0.459119829 #> 3113  519  0.265724277  0.470850441 #> 3114  519  0.265724277  0.494311664 #> 3115  520  0.286042293  0.506042276 #> 3116  520  0.265724277  0.494311664 #> 3117  520  0.265724277  0.470850441 #> 3118  520  0.286042293  0.459119829 #> 3119  520  0.306360308  0.470850441 #> 3120  520  0.306360308  0.494311664 #> 3121  521  0.326678324  0.506042276 #> 3122  521  0.306360308  0.494311664 #> 3123  521  0.306360308  0.470850441 #> 3124  521  0.326678324  0.459119829 #> 3125  521  0.346996339  0.470850441 #> 3126  521  0.346996339  0.494311664 #> 3127  522  0.367314354  0.506042276 #> 3128  522  0.346996339  0.494311664 #> 3129  522  0.346996339  0.470850441 #> 3130  522  0.367314354  0.459119829 #> 3131  522  0.387632370  0.470850441 #> 3132  522  0.387632370  0.494311664 #> 3133  523  0.407950385  0.506042276 #> 3134  523  0.387632370  0.494311664 #> 3135  523  0.387632370  0.470850441 #> 3136  523  0.407950385  0.459119829 #> 3137  523  0.428268401  0.470850441 #> 3138  523  0.428268401  0.494311664 #> 3139  524  0.448586416  0.506042276 #> 3140  524  0.428268401  0.494311664 #> 3141  524  0.428268401  0.470850441 #> 3142  524  0.448586416  0.459119829 #> 3143  524  0.468904432  0.470850441 #> 3144  524  0.468904432  0.494311664 #> 3145  525  0.489222447  0.506042276 #> 3146  525  0.468904432  0.494311664 #> 3147  525  0.468904432  0.470850441 #> 3148  525  0.489222447  0.459119829 #> 3149  525  0.509540462  0.470850441 #> 3150  525  0.509540462  0.494311664 #> 3151  526  0.529858478  0.506042276 #> 3152  526  0.509540462  0.494311664 #> 3153  526  0.509540462  0.470850441 #> 3154  526  0.529858478  0.459119829 #> 3155  526  0.550176493  0.470850441 #> 3156  526  0.550176493  0.494311664 #> 3157  527  0.570494509  0.506042276 #> 3158  527  0.550176493  0.494311664 #> 3159  527  0.550176493  0.470850441 #> 3160  527  0.570494509  0.459119829 #> 3161  527  0.590812524  0.470850441 #> 3162  527  0.590812524  0.494311664 #> 3163  528  0.611130539  0.506042276 #> 3164  528  0.590812524  0.494311664 #> 3165  528  0.590812524  0.470850441 #> 3166  528  0.611130539  0.459119829 #> 3167  528  0.631448555  0.470850441 #> 3168  528  0.631448555  0.494311664 #> 3169  529  0.651766570  0.506042276 #> 3170  529  0.631448555  0.494311664 #> 3171  529  0.631448555  0.470850441 #> 3172  529  0.651766570  0.459119829 #> 3173  529  0.672084586  0.470850441 #> 3174  529  0.672084586  0.494311664 #> 3175  530  0.692402601  0.506042276 #> 3176  530  0.672084586  0.494311664 #> 3177  530  0.672084586  0.470850441 #> 3178  530  0.692402601  0.459119829 #> 3179  530  0.712720616  0.470850441 #> 3180  530  0.712720616  0.494311664 #> 3181  531  0.733038632  0.506042276 #> 3182  531  0.712720616  0.494311664 #> 3183  531  0.712720616  0.470850441 #> 3184  531  0.733038632  0.459119829 #> 3185  531  0.753356647  0.470850441 #> 3186  531  0.753356647  0.494311664 #> 3187  532  0.773674663  0.506042276 #> 3188  532  0.753356647  0.494311664 #> 3189  532  0.753356647  0.470850441 #> 3190  532  0.773674663  0.459119829 #> 3191  532  0.793992678  0.470850441 #> 3192  532  0.793992678  0.494311664 #> 3193  533  0.814310694  0.506042276 #> 3194  533  0.793992678  0.494311664 #> 3195  533  0.793992678  0.470850441 #> 3196  533  0.814310694  0.459119829 #> 3197  533  0.834628709  0.470850441 #> 3198  533  0.834628709  0.494311664 #> 3199  534  0.854946724  0.506042276 #> 3200  534  0.834628709  0.494311664 #> 3201  534  0.834628709  0.470850441 #> 3202  534  0.854946724  0.459119829 #> 3203  534  0.875264740  0.470850441 #> 3204  534  0.875264740  0.494311664 #> 3205  535  0.895582755  0.506042276 #> 3206  535  0.875264740  0.494311664 #> 3207  535  0.875264740  0.470850441 #> 3208  535  0.895582755  0.459119829 #> 3209  535  0.915900771  0.470850441 #> 3210  535  0.915900771  0.494311664 #> 3211  536  0.936218786  0.506042276 #> 3212  536  0.915900771  0.494311664 #> 3213  536  0.915900771  0.470850441 #> 3214  536  0.936218786  0.459119829 #> 3215  536  0.956536801  0.470850441 #> 3216  536  0.956536801  0.494311664 #> 3217  537  0.976854817  0.506042276 #> 3218  537  0.956536801  0.494311664 #> 3219  537  0.956536801  0.470850441 #> 3220  537  0.976854817  0.459119829 #> 3221  537  0.997172832  0.470850441 #> 3222  537  0.997172832  0.494311664 #> 3223  538  1.017490848  0.506042276 #> 3224  538  0.997172832  0.494311664 #> 3225  538  0.997172832  0.470850441 #> 3226  538  1.017490848  0.459119829 #> 3227  538  1.037808863  0.470850441 #> 3228  538  1.037808863  0.494311664 #> 3229  539  1.058126878  0.506042276 #> 3230  539  1.037808863  0.494311664 #> 3231  539  1.037808863  0.470850441 #> 3232  539  1.058126878  0.459119829 #> 3233  539  1.078444894  0.470850441 #> 3234  539  1.078444894  0.494311664 #> 3235  540  1.098762909  0.506042276 #> 3236  540  1.078444894  0.494311664 #> 3237  540  1.078444894  0.470850441 #> 3238  540  1.098762909  0.459119829 #> 3239  540  1.119080925  0.470850441 #> 3240  540  1.119080925  0.494311664 #> 3241  541 -0.100000000  0.541234111 #> 3242  541 -0.120318015  0.529503499 #> 3243  541 -0.120318015  0.506042276 #> 3244  541 -0.100000000  0.494311664 #> 3245  541 -0.079681985  0.506042276 #> 3246  541 -0.079681985  0.529503499 #> 3247  542 -0.059363969  0.541234111 #> 3248  542 -0.079681985  0.529503499 #> 3249  542 -0.079681985  0.506042276 #> 3250  542 -0.059363969  0.494311664 #> 3251  542 -0.039045954  0.506042276 #> 3252  542 -0.039045954  0.529503499 #> 3253  543 -0.018727938  0.541234111 #> 3254  543 -0.039045954  0.529503499 #> 3255  543 -0.039045954  0.506042276 #> 3256  543 -0.018727938  0.494311664 #> 3257  543  0.001590077  0.506042276 #> 3258  543  0.001590077  0.529503499 #> 3259  544  0.021908092  0.541234111 #> 3260  544  0.001590077  0.529503499 #> 3261  544  0.001590077  0.506042276 #> 3262  544  0.021908092  0.494311664 #> 3263  544  0.042226108  0.506042276 #> 3264  544  0.042226108  0.529503499 #> 3265  545  0.062544123  0.541234111 #> 3266  545  0.042226108  0.529503499 #> 3267  545  0.042226108  0.506042276 #> 3268  545  0.062544123  0.494311664 #> 3269  545  0.082862139  0.506042276 #> 3270  545  0.082862139  0.529503499 #> 3271  546  0.103180154  0.541234111 #> 3272  546  0.082862139  0.529503499 #> 3273  546  0.082862139  0.506042276 #> 3274  546  0.103180154  0.494311664 #> 3275  546  0.123498170  0.506042276 #> 3276  546  0.123498170  0.529503499 #> 3277  547  0.143816185  0.541234111 #> 3278  547  0.123498170  0.529503499 #> 3279  547  0.123498170  0.506042276 #> 3280  547  0.143816185  0.494311664 #> 3281  547  0.164134200  0.506042276 #> 3282  547  0.164134200  0.529503499 #> 3283  548  0.184452216  0.541234111 #> 3284  548  0.164134200  0.529503499 #> 3285  548  0.164134200  0.506042276 #> 3286  548  0.184452216  0.494311664 #> 3287  548  0.204770231  0.506042276 #> 3288  548  0.204770231  0.529503499 #> 3289  549  0.225088247  0.541234111 #> 3290  549  0.204770231  0.529503499 #> 3291  549  0.204770231  0.506042276 #> 3292  549  0.225088247  0.494311664 #> 3293  549  0.245406262  0.506042276 #> 3294  549  0.245406262  0.529503499 #> 3295  550  0.265724277  0.541234111 #> 3296  550  0.245406262  0.529503499 #> 3297  550  0.245406262  0.506042276 #> 3298  550  0.265724277  0.494311664 #> 3299  550  0.286042293  0.506042276 #> 3300  550  0.286042293  0.529503499 #> 3301  551  0.306360308  0.541234111 #> 3302  551  0.286042293  0.529503499 #> 3303  551  0.286042293  0.506042276 #> 3304  551  0.306360308  0.494311664 #> 3305  551  0.326678324  0.506042276 #> 3306  551  0.326678324  0.529503499 #> 3307  552  0.346996339  0.541234111 #> 3308  552  0.326678324  0.529503499 #> 3309  552  0.326678324  0.506042276 #> 3310  552  0.346996339  0.494311664 #> 3311  552  0.367314354  0.506042276 #> 3312  552  0.367314354  0.529503499 #> 3313  553  0.387632370  0.541234111 #> 3314  553  0.367314354  0.529503499 #> 3315  553  0.367314354  0.506042276 #> 3316  553  0.387632370  0.494311664 #> 3317  553  0.407950385  0.506042276 #> 3318  553  0.407950385  0.529503499 #> 3319  554  0.428268401  0.541234111 #> 3320  554  0.407950385  0.529503499 #> 3321  554  0.407950385  0.506042276 #> 3322  554  0.428268401  0.494311664 #> 3323  554  0.448586416  0.506042276 #> 3324  554  0.448586416  0.529503499 #> 3325  555  0.468904432  0.541234111 #> 3326  555  0.448586416  0.529503499 #> 3327  555  0.448586416  0.506042276 #> 3328  555  0.468904432  0.494311664 #> 3329  555  0.489222447  0.506042276 #> 3330  555  0.489222447  0.529503499 #> 3331  556  0.509540462  0.541234111 #> 3332  556  0.489222447  0.529503499 #> 3333  556  0.489222447  0.506042276 #> 3334  556  0.509540462  0.494311664 #> 3335  556  0.529858478  0.506042276 #> 3336  556  0.529858478  0.529503499 #> 3337  557  0.550176493  0.541234111 #> 3338  557  0.529858478  0.529503499 #> 3339  557  0.529858478  0.506042276 #> 3340  557  0.550176493  0.494311664 #> 3341  557  0.570494509  0.506042276 #> 3342  557  0.570494509  0.529503499 #> 3343  558  0.590812524  0.541234111 #> 3344  558  0.570494509  0.529503499 #> 3345  558  0.570494509  0.506042276 #> 3346  558  0.590812524  0.494311664 #> 3347  558  0.611130539  0.506042276 #> 3348  558  0.611130539  0.529503499 #> 3349  559  0.631448555  0.541234111 #> 3350  559  0.611130539  0.529503499 #> 3351  559  0.611130539  0.506042276 #> 3352  559  0.631448555  0.494311664 #> 3353  559  0.651766570  0.506042276 #> 3354  559  0.651766570  0.529503499 #> 3355  560  0.672084586  0.541234111 #> 3356  560  0.651766570  0.529503499 #> 3357  560  0.651766570  0.506042276 #> 3358  560  0.672084586  0.494311664 #> 3359  560  0.692402601  0.506042276 #> 3360  560  0.692402601  0.529503499 #> 3361  561  0.712720616  0.541234111 #> 3362  561  0.692402601  0.529503499 #> 3363  561  0.692402601  0.506042276 #> 3364  561  0.712720616  0.494311664 #> 3365  561  0.733038632  0.506042276 #> 3366  561  0.733038632  0.529503499 #> 3367  562  0.753356647  0.541234111 #> 3368  562  0.733038632  0.529503499 #> 3369  562  0.733038632  0.506042276 #> 3370  562  0.753356647  0.494311664 #> 3371  562  0.773674663  0.506042276 #> 3372  562  0.773674663  0.529503499 #> 3373  563  0.793992678  0.541234111 #> 3374  563  0.773674663  0.529503499 #> 3375  563  0.773674663  0.506042276 #> 3376  563  0.793992678  0.494311664 #> 3377  563  0.814310694  0.506042276 #> 3378  563  0.814310694  0.529503499 #> 3379  564  0.834628709  0.541234111 #> 3380  564  0.814310694  0.529503499 #> 3381  564  0.814310694  0.506042276 #> 3382  564  0.834628709  0.494311664 #> 3383  564  0.854946724  0.506042276 #> 3384  564  0.854946724  0.529503499 #> 3385  565  0.875264740  0.541234111 #> 3386  565  0.854946724  0.529503499 #> 3387  565  0.854946724  0.506042276 #> 3388  565  0.875264740  0.494311664 #> 3389  565  0.895582755  0.506042276 #> 3390  565  0.895582755  0.529503499 #> 3391  566  0.915900771  0.541234111 #> 3392  566  0.895582755  0.529503499 #> 3393  566  0.895582755  0.506042276 #> 3394  566  0.915900771  0.494311664 #> 3395  566  0.936218786  0.506042276 #> 3396  566  0.936218786  0.529503499 #> 3397  567  0.956536801  0.541234111 #> 3398  567  0.936218786  0.529503499 #> 3399  567  0.936218786  0.506042276 #> 3400  567  0.956536801  0.494311664 #> 3401  567  0.976854817  0.506042276 #> 3402  567  0.976854817  0.529503499 #> 3403  568  0.997172832  0.541234111 #> 3404  568  0.976854817  0.529503499 #> 3405  568  0.976854817  0.506042276 #> 3406  568  0.997172832  0.494311664 #> 3407  568  1.017490848  0.506042276 #> 3408  568  1.017490848  0.529503499 #> 3409  569  1.037808863  0.541234111 #> 3410  569  1.017490848  0.529503499 #> 3411  569  1.017490848  0.506042276 #> 3412  569  1.037808863  0.494311664 #> 3413  569  1.058126878  0.506042276 #> 3414  569  1.058126878  0.529503499 #> 3415  570  1.078444894  0.541234111 #> 3416  570  1.058126878  0.529503499 #> 3417  570  1.058126878  0.506042276 #> 3418  570  1.078444894  0.494311664 #> 3419  570  1.098762909  0.506042276 #> 3420  570  1.098762909  0.529503499 #> 3421  571 -0.079681985  0.576425946 #> 3422  571 -0.100000000  0.564695334 #> 3423  571 -0.100000000  0.541234111 #> 3424  571 -0.079681985  0.529503499 #> 3425  571 -0.059363969  0.541234111 #> 3426  571 -0.059363969  0.564695334 #> 3427  572 -0.039045954  0.576425946 #> 3428  572 -0.059363969  0.564695334 #> 3429  572 -0.059363969  0.541234111 #> 3430  572 -0.039045954  0.529503499 #> 3431  572 -0.018727938  0.541234111 #> 3432  572 -0.018727938  0.564695334 #> 3433  573  0.001590077  0.576425946 #> 3434  573 -0.018727938  0.564695334 #> 3435  573 -0.018727938  0.541234111 #> 3436  573  0.001590077  0.529503499 #> 3437  573  0.021908092  0.541234111 #> 3438  573  0.021908092  0.564695334 #> 3439  574  0.042226108  0.576425946 #> 3440  574  0.021908092  0.564695334 #> 3441  574  0.021908092  0.541234111 #> 3442  574  0.042226108  0.529503499 #> 3443  574  0.062544123  0.541234111 #> 3444  574  0.062544123  0.564695334 #> 3445  575  0.082862139  0.576425946 #> 3446  575  0.062544123  0.564695334 #> 3447  575  0.062544123  0.541234111 #> 3448  575  0.082862139  0.529503499 #> 3449  575  0.103180154  0.541234111 #> 3450  575  0.103180154  0.564695334 #> 3451  576  0.123498170  0.576425946 #> 3452  576  0.103180154  0.564695334 #> 3453  576  0.103180154  0.541234111 #> 3454  576  0.123498170  0.529503499 #> 3455  576  0.143816185  0.541234111 #> 3456  576  0.143816185  0.564695334 #> 3457  577  0.164134200  0.576425946 #> 3458  577  0.143816185  0.564695334 #> 3459  577  0.143816185  0.541234111 #> 3460  577  0.164134200  0.529503499 #> 3461  577  0.184452216  0.541234111 #> 3462  577  0.184452216  0.564695334 #> 3463  578  0.204770231  0.576425946 #> 3464  578  0.184452216  0.564695334 #> 3465  578  0.184452216  0.541234111 #> 3466  578  0.204770231  0.529503499 #> 3467  578  0.225088247  0.541234111 #> 3468  578  0.225088247  0.564695334 #> 3469  579  0.245406262  0.576425946 #> 3470  579  0.225088247  0.564695334 #> 3471  579  0.225088247  0.541234111 #> 3472  579  0.245406262  0.529503499 #> 3473  579  0.265724277  0.541234111 #> 3474  579  0.265724277  0.564695334 #> 3475  580  0.286042293  0.576425946 #> 3476  580  0.265724277  0.564695334 #> 3477  580  0.265724277  0.541234111 #> 3478  580  0.286042293  0.529503499 #> 3479  580  0.306360308  0.541234111 #> 3480  580  0.306360308  0.564695334 #> 3481  581  0.326678324  0.576425946 #> 3482  581  0.306360308  0.564695334 #> 3483  581  0.306360308  0.541234111 #> 3484  581  0.326678324  0.529503499 #> 3485  581  0.346996339  0.541234111 #> 3486  581  0.346996339  0.564695334 #> 3487  582  0.367314354  0.576425946 #> 3488  582  0.346996339  0.564695334 #> 3489  582  0.346996339  0.541234111 #> 3490  582  0.367314354  0.529503499 #> 3491  582  0.387632370  0.541234111 #> 3492  582  0.387632370  0.564695334 #> 3493  583  0.407950385  0.576425946 #> 3494  583  0.387632370  0.564695334 #> 3495  583  0.387632370  0.541234111 #> 3496  583  0.407950385  0.529503499 #> 3497  583  0.428268401  0.541234111 #> 3498  583  0.428268401  0.564695334 #> 3499  584  0.448586416  0.576425946 #> 3500  584  0.428268401  0.564695334 #> 3501  584  0.428268401  0.541234111 #> 3502  584  0.448586416  0.529503499 #> 3503  584  0.468904432  0.541234111 #> 3504  584  0.468904432  0.564695334 #> 3505  585  0.489222447  0.576425946 #> 3506  585  0.468904432  0.564695334 #> 3507  585  0.468904432  0.541234111 #> 3508  585  0.489222447  0.529503499 #> 3509  585  0.509540462  0.541234111 #> 3510  585  0.509540462  0.564695334 #> 3511  586  0.529858478  0.576425946 #> 3512  586  0.509540462  0.564695334 #> 3513  586  0.509540462  0.541234111 #> 3514  586  0.529858478  0.529503499 #> 3515  586  0.550176493  0.541234111 #> 3516  586  0.550176493  0.564695334 #> 3517  587  0.570494509  0.576425946 #> 3518  587  0.550176493  0.564695334 #> 3519  587  0.550176493  0.541234111 #> 3520  587  0.570494509  0.529503499 #> 3521  587  0.590812524  0.541234111 #> 3522  587  0.590812524  0.564695334 #> 3523  588  0.611130539  0.576425946 #> 3524  588  0.590812524  0.564695334 #> 3525  588  0.590812524  0.541234111 #> 3526  588  0.611130539  0.529503499 #> 3527  588  0.631448555  0.541234111 #> 3528  588  0.631448555  0.564695334 #> 3529  589  0.651766570  0.576425946 #> 3530  589  0.631448555  0.564695334 #> 3531  589  0.631448555  0.541234111 #> 3532  589  0.651766570  0.529503499 #> 3533  589  0.672084586  0.541234111 #> 3534  589  0.672084586  0.564695334 #> 3535  590  0.692402601  0.576425946 #> 3536  590  0.672084586  0.564695334 #> 3537  590  0.672084586  0.541234111 #> 3538  590  0.692402601  0.529503499 #> 3539  590  0.712720616  0.541234111 #> 3540  590  0.712720616  0.564695334 #> 3541  591  0.733038632  0.576425946 #> 3542  591  0.712720616  0.564695334 #> 3543  591  0.712720616  0.541234111 #> 3544  591  0.733038632  0.529503499 #> 3545  591  0.753356647  0.541234111 #> 3546  591  0.753356647  0.564695334 #> 3547  592  0.773674663  0.576425946 #> 3548  592  0.753356647  0.564695334 #> 3549  592  0.753356647  0.541234111 #> 3550  592  0.773674663  0.529503499 #> 3551  592  0.793992678  0.541234111 #> 3552  592  0.793992678  0.564695334 #> 3553  593  0.814310694  0.576425946 #> 3554  593  0.793992678  0.564695334 #> 3555  593  0.793992678  0.541234111 #> 3556  593  0.814310694  0.529503499 #> 3557  593  0.834628709  0.541234111 #> 3558  593  0.834628709  0.564695334 #> 3559  594  0.854946724  0.576425946 #> 3560  594  0.834628709  0.564695334 #> 3561  594  0.834628709  0.541234111 #> 3562  594  0.854946724  0.529503499 #> 3563  594  0.875264740  0.541234111 #> 3564  594  0.875264740  0.564695334 #> 3565  595  0.895582755  0.576425946 #> 3566  595  0.875264740  0.564695334 #> 3567  595  0.875264740  0.541234111 #> 3568  595  0.895582755  0.529503499 #> 3569  595  0.915900771  0.541234111 #> 3570  595  0.915900771  0.564695334 #> 3571  596  0.936218786  0.576425946 #> 3572  596  0.915900771  0.564695334 #> 3573  596  0.915900771  0.541234111 #> 3574  596  0.936218786  0.529503499 #> 3575  596  0.956536801  0.541234111 #> 3576  596  0.956536801  0.564695334 #> 3577  597  0.976854817  0.576425946 #> 3578  597  0.956536801  0.564695334 #> 3579  597  0.956536801  0.541234111 #> 3580  597  0.976854817  0.529503499 #> 3581  597  0.997172832  0.541234111 #> 3582  597  0.997172832  0.564695334 #> 3583  598  1.017490848  0.576425946 #> 3584  598  0.997172832  0.564695334 #> 3585  598  0.997172832  0.541234111 #> 3586  598  1.017490848  0.529503499 #> 3587  598  1.037808863  0.541234111 #> 3588  598  1.037808863  0.564695334 #> 3589  599  1.058126878  0.576425946 #> 3590  599  1.037808863  0.564695334 #> 3591  599  1.037808863  0.541234111 #> 3592  599  1.058126878  0.529503499 #> 3593  599  1.078444894  0.541234111 #> 3594  599  1.078444894  0.564695334 #> 3595  600  1.098762909  0.576425946 #> 3596  600  1.078444894  0.564695334 #> 3597  600  1.078444894  0.541234111 #> 3598  600  1.098762909  0.529503499 #> 3599  600  1.119080925  0.541234111 #> 3600  600  1.119080925  0.564695334 #> 3601  601 -0.100000000  0.611617781 #> 3602  601 -0.120318015  0.599887169 #> 3603  601 -0.120318015  0.576425946 #> 3604  601 -0.100000000  0.564695334 #> 3605  601 -0.079681985  0.576425946 #> 3606  601 -0.079681985  0.599887169 #> 3607  602 -0.059363969  0.611617781 #> 3608  602 -0.079681985  0.599887169 #> 3609  602 -0.079681985  0.576425946 #> 3610  602 -0.059363969  0.564695334 #> 3611  602 -0.039045954  0.576425946 #> 3612  602 -0.039045954  0.599887169 #> 3613  603 -0.018727938  0.611617781 #> 3614  603 -0.039045954  0.599887169 #> 3615  603 -0.039045954  0.576425946 #> 3616  603 -0.018727938  0.564695334 #> 3617  603  0.001590077  0.576425946 #> 3618  603  0.001590077  0.599887169 #> 3619  604  0.021908092  0.611617781 #> 3620  604  0.001590077  0.599887169 #> 3621  604  0.001590077  0.576425946 #> 3622  604  0.021908092  0.564695334 #> 3623  604  0.042226108  0.576425946 #> 3624  604  0.042226108  0.599887169 #> 3625  605  0.062544123  0.611617781 #> 3626  605  0.042226108  0.599887169 #> 3627  605  0.042226108  0.576425946 #> 3628  605  0.062544123  0.564695334 #> 3629  605  0.082862139  0.576425946 #> 3630  605  0.082862139  0.599887169 #> 3631  606  0.103180154  0.611617781 #> 3632  606  0.082862139  0.599887169 #> 3633  606  0.082862139  0.576425946 #> 3634  606  0.103180154  0.564695334 #> 3635  606  0.123498170  0.576425946 #> 3636  606  0.123498170  0.599887169 #> 3637  607  0.143816185  0.611617781 #> 3638  607  0.123498170  0.599887169 #> 3639  607  0.123498170  0.576425946 #> 3640  607  0.143816185  0.564695334 #> 3641  607  0.164134200  0.576425946 #> 3642  607  0.164134200  0.599887169 #> 3643  608  0.184452216  0.611617781 #> 3644  608  0.164134200  0.599887169 #> 3645  608  0.164134200  0.576425946 #> 3646  608  0.184452216  0.564695334 #> 3647  608  0.204770231  0.576425946 #> 3648  608  0.204770231  0.599887169 #> 3649  609  0.225088247  0.611617781 #> 3650  609  0.204770231  0.599887169 #> 3651  609  0.204770231  0.576425946 #> 3652  609  0.225088247  0.564695334 #> 3653  609  0.245406262  0.576425946 #> 3654  609  0.245406262  0.599887169 #> 3655  610  0.265724277  0.611617781 #> 3656  610  0.245406262  0.599887169 #> 3657  610  0.245406262  0.576425946 #> 3658  610  0.265724277  0.564695334 #> 3659  610  0.286042293  0.576425946 #> 3660  610  0.286042293  0.599887169 #> 3661  611  0.306360308  0.611617781 #> 3662  611  0.286042293  0.599887169 #> 3663  611  0.286042293  0.576425946 #> 3664  611  0.306360308  0.564695334 #> 3665  611  0.326678324  0.576425946 #> 3666  611  0.326678324  0.599887169 #> 3667  612  0.346996339  0.611617781 #> 3668  612  0.326678324  0.599887169 #> 3669  612  0.326678324  0.576425946 #> 3670  612  0.346996339  0.564695334 #> 3671  612  0.367314354  0.576425946 #> 3672  612  0.367314354  0.599887169 #> 3673  613  0.387632370  0.611617781 #> 3674  613  0.367314354  0.599887169 #> 3675  613  0.367314354  0.576425946 #> 3676  613  0.387632370  0.564695334 #> 3677  613  0.407950385  0.576425946 #> 3678  613  0.407950385  0.599887169 #> 3679  614  0.428268401  0.611617781 #> 3680  614  0.407950385  0.599887169 #> 3681  614  0.407950385  0.576425946 #> 3682  614  0.428268401  0.564695334 #> 3683  614  0.448586416  0.576425946 #> 3684  614  0.448586416  0.599887169 #> 3685  615  0.468904432  0.611617781 #> 3686  615  0.448586416  0.599887169 #> 3687  615  0.448586416  0.576425946 #> 3688  615  0.468904432  0.564695334 #> 3689  615  0.489222447  0.576425946 #> 3690  615  0.489222447  0.599887169 #> 3691  616  0.509540462  0.611617781 #> 3692  616  0.489222447  0.599887169 #> 3693  616  0.489222447  0.576425946 #> 3694  616  0.509540462  0.564695334 #> 3695  616  0.529858478  0.576425946 #> 3696  616  0.529858478  0.599887169 #> 3697  617  0.550176493  0.611617781 #> 3698  617  0.529858478  0.599887169 #> 3699  617  0.529858478  0.576425946 #> 3700  617  0.550176493  0.564695334 #> 3701  617  0.570494509  0.576425946 #> 3702  617  0.570494509  0.599887169 #> 3703  618  0.590812524  0.611617781 #> 3704  618  0.570494509  0.599887169 #> 3705  618  0.570494509  0.576425946 #> 3706  618  0.590812524  0.564695334 #> 3707  618  0.611130539  0.576425946 #> 3708  618  0.611130539  0.599887169 #> 3709  619  0.631448555  0.611617781 #> 3710  619  0.611130539  0.599887169 #> 3711  619  0.611130539  0.576425946 #> 3712  619  0.631448555  0.564695334 #> 3713  619  0.651766570  0.576425946 #> 3714  619  0.651766570  0.599887169 #> 3715  620  0.672084586  0.611617781 #> 3716  620  0.651766570  0.599887169 #> 3717  620  0.651766570  0.576425946 #> 3718  620  0.672084586  0.564695334 #> 3719  620  0.692402601  0.576425946 #> 3720  620  0.692402601  0.599887169 #> 3721  621  0.712720616  0.611617781 #> 3722  621  0.692402601  0.599887169 #> 3723  621  0.692402601  0.576425946 #> 3724  621  0.712720616  0.564695334 #> 3725  621  0.733038632  0.576425946 #> 3726  621  0.733038632  0.599887169 #> 3727  622  0.753356647  0.611617781 #> 3728  622  0.733038632  0.599887169 #> 3729  622  0.733038632  0.576425946 #> 3730  622  0.753356647  0.564695334 #> 3731  622  0.773674663  0.576425946 #> 3732  622  0.773674663  0.599887169 #> 3733  623  0.793992678  0.611617781 #> 3734  623  0.773674663  0.599887169 #> 3735  623  0.773674663  0.576425946 #> 3736  623  0.793992678  0.564695334 #> 3737  623  0.814310694  0.576425946 #> 3738  623  0.814310694  0.599887169 #> 3739  624  0.834628709  0.611617781 #> 3740  624  0.814310694  0.599887169 #> 3741  624  0.814310694  0.576425946 #> 3742  624  0.834628709  0.564695334 #> 3743  624  0.854946724  0.576425946 #> 3744  624  0.854946724  0.599887169 #> 3745  625  0.875264740  0.611617781 #> 3746  625  0.854946724  0.599887169 #> 3747  625  0.854946724  0.576425946 #> 3748  625  0.875264740  0.564695334 #> 3749  625  0.895582755  0.576425946 #> 3750  625  0.895582755  0.599887169 #> 3751  626  0.915900771  0.611617781 #> 3752  626  0.895582755  0.599887169 #> 3753  626  0.895582755  0.576425946 #> 3754  626  0.915900771  0.564695334 #> 3755  626  0.936218786  0.576425946 #> 3756  626  0.936218786  0.599887169 #> 3757  627  0.956536801  0.611617781 #> 3758  627  0.936218786  0.599887169 #> 3759  627  0.936218786  0.576425946 #> 3760  627  0.956536801  0.564695334 #> 3761  627  0.976854817  0.576425946 #> 3762  627  0.976854817  0.599887169 #> 3763  628  0.997172832  0.611617781 #> 3764  628  0.976854817  0.599887169 #> 3765  628  0.976854817  0.576425946 #> 3766  628  0.997172832  0.564695334 #> 3767  628  1.017490848  0.576425946 #> 3768  628  1.017490848  0.599887169 #> 3769  629  1.037808863  0.611617781 #> 3770  629  1.017490848  0.599887169 #> 3771  629  1.017490848  0.576425946 #> 3772  629  1.037808863  0.564695334 #> 3773  629  1.058126878  0.576425946 #> 3774  629  1.058126878  0.599887169 #> 3775  630  1.078444894  0.611617781 #> 3776  630  1.058126878  0.599887169 #> 3777  630  1.058126878  0.576425946 #> 3778  630  1.078444894  0.564695334 #> 3779  630  1.098762909  0.576425946 #> 3780  630  1.098762909  0.599887169 #> 3781  631 -0.079681985  0.646809616 #> 3782  631 -0.100000000  0.635079004 #> 3783  631 -0.100000000  0.611617781 #> 3784  631 -0.079681985  0.599887169 #> 3785  631 -0.059363969  0.611617781 #> 3786  631 -0.059363969  0.635079004 #> 3787  632 -0.039045954  0.646809616 #> 3788  632 -0.059363969  0.635079004 #> 3789  632 -0.059363969  0.611617781 #> 3790  632 -0.039045954  0.599887169 #> 3791  632 -0.018727938  0.611617781 #> 3792  632 -0.018727938  0.635079004 #> 3793  633  0.001590077  0.646809616 #> 3794  633 -0.018727938  0.635079004 #> 3795  633 -0.018727938  0.611617781 #> 3796  633  0.001590077  0.599887169 #> 3797  633  0.021908092  0.611617781 #> 3798  633  0.021908092  0.635079004 #> 3799  634  0.042226108  0.646809616 #> 3800  634  0.021908092  0.635079004 #> 3801  634  0.021908092  0.611617781 #> 3802  634  0.042226108  0.599887169 #> 3803  634  0.062544123  0.611617781 #> 3804  634  0.062544123  0.635079004 #> 3805  635  0.082862139  0.646809616 #> 3806  635  0.062544123  0.635079004 #> 3807  635  0.062544123  0.611617781 #> 3808  635  0.082862139  0.599887169 #> 3809  635  0.103180154  0.611617781 #> 3810  635  0.103180154  0.635079004 #> 3811  636  0.123498170  0.646809616 #> 3812  636  0.103180154  0.635079004 #> 3813  636  0.103180154  0.611617781 #> 3814  636  0.123498170  0.599887169 #> 3815  636  0.143816185  0.611617781 #> 3816  636  0.143816185  0.635079004 #> 3817  637  0.164134200  0.646809616 #> 3818  637  0.143816185  0.635079004 #> 3819  637  0.143816185  0.611617781 #> 3820  637  0.164134200  0.599887169 #> 3821  637  0.184452216  0.611617781 #> 3822  637  0.184452216  0.635079004 #> 3823  638  0.204770231  0.646809616 #> 3824  638  0.184452216  0.635079004 #> 3825  638  0.184452216  0.611617781 #> 3826  638  0.204770231  0.599887169 #> 3827  638  0.225088247  0.611617781 #> 3828  638  0.225088247  0.635079004 #> 3829  639  0.245406262  0.646809616 #> 3830  639  0.225088247  0.635079004 #> 3831  639  0.225088247  0.611617781 #> 3832  639  0.245406262  0.599887169 #> 3833  639  0.265724277  0.611617781 #> 3834  639  0.265724277  0.635079004 #> 3835  640  0.286042293  0.646809616 #> 3836  640  0.265724277  0.635079004 #> 3837  640  0.265724277  0.611617781 #> 3838  640  0.286042293  0.599887169 #> 3839  640  0.306360308  0.611617781 #> 3840  640  0.306360308  0.635079004 #> 3841  641  0.326678324  0.646809616 #> 3842  641  0.306360308  0.635079004 #> 3843  641  0.306360308  0.611617781 #> 3844  641  0.326678324  0.599887169 #> 3845  641  0.346996339  0.611617781 #> 3846  641  0.346996339  0.635079004 #> 3847  642  0.367314354  0.646809616 #> 3848  642  0.346996339  0.635079004 #> 3849  642  0.346996339  0.611617781 #> 3850  642  0.367314354  0.599887169 #> 3851  642  0.387632370  0.611617781 #> 3852  642  0.387632370  0.635079004 #> 3853  643  0.407950385  0.646809616 #> 3854  643  0.387632370  0.635079004 #> 3855  643  0.387632370  0.611617781 #> 3856  643  0.407950385  0.599887169 #> 3857  643  0.428268401  0.611617781 #> 3858  643  0.428268401  0.635079004 #> 3859  644  0.448586416  0.646809616 #> 3860  644  0.428268401  0.635079004 #> 3861  644  0.428268401  0.611617781 #> 3862  644  0.448586416  0.599887169 #> 3863  644  0.468904432  0.611617781 #> 3864  644  0.468904432  0.635079004 #> 3865  645  0.489222447  0.646809616 #> 3866  645  0.468904432  0.635079004 #> 3867  645  0.468904432  0.611617781 #> 3868  645  0.489222447  0.599887169 #> 3869  645  0.509540462  0.611617781 #> 3870  645  0.509540462  0.635079004 #> 3871  646  0.529858478  0.646809616 #> 3872  646  0.509540462  0.635079004 #> 3873  646  0.509540462  0.611617781 #> 3874  646  0.529858478  0.599887169 #> 3875  646  0.550176493  0.611617781 #> 3876  646  0.550176493  0.635079004 #> 3877  647  0.570494509  0.646809616 #> 3878  647  0.550176493  0.635079004 #> 3879  647  0.550176493  0.611617781 #> 3880  647  0.570494509  0.599887169 #> 3881  647  0.590812524  0.611617781 #> 3882  647  0.590812524  0.635079004 #> 3883  648  0.611130539  0.646809616 #> 3884  648  0.590812524  0.635079004 #> 3885  648  0.590812524  0.611617781 #> 3886  648  0.611130539  0.599887169 #> 3887  648  0.631448555  0.611617781 #> 3888  648  0.631448555  0.635079004 #> 3889  649  0.651766570  0.646809616 #> 3890  649  0.631448555  0.635079004 #> 3891  649  0.631448555  0.611617781 #> 3892  649  0.651766570  0.599887169 #> 3893  649  0.672084586  0.611617781 #> 3894  649  0.672084586  0.635079004 #> 3895  650  0.692402601  0.646809616 #> 3896  650  0.672084586  0.635079004 #> 3897  650  0.672084586  0.611617781 #> 3898  650  0.692402601  0.599887169 #> 3899  650  0.712720616  0.611617781 #> 3900  650  0.712720616  0.635079004 #> 3901  651  0.733038632  0.646809616 #> 3902  651  0.712720616  0.635079004 #> 3903  651  0.712720616  0.611617781 #> 3904  651  0.733038632  0.599887169 #> 3905  651  0.753356647  0.611617781 #> 3906  651  0.753356647  0.635079004 #> 3907  652  0.773674663  0.646809616 #> 3908  652  0.753356647  0.635079004 #> 3909  652  0.753356647  0.611617781 #> 3910  652  0.773674663  0.599887169 #> 3911  652  0.793992678  0.611617781 #> 3912  652  0.793992678  0.635079004 #> 3913  653  0.814310694  0.646809616 #> 3914  653  0.793992678  0.635079004 #> 3915  653  0.793992678  0.611617781 #> 3916  653  0.814310694  0.599887169 #> 3917  653  0.834628709  0.611617781 #> 3918  653  0.834628709  0.635079004 #> 3919  654  0.854946724  0.646809616 #> 3920  654  0.834628709  0.635079004 #> 3921  654  0.834628709  0.611617781 #> 3922  654  0.854946724  0.599887169 #> 3923  654  0.875264740  0.611617781 #> 3924  654  0.875264740  0.635079004 #> 3925  655  0.895582755  0.646809616 #> 3926  655  0.875264740  0.635079004 #> 3927  655  0.875264740  0.611617781 #> 3928  655  0.895582755  0.599887169 #> 3929  655  0.915900771  0.611617781 #> 3930  655  0.915900771  0.635079004 #> 3931  656  0.936218786  0.646809616 #> 3932  656  0.915900771  0.635079004 #> 3933  656  0.915900771  0.611617781 #> 3934  656  0.936218786  0.599887169 #> 3935  656  0.956536801  0.611617781 #> 3936  656  0.956536801  0.635079004 #> 3937  657  0.976854817  0.646809616 #> 3938  657  0.956536801  0.635079004 #> 3939  657  0.956536801  0.611617781 #> 3940  657  0.976854817  0.599887169 #> 3941  657  0.997172832  0.611617781 #> 3942  657  0.997172832  0.635079004 #> 3943  658  1.017490848  0.646809616 #> 3944  658  0.997172832  0.635079004 #> 3945  658  0.997172832  0.611617781 #> 3946  658  1.017490848  0.599887169 #> 3947  658  1.037808863  0.611617781 #> 3948  658  1.037808863  0.635079004 #> 3949  659  1.058126878  0.646809616 #> 3950  659  1.037808863  0.635079004 #> 3951  659  1.037808863  0.611617781 #> 3952  659  1.058126878  0.599887169 #> 3953  659  1.078444894  0.611617781 #> 3954  659  1.078444894  0.635079004 #> 3955  660  1.098762909  0.646809616 #> 3956  660  1.078444894  0.635079004 #> 3957  660  1.078444894  0.611617781 #> 3958  660  1.098762909  0.599887169 #> 3959  660  1.119080925  0.611617781 #> 3960  660  1.119080925  0.635079004 #> 3961  661 -0.100000000  0.682001451 #> 3962  661 -0.120318015  0.670270839 #> 3963  661 -0.120318015  0.646809616 #> 3964  661 -0.100000000  0.635079004 #> 3965  661 -0.079681985  0.646809616 #> 3966  661 -0.079681985  0.670270839 #> 3967  662 -0.059363969  0.682001451 #> 3968  662 -0.079681985  0.670270839 #> 3969  662 -0.079681985  0.646809616 #> 3970  662 -0.059363969  0.635079004 #> 3971  662 -0.039045954  0.646809616 #> 3972  662 -0.039045954  0.670270839 #> 3973  663 -0.018727938  0.682001451 #> 3974  663 -0.039045954  0.670270839 #> 3975  663 -0.039045954  0.646809616 #> 3976  663 -0.018727938  0.635079004 #> 3977  663  0.001590077  0.646809616 #> 3978  663  0.001590077  0.670270839 #> 3979  664  0.021908092  0.682001451 #> 3980  664  0.001590077  0.670270839 #> 3981  664  0.001590077  0.646809616 #> 3982  664  0.021908092  0.635079004 #> 3983  664  0.042226108  0.646809616 #> 3984  664  0.042226108  0.670270839 #> 3985  665  0.062544123  0.682001451 #> 3986  665  0.042226108  0.670270839 #> 3987  665  0.042226108  0.646809616 #> 3988  665  0.062544123  0.635079004 #> 3989  665  0.082862139  0.646809616 #> 3990  665  0.082862139  0.670270839 #> 3991  666  0.103180154  0.682001451 #> 3992  666  0.082862139  0.670270839 #> 3993  666  0.082862139  0.646809616 #> 3994  666  0.103180154  0.635079004 #> 3995  666  0.123498170  0.646809616 #> 3996  666  0.123498170  0.670270839 #> 3997  667  0.143816185  0.682001451 #> 3998  667  0.123498170  0.670270839 #> 3999  667  0.123498170  0.646809616 #> 4000  667  0.143816185  0.635079004 #> 4001  667  0.164134200  0.646809616 #> 4002  667  0.164134200  0.670270839 #> 4003  668  0.184452216  0.682001451 #> 4004  668  0.164134200  0.670270839 #> 4005  668  0.164134200  0.646809616 #> 4006  668  0.184452216  0.635079004 #> 4007  668  0.204770231  0.646809616 #> 4008  668  0.204770231  0.670270839 #> 4009  669  0.225088247  0.682001451 #> 4010  669  0.204770231  0.670270839 #> 4011  669  0.204770231  0.646809616 #> 4012  669  0.225088247  0.635079004 #> 4013  669  0.245406262  0.646809616 #> 4014  669  0.245406262  0.670270839 #> 4015  670  0.265724277  0.682001451 #> 4016  670  0.245406262  0.670270839 #> 4017  670  0.245406262  0.646809616 #> 4018  670  0.265724277  0.635079004 #> 4019  670  0.286042293  0.646809616 #> 4020  670  0.286042293  0.670270839 #> 4021  671  0.306360308  0.682001451 #> 4022  671  0.286042293  0.670270839 #> 4023  671  0.286042293  0.646809616 #> 4024  671  0.306360308  0.635079004 #> 4025  671  0.326678324  0.646809616 #> 4026  671  0.326678324  0.670270839 #> 4027  672  0.346996339  0.682001451 #> 4028  672  0.326678324  0.670270839 #> 4029  672  0.326678324  0.646809616 #> 4030  672  0.346996339  0.635079004 #> 4031  672  0.367314354  0.646809616 #> 4032  672  0.367314354  0.670270839 #> 4033  673  0.387632370  0.682001451 #> 4034  673  0.367314354  0.670270839 #> 4035  673  0.367314354  0.646809616 #> 4036  673  0.387632370  0.635079004 #> 4037  673  0.407950385  0.646809616 #> 4038  673  0.407950385  0.670270839 #> 4039  674  0.428268401  0.682001451 #> 4040  674  0.407950385  0.670270839 #> 4041  674  0.407950385  0.646809616 #> 4042  674  0.428268401  0.635079004 #> 4043  674  0.448586416  0.646809616 #> 4044  674  0.448586416  0.670270839 #> 4045  675  0.468904432  0.682001451 #> 4046  675  0.448586416  0.670270839 #> 4047  675  0.448586416  0.646809616 #> 4048  675  0.468904432  0.635079004 #> 4049  675  0.489222447  0.646809616 #> 4050  675  0.489222447  0.670270839 #> 4051  676  0.509540462  0.682001451 #> 4052  676  0.489222447  0.670270839 #> 4053  676  0.489222447  0.646809616 #> 4054  676  0.509540462  0.635079004 #> 4055  676  0.529858478  0.646809616 #> 4056  676  0.529858478  0.670270839 #> 4057  677  0.550176493  0.682001451 #> 4058  677  0.529858478  0.670270839 #> 4059  677  0.529858478  0.646809616 #> 4060  677  0.550176493  0.635079004 #> 4061  677  0.570494509  0.646809616 #> 4062  677  0.570494509  0.670270839 #> 4063  678  0.590812524  0.682001451 #> 4064  678  0.570494509  0.670270839 #> 4065  678  0.570494509  0.646809616 #> 4066  678  0.590812524  0.635079004 #> 4067  678  0.611130539  0.646809616 #> 4068  678  0.611130539  0.670270839 #> 4069  679  0.631448555  0.682001451 #> 4070  679  0.611130539  0.670270839 #> 4071  679  0.611130539  0.646809616 #> 4072  679  0.631448555  0.635079004 #> 4073  679  0.651766570  0.646809616 #> 4074  679  0.651766570  0.670270839 #> 4075  680  0.672084586  0.682001451 #> 4076  680  0.651766570  0.670270839 #> 4077  680  0.651766570  0.646809616 #> 4078  680  0.672084586  0.635079004 #> 4079  680  0.692402601  0.646809616 #> 4080  680  0.692402601  0.670270839 #> 4081  681  0.712720616  0.682001451 #> 4082  681  0.692402601  0.670270839 #> 4083  681  0.692402601  0.646809616 #> 4084  681  0.712720616  0.635079004 #> 4085  681  0.733038632  0.646809616 #> 4086  681  0.733038632  0.670270839 #> 4087  682  0.753356647  0.682001451 #> 4088  682  0.733038632  0.670270839 #> 4089  682  0.733038632  0.646809616 #> 4090  682  0.753356647  0.635079004 #> 4091  682  0.773674663  0.646809616 #> 4092  682  0.773674663  0.670270839 #> 4093  683  0.793992678  0.682001451 #> 4094  683  0.773674663  0.670270839 #> 4095  683  0.773674663  0.646809616 #> 4096  683  0.793992678  0.635079004 #> 4097  683  0.814310694  0.646809616 #> 4098  683  0.814310694  0.670270839 #> 4099  684  0.834628709  0.682001451 #> 4100  684  0.814310694  0.670270839 #> 4101  684  0.814310694  0.646809616 #> 4102  684  0.834628709  0.635079004 #> 4103  684  0.854946724  0.646809616 #> 4104  684  0.854946724  0.670270839 #> 4105  685  0.875264740  0.682001451 #> 4106  685  0.854946724  0.670270839 #> 4107  685  0.854946724  0.646809616 #> 4108  685  0.875264740  0.635079004 #> 4109  685  0.895582755  0.646809616 #> 4110  685  0.895582755  0.670270839 #> 4111  686  0.915900771  0.682001451 #> 4112  686  0.895582755  0.670270839 #> 4113  686  0.895582755  0.646809616 #> 4114  686  0.915900771  0.635079004 #> 4115  686  0.936218786  0.646809616 #> 4116  686  0.936218786  0.670270839 #> 4117  687  0.956536801  0.682001451 #> 4118  687  0.936218786  0.670270839 #> 4119  687  0.936218786  0.646809616 #> 4120  687  0.956536801  0.635079004 #> 4121  687  0.976854817  0.646809616 #> 4122  687  0.976854817  0.670270839 #> 4123  688  0.997172832  0.682001451 #> 4124  688  0.976854817  0.670270839 #> 4125  688  0.976854817  0.646809616 #> 4126  688  0.997172832  0.635079004 #> 4127  688  1.017490848  0.646809616 #> 4128  688  1.017490848  0.670270839 #> 4129  689  1.037808863  0.682001451 #> 4130  689  1.017490848  0.670270839 #> 4131  689  1.017490848  0.646809616 #> 4132  689  1.037808863  0.635079004 #> 4133  689  1.058126878  0.646809616 #> 4134  689  1.058126878  0.670270839 #> 4135  690  1.078444894  0.682001451 #> 4136  690  1.058126878  0.670270839 #> 4137  690  1.058126878  0.646809616 #> 4138  690  1.078444894  0.635079004 #> 4139  690  1.098762909  0.646809616 #> 4140  690  1.098762909  0.670270839 #> 4141  691 -0.079681985  0.717193286 #> 4142  691 -0.100000000  0.705462674 #> 4143  691 -0.100000000  0.682001451 #> 4144  691 -0.079681985  0.670270839 #> 4145  691 -0.059363969  0.682001451 #> 4146  691 -0.059363969  0.705462674 #> 4147  692 -0.039045954  0.717193286 #> 4148  692 -0.059363969  0.705462674 #> 4149  692 -0.059363969  0.682001451 #> 4150  692 -0.039045954  0.670270839 #> 4151  692 -0.018727938  0.682001451 #> 4152  692 -0.018727938  0.705462674 #> 4153  693  0.001590077  0.717193286 #> 4154  693 -0.018727938  0.705462674 #> 4155  693 -0.018727938  0.682001451 #> 4156  693  0.001590077  0.670270839 #> 4157  693  0.021908092  0.682001451 #> 4158  693  0.021908092  0.705462674 #> 4159  694  0.042226108  0.717193286 #> 4160  694  0.021908092  0.705462674 #> 4161  694  0.021908092  0.682001451 #> 4162  694  0.042226108  0.670270839 #> 4163  694  0.062544123  0.682001451 #> 4164  694  0.062544123  0.705462674 #> 4165  695  0.082862139  0.717193286 #> 4166  695  0.062544123  0.705462674 #> 4167  695  0.062544123  0.682001451 #> 4168  695  0.082862139  0.670270839 #> 4169  695  0.103180154  0.682001451 #> 4170  695  0.103180154  0.705462674 #> 4171  696  0.123498170  0.717193286 #> 4172  696  0.103180154  0.705462674 #> 4173  696  0.103180154  0.682001451 #> 4174  696  0.123498170  0.670270839 #> 4175  696  0.143816185  0.682001451 #> 4176  696  0.143816185  0.705462674 #> 4177  697  0.164134200  0.717193286 #> 4178  697  0.143816185  0.705462674 #> 4179  697  0.143816185  0.682001451 #> 4180  697  0.164134200  0.670270839 #> 4181  697  0.184452216  0.682001451 #> 4182  697  0.184452216  0.705462674 #> 4183  698  0.204770231  0.717193286 #> 4184  698  0.184452216  0.705462674 #> 4185  698  0.184452216  0.682001451 #> 4186  698  0.204770231  0.670270839 #> 4187  698  0.225088247  0.682001451 #> 4188  698  0.225088247  0.705462674 #> 4189  699  0.245406262  0.717193286 #> 4190  699  0.225088247  0.705462674 #> 4191  699  0.225088247  0.682001451 #> 4192  699  0.245406262  0.670270839 #> 4193  699  0.265724277  0.682001451 #> 4194  699  0.265724277  0.705462674 #> 4195  700  0.286042293  0.717193286 #> 4196  700  0.265724277  0.705462674 #> 4197  700  0.265724277  0.682001451 #> 4198  700  0.286042293  0.670270839 #> 4199  700  0.306360308  0.682001451 #> 4200  700  0.306360308  0.705462674 #> 4201  701  0.326678324  0.717193286 #> 4202  701  0.306360308  0.705462674 #> 4203  701  0.306360308  0.682001451 #> 4204  701  0.326678324  0.670270839 #> 4205  701  0.346996339  0.682001451 #> 4206  701  0.346996339  0.705462674 #> 4207  702  0.367314354  0.717193286 #> 4208  702  0.346996339  0.705462674 #> 4209  702  0.346996339  0.682001451 #> 4210  702  0.367314354  0.670270839 #> 4211  702  0.387632370  0.682001451 #> 4212  702  0.387632370  0.705462674 #> 4213  703  0.407950385  0.717193286 #> 4214  703  0.387632370  0.705462674 #> 4215  703  0.387632370  0.682001451 #> 4216  703  0.407950385  0.670270839 #> 4217  703  0.428268401  0.682001451 #> 4218  703  0.428268401  0.705462674 #> 4219  704  0.448586416  0.717193286 #> 4220  704  0.428268401  0.705462674 #> 4221  704  0.428268401  0.682001451 #> 4222  704  0.448586416  0.670270839 #> 4223  704  0.468904432  0.682001451 #> 4224  704  0.468904432  0.705462674 #> 4225  705  0.489222447  0.717193286 #> 4226  705  0.468904432  0.705462674 #> 4227  705  0.468904432  0.682001451 #> 4228  705  0.489222447  0.670270839 #> 4229  705  0.509540462  0.682001451 #> 4230  705  0.509540462  0.705462674 #> 4231  706  0.529858478  0.717193286 #> 4232  706  0.509540462  0.705462674 #> 4233  706  0.509540462  0.682001451 #> 4234  706  0.529858478  0.670270839 #> 4235  706  0.550176493  0.682001451 #> 4236  706  0.550176493  0.705462674 #> 4237  707  0.570494509  0.717193286 #> 4238  707  0.550176493  0.705462674 #> 4239  707  0.550176493  0.682001451 #> 4240  707  0.570494509  0.670270839 #> 4241  707  0.590812524  0.682001451 #> 4242  707  0.590812524  0.705462674 #> 4243  708  0.611130539  0.717193286 #> 4244  708  0.590812524  0.705462674 #> 4245  708  0.590812524  0.682001451 #> 4246  708  0.611130539  0.670270839 #> 4247  708  0.631448555  0.682001451 #> 4248  708  0.631448555  0.705462674 #> 4249  709  0.651766570  0.717193286 #> 4250  709  0.631448555  0.705462674 #> 4251  709  0.631448555  0.682001451 #> 4252  709  0.651766570  0.670270839 #> 4253  709  0.672084586  0.682001451 #> 4254  709  0.672084586  0.705462674 #> 4255  710  0.692402601  0.717193286 #> 4256  710  0.672084586  0.705462674 #> 4257  710  0.672084586  0.682001451 #> 4258  710  0.692402601  0.670270839 #> 4259  710  0.712720616  0.682001451 #> 4260  710  0.712720616  0.705462674 #> 4261  711  0.733038632  0.717193286 #> 4262  711  0.712720616  0.705462674 #> 4263  711  0.712720616  0.682001451 #> 4264  711  0.733038632  0.670270839 #> 4265  711  0.753356647  0.682001451 #> 4266  711  0.753356647  0.705462674 #> 4267  712  0.773674663  0.717193286 #> 4268  712  0.753356647  0.705462674 #> 4269  712  0.753356647  0.682001451 #> 4270  712  0.773674663  0.670270839 #> 4271  712  0.793992678  0.682001451 #> 4272  712  0.793992678  0.705462674 #> 4273  713  0.814310694  0.717193286 #> 4274  713  0.793992678  0.705462674 #> 4275  713  0.793992678  0.682001451 #> 4276  713  0.814310694  0.670270839 #> 4277  713  0.834628709  0.682001451 #> 4278  713  0.834628709  0.705462674 #> 4279  714  0.854946724  0.717193286 #> 4280  714  0.834628709  0.705462674 #> 4281  714  0.834628709  0.682001451 #> 4282  714  0.854946724  0.670270839 #> 4283  714  0.875264740  0.682001451 #> 4284  714  0.875264740  0.705462674 #> 4285  715  0.895582755  0.717193286 #> 4286  715  0.875264740  0.705462674 #> 4287  715  0.875264740  0.682001451 #> 4288  715  0.895582755  0.670270839 #> 4289  715  0.915900771  0.682001451 #> 4290  715  0.915900771  0.705462674 #> 4291  716  0.936218786  0.717193286 #> 4292  716  0.915900771  0.705462674 #> 4293  716  0.915900771  0.682001451 #> 4294  716  0.936218786  0.670270839 #> 4295  716  0.956536801  0.682001451 #> 4296  716  0.956536801  0.705462674 #> 4297  717  0.976854817  0.717193286 #> 4298  717  0.956536801  0.705462674 #> 4299  717  0.956536801  0.682001451 #> 4300  717  0.976854817  0.670270839 #> 4301  717  0.997172832  0.682001451 #> 4302  717  0.997172832  0.705462674 #> 4303  718  1.017490848  0.717193286 #> 4304  718  0.997172832  0.705462674 #> 4305  718  0.997172832  0.682001451 #> 4306  718  1.017490848  0.670270839 #> 4307  718  1.037808863  0.682001451 #> 4308  718  1.037808863  0.705462674 #> 4309  719  1.058126878  0.717193286 #> 4310  719  1.037808863  0.705462674 #> 4311  719  1.037808863  0.682001451 #> 4312  719  1.058126878  0.670270839 #> 4313  719  1.078444894  0.682001451 #> 4314  719  1.078444894  0.705462674 #> 4315  720  1.098762909  0.717193286 #> 4316  720  1.078444894  0.705462674 #> 4317  720  1.078444894  0.682001451 #> 4318  720  1.098762909  0.670270839 #> 4319  720  1.119080925  0.682001451 #> 4320  720  1.119080925  0.705462674 #> 4321  721 -0.100000000  0.752385121 #> 4322  721 -0.120318015  0.740654509 #> 4323  721 -0.120318015  0.717193286 #> 4324  721 -0.100000000  0.705462674 #> 4325  721 -0.079681985  0.717193286 #> 4326  721 -0.079681985  0.740654509 #> 4327  722 -0.059363969  0.752385121 #> 4328  722 -0.079681985  0.740654509 #> 4329  722 -0.079681985  0.717193286 #> 4330  722 -0.059363969  0.705462674 #> 4331  722 -0.039045954  0.717193286 #> 4332  722 -0.039045954  0.740654509 #> 4333  723 -0.018727938  0.752385121 #> 4334  723 -0.039045954  0.740654509 #> 4335  723 -0.039045954  0.717193286 #> 4336  723 -0.018727938  0.705462674 #> 4337  723  0.001590077  0.717193286 #> 4338  723  0.001590077  0.740654509 #> 4339  724  0.021908092  0.752385121 #> 4340  724  0.001590077  0.740654509 #> 4341  724  0.001590077  0.717193286 #> 4342  724  0.021908092  0.705462674 #> 4343  724  0.042226108  0.717193286 #> 4344  724  0.042226108  0.740654509 #> 4345  725  0.062544123  0.752385121 #> 4346  725  0.042226108  0.740654509 #> 4347  725  0.042226108  0.717193286 #> 4348  725  0.062544123  0.705462674 #> 4349  725  0.082862139  0.717193286 #> 4350  725  0.082862139  0.740654509 #> 4351  726  0.103180154  0.752385121 #> 4352  726  0.082862139  0.740654509 #> 4353  726  0.082862139  0.717193286 #> 4354  726  0.103180154  0.705462674 #> 4355  726  0.123498170  0.717193286 #> 4356  726  0.123498170  0.740654509 #> 4357  727  0.143816185  0.752385121 #> 4358  727  0.123498170  0.740654509 #> 4359  727  0.123498170  0.717193286 #> 4360  727  0.143816185  0.705462674 #> 4361  727  0.164134200  0.717193286 #> 4362  727  0.164134200  0.740654509 #> 4363  728  0.184452216  0.752385121 #> 4364  728  0.164134200  0.740654509 #> 4365  728  0.164134200  0.717193286 #> 4366  728  0.184452216  0.705462674 #> 4367  728  0.204770231  0.717193286 #> 4368  728  0.204770231  0.740654509 #> 4369  729  0.225088247  0.752385121 #> 4370  729  0.204770231  0.740654509 #> 4371  729  0.204770231  0.717193286 #> 4372  729  0.225088247  0.705462674 #> 4373  729  0.245406262  0.717193286 #> 4374  729  0.245406262  0.740654509 #> 4375  730  0.265724277  0.752385121 #> 4376  730  0.245406262  0.740654509 #> 4377  730  0.245406262  0.717193286 #> 4378  730  0.265724277  0.705462674 #> 4379  730  0.286042293  0.717193286 #> 4380  730  0.286042293  0.740654509 #> 4381  731  0.306360308  0.752385121 #> 4382  731  0.286042293  0.740654509 #> 4383  731  0.286042293  0.717193286 #> 4384  731  0.306360308  0.705462674 #> 4385  731  0.326678324  0.717193286 #> 4386  731  0.326678324  0.740654509 #> 4387  732  0.346996339  0.752385121 #> 4388  732  0.326678324  0.740654509 #> 4389  732  0.326678324  0.717193286 #> 4390  732  0.346996339  0.705462674 #> 4391  732  0.367314354  0.717193286 #> 4392  732  0.367314354  0.740654509 #> 4393  733  0.387632370  0.752385121 #> 4394  733  0.367314354  0.740654509 #> 4395  733  0.367314354  0.717193286 #> 4396  733  0.387632370  0.705462674 #> 4397  733  0.407950385  0.717193286 #> 4398  733  0.407950385  0.740654509 #> 4399  734  0.428268401  0.752385121 #> 4400  734  0.407950385  0.740654509 #> 4401  734  0.407950385  0.717193286 #> 4402  734  0.428268401  0.705462674 #> 4403  734  0.448586416  0.717193286 #> 4404  734  0.448586416  0.740654509 #> 4405  735  0.468904432  0.752385121 #> 4406  735  0.448586416  0.740654509 #> 4407  735  0.448586416  0.717193286 #> 4408  735  0.468904432  0.705462674 #> 4409  735  0.489222447  0.717193286 #> 4410  735  0.489222447  0.740654509 #> 4411  736  0.509540462  0.752385121 #> 4412  736  0.489222447  0.740654509 #> 4413  736  0.489222447  0.717193286 #> 4414  736  0.509540462  0.705462674 #> 4415  736  0.529858478  0.717193286 #> 4416  736  0.529858478  0.740654509 #> 4417  737  0.550176493  0.752385121 #> 4418  737  0.529858478  0.740654509 #> 4419  737  0.529858478  0.717193286 #> 4420  737  0.550176493  0.705462674 #> 4421  737  0.570494509  0.717193286 #> 4422  737  0.570494509  0.740654509 #> 4423  738  0.590812524  0.752385121 #> 4424  738  0.570494509  0.740654509 #> 4425  738  0.570494509  0.717193286 #> 4426  738  0.590812524  0.705462674 #> 4427  738  0.611130539  0.717193286 #> 4428  738  0.611130539  0.740654509 #> 4429  739  0.631448555  0.752385121 #> 4430  739  0.611130539  0.740654509 #> 4431  739  0.611130539  0.717193286 #> 4432  739  0.631448555  0.705462674 #> 4433  739  0.651766570  0.717193286 #> 4434  739  0.651766570  0.740654509 #> 4435  740  0.672084586  0.752385121 #> 4436  740  0.651766570  0.740654509 #> 4437  740  0.651766570  0.717193286 #> 4438  740  0.672084586  0.705462674 #> 4439  740  0.692402601  0.717193286 #> 4440  740  0.692402601  0.740654509 #> 4441  741  0.712720616  0.752385121 #> 4442  741  0.692402601  0.740654509 #> 4443  741  0.692402601  0.717193286 #> 4444  741  0.712720616  0.705462674 #> 4445  741  0.733038632  0.717193286 #> 4446  741  0.733038632  0.740654509 #> 4447  742  0.753356647  0.752385121 #> 4448  742  0.733038632  0.740654509 #> 4449  742  0.733038632  0.717193286 #> 4450  742  0.753356647  0.705462674 #> 4451  742  0.773674663  0.717193286 #> 4452  742  0.773674663  0.740654509 #> 4453  743  0.793992678  0.752385121 #> 4454  743  0.773674663  0.740654509 #> 4455  743  0.773674663  0.717193286 #> 4456  743  0.793992678  0.705462674 #> 4457  743  0.814310694  0.717193286 #> 4458  743  0.814310694  0.740654509 #> 4459  744  0.834628709  0.752385121 #> 4460  744  0.814310694  0.740654509 #> 4461  744  0.814310694  0.717193286 #> 4462  744  0.834628709  0.705462674 #> 4463  744  0.854946724  0.717193286 #> 4464  744  0.854946724  0.740654509 #> 4465  745  0.875264740  0.752385121 #> 4466  745  0.854946724  0.740654509 #> 4467  745  0.854946724  0.717193286 #> 4468  745  0.875264740  0.705462674 #> 4469  745  0.895582755  0.717193286 #> 4470  745  0.895582755  0.740654509 #> 4471  746  0.915900771  0.752385121 #> 4472  746  0.895582755  0.740654509 #> 4473  746  0.895582755  0.717193286 #> 4474  746  0.915900771  0.705462674 #> 4475  746  0.936218786  0.717193286 #> 4476  746  0.936218786  0.740654509 #> 4477  747  0.956536801  0.752385121 #> 4478  747  0.936218786  0.740654509 #> 4479  747  0.936218786  0.717193286 #> 4480  747  0.956536801  0.705462674 #> 4481  747  0.976854817  0.717193286 #> 4482  747  0.976854817  0.740654509 #> 4483  748  0.997172832  0.752385121 #> 4484  748  0.976854817  0.740654509 #> 4485  748  0.976854817  0.717193286 #> 4486  748  0.997172832  0.705462674 #> 4487  748  1.017490848  0.717193286 #> 4488  748  1.017490848  0.740654509 #> 4489  749  1.037808863  0.752385121 #> 4490  749  1.017490848  0.740654509 #> 4491  749  1.017490848  0.717193286 #> 4492  749  1.037808863  0.705462674 #> 4493  749  1.058126878  0.717193286 #> 4494  749  1.058126878  0.740654509 #> 4495  750  1.078444894  0.752385121 #> 4496  750  1.058126878  0.740654509 #> 4497  750  1.058126878  0.717193286 #> 4498  750  1.078444894  0.705462674 #> 4499  750  1.098762909  0.717193286 #> 4500  750  1.098762909  0.740654509 #> 4501  751 -0.079681985  0.787576956 #> 4502  751 -0.100000000  0.775846344 #> 4503  751 -0.100000000  0.752385121 #> 4504  751 -0.079681985  0.740654509 #> 4505  751 -0.059363969  0.752385121 #> 4506  751 -0.059363969  0.775846344 #> 4507  752 -0.039045954  0.787576956 #> 4508  752 -0.059363969  0.775846344 #> 4509  752 -0.059363969  0.752385121 #> 4510  752 -0.039045954  0.740654509 #> 4511  752 -0.018727938  0.752385121 #> 4512  752 -0.018727938  0.775846344 #> 4513  753  0.001590077  0.787576956 #> 4514  753 -0.018727938  0.775846344 #> 4515  753 -0.018727938  0.752385121 #> 4516  753  0.001590077  0.740654509 #> 4517  753  0.021908092  0.752385121 #> 4518  753  0.021908092  0.775846344 #> 4519  754  0.042226108  0.787576956 #> 4520  754  0.021908092  0.775846344 #> 4521  754  0.021908092  0.752385121 #> 4522  754  0.042226108  0.740654509 #> 4523  754  0.062544123  0.752385121 #> 4524  754  0.062544123  0.775846344 #> 4525  755  0.082862139  0.787576956 #> 4526  755  0.062544123  0.775846344 #> 4527  755  0.062544123  0.752385121 #> 4528  755  0.082862139  0.740654509 #> 4529  755  0.103180154  0.752385121 #> 4530  755  0.103180154  0.775846344 #> 4531  756  0.123498170  0.787576956 #> 4532  756  0.103180154  0.775846344 #> 4533  756  0.103180154  0.752385121 #> 4534  756  0.123498170  0.740654509 #> 4535  756  0.143816185  0.752385121 #> 4536  756  0.143816185  0.775846344 #> 4537  757  0.164134200  0.787576956 #> 4538  757  0.143816185  0.775846344 #> 4539  757  0.143816185  0.752385121 #> 4540  757  0.164134200  0.740654509 #> 4541  757  0.184452216  0.752385121 #> 4542  757  0.184452216  0.775846344 #> 4543  758  0.204770231  0.787576956 #> 4544  758  0.184452216  0.775846344 #> 4545  758  0.184452216  0.752385121 #> 4546  758  0.204770231  0.740654509 #> 4547  758  0.225088247  0.752385121 #> 4548  758  0.225088247  0.775846344 #> 4549  759  0.245406262  0.787576956 #> 4550  759  0.225088247  0.775846344 #> 4551  759  0.225088247  0.752385121 #> 4552  759  0.245406262  0.740654509 #> 4553  759  0.265724277  0.752385121 #> 4554  759  0.265724277  0.775846344 #> 4555  760  0.286042293  0.787576956 #> 4556  760  0.265724277  0.775846344 #> 4557  760  0.265724277  0.752385121 #> 4558  760  0.286042293  0.740654509 #> 4559  760  0.306360308  0.752385121 #> 4560  760  0.306360308  0.775846344 #> 4561  761  0.326678324  0.787576956 #> 4562  761  0.306360308  0.775846344 #> 4563  761  0.306360308  0.752385121 #> 4564  761  0.326678324  0.740654509 #> 4565  761  0.346996339  0.752385121 #> 4566  761  0.346996339  0.775846344 #> 4567  762  0.367314354  0.787576956 #> 4568  762  0.346996339  0.775846344 #> 4569  762  0.346996339  0.752385121 #> 4570  762  0.367314354  0.740654509 #> 4571  762  0.387632370  0.752385121 #> 4572  762  0.387632370  0.775846344 #> 4573  763  0.407950385  0.787576956 #> 4574  763  0.387632370  0.775846344 #> 4575  763  0.387632370  0.752385121 #> 4576  763  0.407950385  0.740654509 #> 4577  763  0.428268401  0.752385121 #> 4578  763  0.428268401  0.775846344 #> 4579  764  0.448586416  0.787576956 #> 4580  764  0.428268401  0.775846344 #> 4581  764  0.428268401  0.752385121 #> 4582  764  0.448586416  0.740654509 #> 4583  764  0.468904432  0.752385121 #> 4584  764  0.468904432  0.775846344 #> 4585  765  0.489222447  0.787576956 #> 4586  765  0.468904432  0.775846344 #> 4587  765  0.468904432  0.752385121 #> 4588  765  0.489222447  0.740654509 #> 4589  765  0.509540462  0.752385121 #> 4590  765  0.509540462  0.775846344 #> 4591  766  0.529858478  0.787576956 #> 4592  766  0.509540462  0.775846344 #> 4593  766  0.509540462  0.752385121 #> 4594  766  0.529858478  0.740654509 #> 4595  766  0.550176493  0.752385121 #> 4596  766  0.550176493  0.775846344 #> 4597  767  0.570494509  0.787576956 #> 4598  767  0.550176493  0.775846344 #> 4599  767  0.550176493  0.752385121 #> 4600  767  0.570494509  0.740654509 #> 4601  767  0.590812524  0.752385121 #> 4602  767  0.590812524  0.775846344 #> 4603  768  0.611130539  0.787576956 #> 4604  768  0.590812524  0.775846344 #> 4605  768  0.590812524  0.752385121 #> 4606  768  0.611130539  0.740654509 #> 4607  768  0.631448555  0.752385121 #> 4608  768  0.631448555  0.775846344 #> 4609  769  0.651766570  0.787576956 #> 4610  769  0.631448555  0.775846344 #> 4611  769  0.631448555  0.752385121 #> 4612  769  0.651766570  0.740654509 #> 4613  769  0.672084586  0.752385121 #> 4614  769  0.672084586  0.775846344 #> 4615  770  0.692402601  0.787576956 #> 4616  770  0.672084586  0.775846344 #> 4617  770  0.672084586  0.752385121 #> 4618  770  0.692402601  0.740654509 #> 4619  770  0.712720616  0.752385121 #> 4620  770  0.712720616  0.775846344 #> 4621  771  0.733038632  0.787576956 #> 4622  771  0.712720616  0.775846344 #> 4623  771  0.712720616  0.752385121 #> 4624  771  0.733038632  0.740654509 #> 4625  771  0.753356647  0.752385121 #> 4626  771  0.753356647  0.775846344 #> 4627  772  0.773674663  0.787576956 #> 4628  772  0.753356647  0.775846344 #> 4629  772  0.753356647  0.752385121 #> 4630  772  0.773674663  0.740654509 #> 4631  772  0.793992678  0.752385121 #> 4632  772  0.793992678  0.775846344 #> 4633  773  0.814310694  0.787576956 #> 4634  773  0.793992678  0.775846344 #> 4635  773  0.793992678  0.752385121 #> 4636  773  0.814310694  0.740654509 #> 4637  773  0.834628709  0.752385121 #> 4638  773  0.834628709  0.775846344 #> 4639  774  0.854946724  0.787576956 #> 4640  774  0.834628709  0.775846344 #> 4641  774  0.834628709  0.752385121 #> 4642  774  0.854946724  0.740654509 #> 4643  774  0.875264740  0.752385121 #> 4644  774  0.875264740  0.775846344 #> 4645  775  0.895582755  0.787576956 #> 4646  775  0.875264740  0.775846344 #> 4647  775  0.875264740  0.752385121 #> 4648  775  0.895582755  0.740654509 #> 4649  775  0.915900771  0.752385121 #> 4650  775  0.915900771  0.775846344 #> 4651  776  0.936218786  0.787576956 #> 4652  776  0.915900771  0.775846344 #> 4653  776  0.915900771  0.752385121 #> 4654  776  0.936218786  0.740654509 #> 4655  776  0.956536801  0.752385121 #> 4656  776  0.956536801  0.775846344 #> 4657  777  0.976854817  0.787576956 #> 4658  777  0.956536801  0.775846344 #> 4659  777  0.956536801  0.752385121 #> 4660  777  0.976854817  0.740654509 #> 4661  777  0.997172832  0.752385121 #> 4662  777  0.997172832  0.775846344 #> 4663  778  1.017490848  0.787576956 #> 4664  778  0.997172832  0.775846344 #> 4665  778  0.997172832  0.752385121 #> 4666  778  1.017490848  0.740654509 #> 4667  778  1.037808863  0.752385121 #> 4668  778  1.037808863  0.775846344 #> 4669  779  1.058126878  0.787576956 #> 4670  779  1.037808863  0.775846344 #> 4671  779  1.037808863  0.752385121 #> 4672  779  1.058126878  0.740654509 #> 4673  779  1.078444894  0.752385121 #> 4674  779  1.078444894  0.775846344 #> 4675  780  1.098762909  0.787576956 #> 4676  780  1.078444894  0.775846344 #> 4677  780  1.078444894  0.752385121 #> 4678  780  1.098762909  0.740654509 #> 4679  780  1.119080925  0.752385121 #> 4680  780  1.119080925  0.775846344 #> 4681  781 -0.100000000  0.822768791 #> 4682  781 -0.120318015  0.811038179 #> 4683  781 -0.120318015  0.787576956 #> 4684  781 -0.100000000  0.775846344 #> 4685  781 -0.079681985  0.787576956 #> 4686  781 -0.079681985  0.811038179 #> 4687  782 -0.059363969  0.822768791 #> 4688  782 -0.079681985  0.811038179 #> 4689  782 -0.079681985  0.787576956 #> 4690  782 -0.059363969  0.775846344 #> 4691  782 -0.039045954  0.787576956 #> 4692  782 -0.039045954  0.811038179 #> 4693  783 -0.018727938  0.822768791 #> 4694  783 -0.039045954  0.811038179 #> 4695  783 -0.039045954  0.787576956 #> 4696  783 -0.018727938  0.775846344 #> 4697  783  0.001590077  0.787576956 #> 4698  783  0.001590077  0.811038179 #> 4699  784  0.021908092  0.822768791 #> 4700  784  0.001590077  0.811038179 #> 4701  784  0.001590077  0.787576956 #> 4702  784  0.021908092  0.775846344 #> 4703  784  0.042226108  0.787576956 #> 4704  784  0.042226108  0.811038179 #> 4705  785  0.062544123  0.822768791 #> 4706  785  0.042226108  0.811038179 #> 4707  785  0.042226108  0.787576956 #> 4708  785  0.062544123  0.775846344 #> 4709  785  0.082862139  0.787576956 #> 4710  785  0.082862139  0.811038179 #> 4711  786  0.103180154  0.822768791 #> 4712  786  0.082862139  0.811038179 #> 4713  786  0.082862139  0.787576956 #> 4714  786  0.103180154  0.775846344 #> 4715  786  0.123498170  0.787576956 #> 4716  786  0.123498170  0.811038179 #> 4717  787  0.143816185  0.822768791 #> 4718  787  0.123498170  0.811038179 #> 4719  787  0.123498170  0.787576956 #> 4720  787  0.143816185  0.775846344 #> 4721  787  0.164134200  0.787576956 #> 4722  787  0.164134200  0.811038179 #> 4723  788  0.184452216  0.822768791 #> 4724  788  0.164134200  0.811038179 #> 4725  788  0.164134200  0.787576956 #> 4726  788  0.184452216  0.775846344 #> 4727  788  0.204770231  0.787576956 #> 4728  788  0.204770231  0.811038179 #> 4729  789  0.225088247  0.822768791 #> 4730  789  0.204770231  0.811038179 #> 4731  789  0.204770231  0.787576956 #> 4732  789  0.225088247  0.775846344 #> 4733  789  0.245406262  0.787576956 #> 4734  789  0.245406262  0.811038179 #> 4735  790  0.265724277  0.822768791 #> 4736  790  0.245406262  0.811038179 #> 4737  790  0.245406262  0.787576956 #> 4738  790  0.265724277  0.775846344 #> 4739  790  0.286042293  0.787576956 #> 4740  790  0.286042293  0.811038179 #> 4741  791  0.306360308  0.822768791 #> 4742  791  0.286042293  0.811038179 #> 4743  791  0.286042293  0.787576956 #> 4744  791  0.306360308  0.775846344 #> 4745  791  0.326678324  0.787576956 #> 4746  791  0.326678324  0.811038179 #> 4747  792  0.346996339  0.822768791 #> 4748  792  0.326678324  0.811038179 #> 4749  792  0.326678324  0.787576956 #> 4750  792  0.346996339  0.775846344 #> 4751  792  0.367314354  0.787576956 #> 4752  792  0.367314354  0.811038179 #> 4753  793  0.387632370  0.822768791 #> 4754  793  0.367314354  0.811038179 #> 4755  793  0.367314354  0.787576956 #> 4756  793  0.387632370  0.775846344 #> 4757  793  0.407950385  0.787576956 #> 4758  793  0.407950385  0.811038179 #> 4759  794  0.428268401  0.822768791 #> 4760  794  0.407950385  0.811038179 #> 4761  794  0.407950385  0.787576956 #> 4762  794  0.428268401  0.775846344 #> 4763  794  0.448586416  0.787576956 #> 4764  794  0.448586416  0.811038179 #> 4765  795  0.468904432  0.822768791 #> 4766  795  0.448586416  0.811038179 #> 4767  795  0.448586416  0.787576956 #> 4768  795  0.468904432  0.775846344 #> 4769  795  0.489222447  0.787576956 #> 4770  795  0.489222447  0.811038179 #> 4771  796  0.509540462  0.822768791 #> 4772  796  0.489222447  0.811038179 #> 4773  796  0.489222447  0.787576956 #> 4774  796  0.509540462  0.775846344 #> 4775  796  0.529858478  0.787576956 #> 4776  796  0.529858478  0.811038179 #> 4777  797  0.550176493  0.822768791 #> 4778  797  0.529858478  0.811038179 #> 4779  797  0.529858478  0.787576956 #> 4780  797  0.550176493  0.775846344 #> 4781  797  0.570494509  0.787576956 #> 4782  797  0.570494509  0.811038179 #> 4783  798  0.590812524  0.822768791 #> 4784  798  0.570494509  0.811038179 #> 4785  798  0.570494509  0.787576956 #> 4786  798  0.590812524  0.775846344 #> 4787  798  0.611130539  0.787576956 #> 4788  798  0.611130539  0.811038179 #> 4789  799  0.631448555  0.822768791 #> 4790  799  0.611130539  0.811038179 #> 4791  799  0.611130539  0.787576956 #> 4792  799  0.631448555  0.775846344 #> 4793  799  0.651766570  0.787576956 #> 4794  799  0.651766570  0.811038179 #> 4795  800  0.672084586  0.822768791 #> 4796  800  0.651766570  0.811038179 #> 4797  800  0.651766570  0.787576956 #> 4798  800  0.672084586  0.775846344 #> 4799  800  0.692402601  0.787576956 #> 4800  800  0.692402601  0.811038179 #> 4801  801  0.712720616  0.822768791 #> 4802  801  0.692402601  0.811038179 #> 4803  801  0.692402601  0.787576956 #> 4804  801  0.712720616  0.775846344 #> 4805  801  0.733038632  0.787576956 #> 4806  801  0.733038632  0.811038179 #> 4807  802  0.753356647  0.822768791 #> 4808  802  0.733038632  0.811038179 #> 4809  802  0.733038632  0.787576956 #> 4810  802  0.753356647  0.775846344 #> 4811  802  0.773674663  0.787576956 #> 4812  802  0.773674663  0.811038179 #> 4813  803  0.793992678  0.822768791 #> 4814  803  0.773674663  0.811038179 #> 4815  803  0.773674663  0.787576956 #> 4816  803  0.793992678  0.775846344 #> 4817  803  0.814310694  0.787576956 #> 4818  803  0.814310694  0.811038179 #> 4819  804  0.834628709  0.822768791 #> 4820  804  0.814310694  0.811038179 #> 4821  804  0.814310694  0.787576956 #> 4822  804  0.834628709  0.775846344 #> 4823  804  0.854946724  0.787576956 #> 4824  804  0.854946724  0.811038179 #> 4825  805  0.875264740  0.822768791 #> 4826  805  0.854946724  0.811038179 #> 4827  805  0.854946724  0.787576956 #> 4828  805  0.875264740  0.775846344 #> 4829  805  0.895582755  0.787576956 #> 4830  805  0.895582755  0.811038179 #> 4831  806  0.915900771  0.822768791 #> 4832  806  0.895582755  0.811038179 #> 4833  806  0.895582755  0.787576956 #> 4834  806  0.915900771  0.775846344 #> 4835  806  0.936218786  0.787576956 #> 4836  806  0.936218786  0.811038179 #> 4837  807  0.956536801  0.822768791 #> 4838  807  0.936218786  0.811038179 #> 4839  807  0.936218786  0.787576956 #> 4840  807  0.956536801  0.775846344 #> 4841  807  0.976854817  0.787576956 #> 4842  807  0.976854817  0.811038179 #> 4843  808  0.997172832  0.822768791 #> 4844  808  0.976854817  0.811038179 #> 4845  808  0.976854817  0.787576956 #> 4846  808  0.997172832  0.775846344 #> 4847  808  1.017490848  0.787576956 #> 4848  808  1.017490848  0.811038179 #> 4849  809  1.037808863  0.822768791 #> 4850  809  1.017490848  0.811038179 #> 4851  809  1.017490848  0.787576956 #> 4852  809  1.037808863  0.775846344 #> 4853  809  1.058126878  0.787576956 #> 4854  809  1.058126878  0.811038179 #> 4855  810  1.078444894  0.822768791 #> 4856  810  1.058126878  0.811038179 #> 4857  810  1.058126878  0.787576956 #> 4858  810  1.078444894  0.775846344 #> 4859  810  1.098762909  0.787576956 #> 4860  810  1.098762909  0.811038179 #> 4861  811 -0.079681985  0.857960626 #> 4862  811 -0.100000000  0.846230014 #> 4863  811 -0.100000000  0.822768791 #> 4864  811 -0.079681985  0.811038179 #> 4865  811 -0.059363969  0.822768791 #> 4866  811 -0.059363969  0.846230014 #> 4867  812 -0.039045954  0.857960626 #> 4868  812 -0.059363969  0.846230014 #> 4869  812 -0.059363969  0.822768791 #> 4870  812 -0.039045954  0.811038179 #> 4871  812 -0.018727938  0.822768791 #> 4872  812 -0.018727938  0.846230014 #> 4873  813  0.001590077  0.857960626 #> 4874  813 -0.018727938  0.846230014 #> 4875  813 -0.018727938  0.822768791 #> 4876  813  0.001590077  0.811038179 #> 4877  813  0.021908092  0.822768791 #> 4878  813  0.021908092  0.846230014 #> 4879  814  0.042226108  0.857960626 #> 4880  814  0.021908092  0.846230014 #> 4881  814  0.021908092  0.822768791 #> 4882  814  0.042226108  0.811038179 #> 4883  814  0.062544123  0.822768791 #> 4884  814  0.062544123  0.846230014 #> 4885  815  0.082862139  0.857960626 #> 4886  815  0.062544123  0.846230014 #> 4887  815  0.062544123  0.822768791 #> 4888  815  0.082862139  0.811038179 #> 4889  815  0.103180154  0.822768791 #> 4890  815  0.103180154  0.846230014 #> 4891  816  0.123498170  0.857960626 #> 4892  816  0.103180154  0.846230014 #> 4893  816  0.103180154  0.822768791 #> 4894  816  0.123498170  0.811038179 #> 4895  816  0.143816185  0.822768791 #> 4896  816  0.143816185  0.846230014 #> 4897  817  0.164134200  0.857960626 #> 4898  817  0.143816185  0.846230014 #> 4899  817  0.143816185  0.822768791 #> 4900  817  0.164134200  0.811038179 #> 4901  817  0.184452216  0.822768791 #> 4902  817  0.184452216  0.846230014 #> 4903  818  0.204770231  0.857960626 #> 4904  818  0.184452216  0.846230014 #> 4905  818  0.184452216  0.822768791 #> 4906  818  0.204770231  0.811038179 #> 4907  818  0.225088247  0.822768791 #> 4908  818  0.225088247  0.846230014 #> 4909  819  0.245406262  0.857960626 #> 4910  819  0.225088247  0.846230014 #> 4911  819  0.225088247  0.822768791 #> 4912  819  0.245406262  0.811038179 #> 4913  819  0.265724277  0.822768791 #> 4914  819  0.265724277  0.846230014 #> 4915  820  0.286042293  0.857960626 #> 4916  820  0.265724277  0.846230014 #> 4917  820  0.265724277  0.822768791 #> 4918  820  0.286042293  0.811038179 #> 4919  820  0.306360308  0.822768791 #> 4920  820  0.306360308  0.846230014 #> 4921  821  0.326678324  0.857960626 #> 4922  821  0.306360308  0.846230014 #> 4923  821  0.306360308  0.822768791 #> 4924  821  0.326678324  0.811038179 #> 4925  821  0.346996339  0.822768791 #> 4926  821  0.346996339  0.846230014 #> 4927  822  0.367314354  0.857960626 #> 4928  822  0.346996339  0.846230014 #> 4929  822  0.346996339  0.822768791 #> 4930  822  0.367314354  0.811038179 #> 4931  822  0.387632370  0.822768791 #> 4932  822  0.387632370  0.846230014 #> 4933  823  0.407950385  0.857960626 #> 4934  823  0.387632370  0.846230014 #> 4935  823  0.387632370  0.822768791 #> 4936  823  0.407950385  0.811038179 #> 4937  823  0.428268401  0.822768791 #> 4938  823  0.428268401  0.846230014 #> 4939  824  0.448586416  0.857960626 #> 4940  824  0.428268401  0.846230014 #> 4941  824  0.428268401  0.822768791 #> 4942  824  0.448586416  0.811038179 #> 4943  824  0.468904432  0.822768791 #> 4944  824  0.468904432  0.846230014 #> 4945  825  0.489222447  0.857960626 #> 4946  825  0.468904432  0.846230014 #> 4947  825  0.468904432  0.822768791 #> 4948  825  0.489222447  0.811038179 #> 4949  825  0.509540462  0.822768791 #> 4950  825  0.509540462  0.846230014 #> 4951  826  0.529858478  0.857960626 #> 4952  826  0.509540462  0.846230014 #> 4953  826  0.509540462  0.822768791 #> 4954  826  0.529858478  0.811038179 #> 4955  826  0.550176493  0.822768791 #> 4956  826  0.550176493  0.846230014 #> 4957  827  0.570494509  0.857960626 #> 4958  827  0.550176493  0.846230014 #> 4959  827  0.550176493  0.822768791 #> 4960  827  0.570494509  0.811038179 #> 4961  827  0.590812524  0.822768791 #> 4962  827  0.590812524  0.846230014 #> 4963  828  0.611130539  0.857960626 #> 4964  828  0.590812524  0.846230014 #> 4965  828  0.590812524  0.822768791 #> 4966  828  0.611130539  0.811038179 #> 4967  828  0.631448555  0.822768791 #> 4968  828  0.631448555  0.846230014 #> 4969  829  0.651766570  0.857960626 #> 4970  829  0.631448555  0.846230014 #> 4971  829  0.631448555  0.822768791 #> 4972  829  0.651766570  0.811038179 #> 4973  829  0.672084586  0.822768791 #> 4974  829  0.672084586  0.846230014 #> 4975  830  0.692402601  0.857960626 #> 4976  830  0.672084586  0.846230014 #> 4977  830  0.672084586  0.822768791 #> 4978  830  0.692402601  0.811038179 #> 4979  830  0.712720616  0.822768791 #> 4980  830  0.712720616  0.846230014 #> 4981  831  0.733038632  0.857960626 #> 4982  831  0.712720616  0.846230014 #> 4983  831  0.712720616  0.822768791 #> 4984  831  0.733038632  0.811038179 #> 4985  831  0.753356647  0.822768791 #> 4986  831  0.753356647  0.846230014 #> 4987  832  0.773674663  0.857960626 #> 4988  832  0.753356647  0.846230014 #> 4989  832  0.753356647  0.822768791 #> 4990  832  0.773674663  0.811038179 #> 4991  832  0.793992678  0.822768791 #> 4992  832  0.793992678  0.846230014 #> 4993  833  0.814310694  0.857960626 #> 4994  833  0.793992678  0.846230014 #> 4995  833  0.793992678  0.822768791 #> 4996  833  0.814310694  0.811038179 #> 4997  833  0.834628709  0.822768791 #> 4998  833  0.834628709  0.846230014 #> 4999  834  0.854946724  0.857960626 #> 5000  834  0.834628709  0.846230014 #> 5001  834  0.834628709  0.822768791 #> 5002  834  0.854946724  0.811038179 #> 5003  834  0.875264740  0.822768791 #> 5004  834  0.875264740  0.846230014 #> 5005  835  0.895582755  0.857960626 #> 5006  835  0.875264740  0.846230014 #> 5007  835  0.875264740  0.822768791 #> 5008  835  0.895582755  0.811038179 #> 5009  835  0.915900771  0.822768791 #> 5010  835  0.915900771  0.846230014 #> 5011  836  0.936218786  0.857960626 #> 5012  836  0.915900771  0.846230014 #> 5013  836  0.915900771  0.822768791 #> 5014  836  0.936218786  0.811038179 #> 5015  836  0.956536801  0.822768791 #> 5016  836  0.956536801  0.846230014 #> 5017  837  0.976854817  0.857960626 #> 5018  837  0.956536801  0.846230014 #> 5019  837  0.956536801  0.822768791 #> 5020  837  0.976854817  0.811038179 #> 5021  837  0.997172832  0.822768791 #> 5022  837  0.997172832  0.846230014 #> 5023  838  1.017490848  0.857960626 #> 5024  838  0.997172832  0.846230014 #> 5025  838  0.997172832  0.822768791 #> 5026  838  1.017490848  0.811038179 #> 5027  838  1.037808863  0.822768791 #> 5028  838  1.037808863  0.846230014 #> 5029  839  1.058126878  0.857960626 #> 5030  839  1.037808863  0.846230014 #> 5031  839  1.037808863  0.822768791 #> 5032  839  1.058126878  0.811038179 #> 5033  839  1.078444894  0.822768791 #> 5034  839  1.078444894  0.846230014 #> 5035  840  1.098762909  0.857960626 #> 5036  840  1.078444894  0.846230014 #> 5037  840  1.078444894  0.822768791 #> 5038  840  1.098762909  0.811038179 #> 5039  840  1.119080925  0.822768791 #> 5040  840  1.119080925  0.846230014 #> 5041  841 -0.100000000  0.893152461 #> 5042  841 -0.120318015  0.881421849 #> 5043  841 -0.120318015  0.857960626 #> 5044  841 -0.100000000  0.846230014 #> 5045  841 -0.079681985  0.857960626 #> 5046  841 -0.079681985  0.881421849 #> 5047  842 -0.059363969  0.893152461 #> 5048  842 -0.079681985  0.881421849 #> 5049  842 -0.079681985  0.857960626 #> 5050  842 -0.059363969  0.846230014 #> 5051  842 -0.039045954  0.857960626 #> 5052  842 -0.039045954  0.881421849 #> 5053  843 -0.018727938  0.893152461 #> 5054  843 -0.039045954  0.881421849 #> 5055  843 -0.039045954  0.857960626 #> 5056  843 -0.018727938  0.846230014 #> 5057  843  0.001590077  0.857960626 #> 5058  843  0.001590077  0.881421849 #> 5059  844  0.021908092  0.893152461 #> 5060  844  0.001590077  0.881421849 #> 5061  844  0.001590077  0.857960626 #> 5062  844  0.021908092  0.846230014 #> 5063  844  0.042226108  0.857960626 #> 5064  844  0.042226108  0.881421849 #> 5065  845  0.062544123  0.893152461 #> 5066  845  0.042226108  0.881421849 #> 5067  845  0.042226108  0.857960626 #> 5068  845  0.062544123  0.846230014 #> 5069  845  0.082862139  0.857960626 #> 5070  845  0.082862139  0.881421849 #> 5071  846  0.103180154  0.893152461 #> 5072  846  0.082862139  0.881421849 #> 5073  846  0.082862139  0.857960626 #> 5074  846  0.103180154  0.846230014 #> 5075  846  0.123498170  0.857960626 #> 5076  846  0.123498170  0.881421849 #> 5077  847  0.143816185  0.893152461 #> 5078  847  0.123498170  0.881421849 #> 5079  847  0.123498170  0.857960626 #> 5080  847  0.143816185  0.846230014 #> 5081  847  0.164134200  0.857960626 #> 5082  847  0.164134200  0.881421849 #> 5083  848  0.184452216  0.893152461 #> 5084  848  0.164134200  0.881421849 #> 5085  848  0.164134200  0.857960626 #> 5086  848  0.184452216  0.846230014 #> 5087  848  0.204770231  0.857960626 #> 5088  848  0.204770231  0.881421849 #> 5089  849  0.225088247  0.893152461 #> 5090  849  0.204770231  0.881421849 #> 5091  849  0.204770231  0.857960626 #> 5092  849  0.225088247  0.846230014 #> 5093  849  0.245406262  0.857960626 #> 5094  849  0.245406262  0.881421849 #> 5095  850  0.265724277  0.893152461 #> 5096  850  0.245406262  0.881421849 #> 5097  850  0.245406262  0.857960626 #> 5098  850  0.265724277  0.846230014 #> 5099  850  0.286042293  0.857960626 #> 5100  850  0.286042293  0.881421849 #> 5101  851  0.306360308  0.893152461 #> 5102  851  0.286042293  0.881421849 #> 5103  851  0.286042293  0.857960626 #> 5104  851  0.306360308  0.846230014 #> 5105  851  0.326678324  0.857960626 #> 5106  851  0.326678324  0.881421849 #> 5107  852  0.346996339  0.893152461 #> 5108  852  0.326678324  0.881421849 #> 5109  852  0.326678324  0.857960626 #> 5110  852  0.346996339  0.846230014 #> 5111  852  0.367314354  0.857960626 #> 5112  852  0.367314354  0.881421849 #> 5113  853  0.387632370  0.893152461 #> 5114  853  0.367314354  0.881421849 #> 5115  853  0.367314354  0.857960626 #> 5116  853  0.387632370  0.846230014 #> 5117  853  0.407950385  0.857960626 #> 5118  853  0.407950385  0.881421849 #> 5119  854  0.428268401  0.893152461 #> 5120  854  0.407950385  0.881421849 #> 5121  854  0.407950385  0.857960626 #> 5122  854  0.428268401  0.846230014 #> 5123  854  0.448586416  0.857960626 #> 5124  854  0.448586416  0.881421849 #> 5125  855  0.468904432  0.893152461 #> 5126  855  0.448586416  0.881421849 #> 5127  855  0.448586416  0.857960626 #> 5128  855  0.468904432  0.846230014 #> 5129  855  0.489222447  0.857960626 #> 5130  855  0.489222447  0.881421849 #> 5131  856  0.509540462  0.893152461 #> 5132  856  0.489222447  0.881421849 #> 5133  856  0.489222447  0.857960626 #> 5134  856  0.509540462  0.846230014 #> 5135  856  0.529858478  0.857960626 #> 5136  856  0.529858478  0.881421849 #> 5137  857  0.550176493  0.893152461 #> 5138  857  0.529858478  0.881421849 #> 5139  857  0.529858478  0.857960626 #> 5140  857  0.550176493  0.846230014 #> 5141  857  0.570494509  0.857960626 #> 5142  857  0.570494509  0.881421849 #> 5143  858  0.590812524  0.893152461 #> 5144  858  0.570494509  0.881421849 #> 5145  858  0.570494509  0.857960626 #> 5146  858  0.590812524  0.846230014 #> 5147  858  0.611130539  0.857960626 #> 5148  858  0.611130539  0.881421849 #> 5149  859  0.631448555  0.893152461 #> 5150  859  0.611130539  0.881421849 #> 5151  859  0.611130539  0.857960626 #> 5152  859  0.631448555  0.846230014 #> 5153  859  0.651766570  0.857960626 #> 5154  859  0.651766570  0.881421849 #> 5155  860  0.672084586  0.893152461 #> 5156  860  0.651766570  0.881421849 #> 5157  860  0.651766570  0.857960626 #> 5158  860  0.672084586  0.846230014 #> 5159  860  0.692402601  0.857960626 #> 5160  860  0.692402601  0.881421849 #> 5161  861  0.712720616  0.893152461 #> 5162  861  0.692402601  0.881421849 #> 5163  861  0.692402601  0.857960626 #> 5164  861  0.712720616  0.846230014 #> 5165  861  0.733038632  0.857960626 #> 5166  861  0.733038632  0.881421849 #> 5167  862  0.753356647  0.893152461 #> 5168  862  0.733038632  0.881421849 #> 5169  862  0.733038632  0.857960626 #> 5170  862  0.753356647  0.846230014 #> 5171  862  0.773674663  0.857960626 #> 5172  862  0.773674663  0.881421849 #> 5173  863  0.793992678  0.893152461 #> 5174  863  0.773674663  0.881421849 #> 5175  863  0.773674663  0.857960626 #> 5176  863  0.793992678  0.846230014 #> 5177  863  0.814310694  0.857960626 #> 5178  863  0.814310694  0.881421849 #> 5179  864  0.834628709  0.893152461 #> 5180  864  0.814310694  0.881421849 #> 5181  864  0.814310694  0.857960626 #> 5182  864  0.834628709  0.846230014 #> 5183  864  0.854946724  0.857960626 #> 5184  864  0.854946724  0.881421849 #> 5185  865  0.875264740  0.893152461 #> 5186  865  0.854946724  0.881421849 #> 5187  865  0.854946724  0.857960626 #> 5188  865  0.875264740  0.846230014 #> 5189  865  0.895582755  0.857960626 #> 5190  865  0.895582755  0.881421849 #> 5191  866  0.915900771  0.893152461 #> 5192  866  0.895582755  0.881421849 #> 5193  866  0.895582755  0.857960626 #> 5194  866  0.915900771  0.846230014 #> 5195  866  0.936218786  0.857960626 #> 5196  866  0.936218786  0.881421849 #> 5197  867  0.956536801  0.893152461 #> 5198  867  0.936218786  0.881421849 #> 5199  867  0.936218786  0.857960626 #> 5200  867  0.956536801  0.846230014 #> 5201  867  0.976854817  0.857960626 #> 5202  867  0.976854817  0.881421849 #> 5203  868  0.997172832  0.893152461 #> 5204  868  0.976854817  0.881421849 #> 5205  868  0.976854817  0.857960626 #> 5206  868  0.997172832  0.846230014 #> 5207  868  1.017490848  0.857960626 #> 5208  868  1.017490848  0.881421849 #> 5209  869  1.037808863  0.893152461 #> 5210  869  1.017490848  0.881421849 #> 5211  869  1.017490848  0.857960626 #> 5212  869  1.037808863  0.846230014 #> 5213  869  1.058126878  0.857960626 #> 5214  869  1.058126878  0.881421849 #> 5215  870  1.078444894  0.893152461 #> 5216  870  1.058126878  0.881421849 #> 5217  870  1.058126878  0.857960626 #> 5218  870  1.078444894  0.846230014 #> 5219  870  1.098762909  0.857960626 #> 5220  870  1.098762909  0.881421849 #> 5221  871 -0.079681985  0.928344296 #> 5222  871 -0.100000000  0.916613684 #> 5223  871 -0.100000000  0.893152461 #> 5224  871 -0.079681985  0.881421849 #> 5225  871 -0.059363969  0.893152461 #> 5226  871 -0.059363969  0.916613684 #> 5227  872 -0.039045954  0.928344296 #> 5228  872 -0.059363969  0.916613684 #> 5229  872 -0.059363969  0.893152461 #> 5230  872 -0.039045954  0.881421849 #> 5231  872 -0.018727938  0.893152461 #> 5232  872 -0.018727938  0.916613684 #> 5233  873  0.001590077  0.928344296 #> 5234  873 -0.018727938  0.916613684 #> 5235  873 -0.018727938  0.893152461 #> 5236  873  0.001590077  0.881421849 #> 5237  873  0.021908092  0.893152461 #> 5238  873  0.021908092  0.916613684 #> 5239  874  0.042226108  0.928344296 #> 5240  874  0.021908092  0.916613684 #> 5241  874  0.021908092  0.893152461 #> 5242  874  0.042226108  0.881421849 #> 5243  874  0.062544123  0.893152461 #> 5244  874  0.062544123  0.916613684 #> 5245  875  0.082862139  0.928344296 #> 5246  875  0.062544123  0.916613684 #> 5247  875  0.062544123  0.893152461 #> 5248  875  0.082862139  0.881421849 #> 5249  875  0.103180154  0.893152461 #> 5250  875  0.103180154  0.916613684 #> 5251  876  0.123498170  0.928344296 #> 5252  876  0.103180154  0.916613684 #> 5253  876  0.103180154  0.893152461 #> 5254  876  0.123498170  0.881421849 #> 5255  876  0.143816185  0.893152461 #> 5256  876  0.143816185  0.916613684 #> 5257  877  0.164134200  0.928344296 #> 5258  877  0.143816185  0.916613684 #> 5259  877  0.143816185  0.893152461 #> 5260  877  0.164134200  0.881421849 #> 5261  877  0.184452216  0.893152461 #> 5262  877  0.184452216  0.916613684 #> 5263  878  0.204770231  0.928344296 #> 5264  878  0.184452216  0.916613684 #> 5265  878  0.184452216  0.893152461 #> 5266  878  0.204770231  0.881421849 #> 5267  878  0.225088247  0.893152461 #> 5268  878  0.225088247  0.916613684 #> 5269  879  0.245406262  0.928344296 #> 5270  879  0.225088247  0.916613684 #> 5271  879  0.225088247  0.893152461 #> 5272  879  0.245406262  0.881421849 #> 5273  879  0.265724277  0.893152461 #> 5274  879  0.265724277  0.916613684 #> 5275  880  0.286042293  0.928344296 #> 5276  880  0.265724277  0.916613684 #> 5277  880  0.265724277  0.893152461 #> 5278  880  0.286042293  0.881421849 #> 5279  880  0.306360308  0.893152461 #> 5280  880  0.306360308  0.916613684 #> 5281  881  0.326678324  0.928344296 #> 5282  881  0.306360308  0.916613684 #> 5283  881  0.306360308  0.893152461 #> 5284  881  0.326678324  0.881421849 #> 5285  881  0.346996339  0.893152461 #> 5286  881  0.346996339  0.916613684 #> 5287  882  0.367314354  0.928344296 #> 5288  882  0.346996339  0.916613684 #> 5289  882  0.346996339  0.893152461 #> 5290  882  0.367314354  0.881421849 #> 5291  882  0.387632370  0.893152461 #> 5292  882  0.387632370  0.916613684 #> 5293  883  0.407950385  0.928344296 #> 5294  883  0.387632370  0.916613684 #> 5295  883  0.387632370  0.893152461 #> 5296  883  0.407950385  0.881421849 #> 5297  883  0.428268401  0.893152461 #> 5298  883  0.428268401  0.916613684 #> 5299  884  0.448586416  0.928344296 #> 5300  884  0.428268401  0.916613684 #> 5301  884  0.428268401  0.893152461 #> 5302  884  0.448586416  0.881421849 #> 5303  884  0.468904432  0.893152461 #> 5304  884  0.468904432  0.916613684 #> 5305  885  0.489222447  0.928344296 #> 5306  885  0.468904432  0.916613684 #> 5307  885  0.468904432  0.893152461 #> 5308  885  0.489222447  0.881421849 #> 5309  885  0.509540462  0.893152461 #> 5310  885  0.509540462  0.916613684 #> 5311  886  0.529858478  0.928344296 #> 5312  886  0.509540462  0.916613684 #> 5313  886  0.509540462  0.893152461 #> 5314  886  0.529858478  0.881421849 #> 5315  886  0.550176493  0.893152461 #> 5316  886  0.550176493  0.916613684 #> 5317  887  0.570494509  0.928344296 #> 5318  887  0.550176493  0.916613684 #> 5319  887  0.550176493  0.893152461 #> 5320  887  0.570494509  0.881421849 #> 5321  887  0.590812524  0.893152461 #> 5322  887  0.590812524  0.916613684 #> 5323  888  0.611130539  0.928344296 #> 5324  888  0.590812524  0.916613684 #> 5325  888  0.590812524  0.893152461 #> 5326  888  0.611130539  0.881421849 #> 5327  888  0.631448555  0.893152461 #> 5328  888  0.631448555  0.916613684 #> 5329  889  0.651766570  0.928344296 #> 5330  889  0.631448555  0.916613684 #> 5331  889  0.631448555  0.893152461 #> 5332  889  0.651766570  0.881421849 #> 5333  889  0.672084586  0.893152461 #> 5334  889  0.672084586  0.916613684 #> 5335  890  0.692402601  0.928344296 #> 5336  890  0.672084586  0.916613684 #> 5337  890  0.672084586  0.893152461 #> 5338  890  0.692402601  0.881421849 #> 5339  890  0.712720616  0.893152461 #> 5340  890  0.712720616  0.916613684 #> 5341  891  0.733038632  0.928344296 #> 5342  891  0.712720616  0.916613684 #> 5343  891  0.712720616  0.893152461 #> 5344  891  0.733038632  0.881421849 #> 5345  891  0.753356647  0.893152461 #> 5346  891  0.753356647  0.916613684 #> 5347  892  0.773674663  0.928344296 #> 5348  892  0.753356647  0.916613684 #> 5349  892  0.753356647  0.893152461 #> 5350  892  0.773674663  0.881421849 #> 5351  892  0.793992678  0.893152461 #> 5352  892  0.793992678  0.916613684 #> 5353  893  0.814310694  0.928344296 #> 5354  893  0.793992678  0.916613684 #> 5355  893  0.793992678  0.893152461 #> 5356  893  0.814310694  0.881421849 #> 5357  893  0.834628709  0.893152461 #> 5358  893  0.834628709  0.916613684 #> 5359  894  0.854946724  0.928344296 #> 5360  894  0.834628709  0.916613684 #> 5361  894  0.834628709  0.893152461 #> 5362  894  0.854946724  0.881421849 #> 5363  894  0.875264740  0.893152461 #> 5364  894  0.875264740  0.916613684 #> 5365  895  0.895582755  0.928344296 #> 5366  895  0.875264740  0.916613684 #> 5367  895  0.875264740  0.893152461 #> 5368  895  0.895582755  0.881421849 #> 5369  895  0.915900771  0.893152461 #> 5370  895  0.915900771  0.916613684 #> 5371  896  0.936218786  0.928344296 #> 5372  896  0.915900771  0.916613684 #> 5373  896  0.915900771  0.893152461 #> 5374  896  0.936218786  0.881421849 #> 5375  896  0.956536801  0.893152461 #> 5376  896  0.956536801  0.916613684 #> 5377  897  0.976854817  0.928344296 #> 5378  897  0.956536801  0.916613684 #> 5379  897  0.956536801  0.893152461 #> 5380  897  0.976854817  0.881421849 #> 5381  897  0.997172832  0.893152461 #> 5382  897  0.997172832  0.916613684 #> 5383  898  1.017490848  0.928344296 #> 5384  898  0.997172832  0.916613684 #> 5385  898  0.997172832  0.893152461 #> 5386  898  1.017490848  0.881421849 #> 5387  898  1.037808863  0.893152461 #> 5388  898  1.037808863  0.916613684 #> 5389  899  1.058126878  0.928344296 #> 5390  899  1.037808863  0.916613684 #> 5391  899  1.037808863  0.893152461 #> 5392  899  1.058126878  0.881421849 #> 5393  899  1.078444894  0.893152461 #> 5394  899  1.078444894  0.916613684 #> 5395  900  1.098762909  0.928344296 #> 5396  900  1.078444894  0.916613684 #> 5397  900  1.078444894  0.893152461 #> 5398  900  1.098762909  0.881421849 #> 5399  900  1.119080925  0.893152461 #> 5400  900  1.119080925  0.916613684 #> 5401  901 -0.100000000  0.963536131 #> 5402  901 -0.120318015  0.951805519 #> 5403  901 -0.120318015  0.928344296 #> 5404  901 -0.100000000  0.916613684 #> 5405  901 -0.079681985  0.928344296 #> 5406  901 -0.079681985  0.951805519 #> 5407  902 -0.059363969  0.963536131 #> 5408  902 -0.079681985  0.951805519 #> 5409  902 -0.079681985  0.928344296 #> 5410  902 -0.059363969  0.916613684 #> 5411  902 -0.039045954  0.928344296 #> 5412  902 -0.039045954  0.951805519 #> 5413  903 -0.018727938  0.963536131 #> 5414  903 -0.039045954  0.951805519 #> 5415  903 -0.039045954  0.928344296 #> 5416  903 -0.018727938  0.916613684 #> 5417  903  0.001590077  0.928344296 #> 5418  903  0.001590077  0.951805519 #> 5419  904  0.021908092  0.963536131 #> 5420  904  0.001590077  0.951805519 #> 5421  904  0.001590077  0.928344296 #> 5422  904  0.021908092  0.916613684 #> 5423  904  0.042226108  0.928344296 #> 5424  904  0.042226108  0.951805519 #> 5425  905  0.062544123  0.963536131 #> 5426  905  0.042226108  0.951805519 #> 5427  905  0.042226108  0.928344296 #> 5428  905  0.062544123  0.916613684 #> 5429  905  0.082862139  0.928344296 #> 5430  905  0.082862139  0.951805519 #> 5431  906  0.103180154  0.963536131 #> 5432  906  0.082862139  0.951805519 #> 5433  906  0.082862139  0.928344296 #> 5434  906  0.103180154  0.916613684 #> 5435  906  0.123498170  0.928344296 #> 5436  906  0.123498170  0.951805519 #> 5437  907  0.143816185  0.963536131 #> 5438  907  0.123498170  0.951805519 #> 5439  907  0.123498170  0.928344296 #> 5440  907  0.143816185  0.916613684 #> 5441  907  0.164134200  0.928344296 #> 5442  907  0.164134200  0.951805519 #> 5443  908  0.184452216  0.963536131 #> 5444  908  0.164134200  0.951805519 #> 5445  908  0.164134200  0.928344296 #> 5446  908  0.184452216  0.916613684 #> 5447  908  0.204770231  0.928344296 #> 5448  908  0.204770231  0.951805519 #> 5449  909  0.225088247  0.963536131 #> 5450  909  0.204770231  0.951805519 #> 5451  909  0.204770231  0.928344296 #> 5452  909  0.225088247  0.916613684 #> 5453  909  0.245406262  0.928344296 #> 5454  909  0.245406262  0.951805519 #> 5455  910  0.265724277  0.963536131 #> 5456  910  0.245406262  0.951805519 #> 5457  910  0.245406262  0.928344296 #> 5458  910  0.265724277  0.916613684 #> 5459  910  0.286042293  0.928344296 #> 5460  910  0.286042293  0.951805519 #> 5461  911  0.306360308  0.963536131 #> 5462  911  0.286042293  0.951805519 #> 5463  911  0.286042293  0.928344296 #> 5464  911  0.306360308  0.916613684 #> 5465  911  0.326678324  0.928344296 #> 5466  911  0.326678324  0.951805519 #> 5467  912  0.346996339  0.963536131 #> 5468  912  0.326678324  0.951805519 #> 5469  912  0.326678324  0.928344296 #> 5470  912  0.346996339  0.916613684 #> 5471  912  0.367314354  0.928344296 #> 5472  912  0.367314354  0.951805519 #> 5473  913  0.387632370  0.963536131 #> 5474  913  0.367314354  0.951805519 #> 5475  913  0.367314354  0.928344296 #> 5476  913  0.387632370  0.916613684 #> 5477  913  0.407950385  0.928344296 #> 5478  913  0.407950385  0.951805519 #> 5479  914  0.428268401  0.963536131 #> 5480  914  0.407950385  0.951805519 #> 5481  914  0.407950385  0.928344296 #> 5482  914  0.428268401  0.916613684 #> 5483  914  0.448586416  0.928344296 #> 5484  914  0.448586416  0.951805519 #> 5485  915  0.468904432  0.963536131 #> 5486  915  0.448586416  0.951805519 #> 5487  915  0.448586416  0.928344296 #> 5488  915  0.468904432  0.916613684 #> 5489  915  0.489222447  0.928344296 #> 5490  915  0.489222447  0.951805519 #> 5491  916  0.509540462  0.963536131 #> 5492  916  0.489222447  0.951805519 #> 5493  916  0.489222447  0.928344296 #> 5494  916  0.509540462  0.916613684 #> 5495  916  0.529858478  0.928344296 #> 5496  916  0.529858478  0.951805519 #> 5497  917  0.550176493  0.963536131 #> 5498  917  0.529858478  0.951805519 #> 5499  917  0.529858478  0.928344296 #> 5500  917  0.550176493  0.916613684 #> 5501  917  0.570494509  0.928344296 #> 5502  917  0.570494509  0.951805519 #> 5503  918  0.590812524  0.963536131 #> 5504  918  0.570494509  0.951805519 #> 5505  918  0.570494509  0.928344296 #> 5506  918  0.590812524  0.916613684 #> 5507  918  0.611130539  0.928344296 #> 5508  918  0.611130539  0.951805519 #> 5509  919  0.631448555  0.963536131 #> 5510  919  0.611130539  0.951805519 #> 5511  919  0.611130539  0.928344296 #> 5512  919  0.631448555  0.916613684 #> 5513  919  0.651766570  0.928344296 #> 5514  919  0.651766570  0.951805519 #> 5515  920  0.672084586  0.963536131 #> 5516  920  0.651766570  0.951805519 #> 5517  920  0.651766570  0.928344296 #> 5518  920  0.672084586  0.916613684 #> 5519  920  0.692402601  0.928344296 #> 5520  920  0.692402601  0.951805519 #> 5521  921  0.712720616  0.963536131 #> 5522  921  0.692402601  0.951805519 #> 5523  921  0.692402601  0.928344296 #> 5524  921  0.712720616  0.916613684 #> 5525  921  0.733038632  0.928344296 #> 5526  921  0.733038632  0.951805519 #> 5527  922  0.753356647  0.963536131 #> 5528  922  0.733038632  0.951805519 #> 5529  922  0.733038632  0.928344296 #> 5530  922  0.753356647  0.916613684 #> 5531  922  0.773674663  0.928344296 #> 5532  922  0.773674663  0.951805519 #> 5533  923  0.793992678  0.963536131 #> 5534  923  0.773674663  0.951805519 #> 5535  923  0.773674663  0.928344296 #> 5536  923  0.793992678  0.916613684 #> 5537  923  0.814310694  0.928344296 #> 5538  923  0.814310694  0.951805519 #> 5539  924  0.834628709  0.963536131 #> 5540  924  0.814310694  0.951805519 #> 5541  924  0.814310694  0.928344296 #> 5542  924  0.834628709  0.916613684 #> 5543  924  0.854946724  0.928344296 #> 5544  924  0.854946724  0.951805519 #> 5545  925  0.875264740  0.963536131 #> 5546  925  0.854946724  0.951805519 #> 5547  925  0.854946724  0.928344296 #> 5548  925  0.875264740  0.916613684 #> 5549  925  0.895582755  0.928344296 #> 5550  925  0.895582755  0.951805519 #> 5551  926  0.915900771  0.963536131 #> 5552  926  0.895582755  0.951805519 #> 5553  926  0.895582755  0.928344296 #> 5554  926  0.915900771  0.916613684 #> 5555  926  0.936218786  0.928344296 #> 5556  926  0.936218786  0.951805519 #> 5557  927  0.956536801  0.963536131 #> 5558  927  0.936218786  0.951805519 #> 5559  927  0.936218786  0.928344296 #> 5560  927  0.956536801  0.916613684 #> 5561  927  0.976854817  0.928344296 #> 5562  927  0.976854817  0.951805519 #> 5563  928  0.997172832  0.963536131 #> 5564  928  0.976854817  0.951805519 #> 5565  928  0.976854817  0.928344296 #> 5566  928  0.997172832  0.916613684 #> 5567  928  1.017490848  0.928344296 #> 5568  928  1.017490848  0.951805519 #> 5569  929  1.037808863  0.963536131 #> 5570  929  1.017490848  0.951805519 #> 5571  929  1.017490848  0.928344296 #> 5572  929  1.037808863  0.916613684 #> 5573  929  1.058126878  0.928344296 #> 5574  929  1.058126878  0.951805519 #> 5575  930  1.078444894  0.963536131 #> 5576  930  1.058126878  0.951805519 #> 5577  930  1.058126878  0.928344296 #> 5578  930  1.078444894  0.916613684 #> 5579  930  1.098762909  0.928344296 #> 5580  930  1.098762909  0.951805519 #> 5581  931 -0.079681985  0.998727966 #> 5582  931 -0.100000000  0.986997354 #> 5583  931 -0.100000000  0.963536131 #> 5584  931 -0.079681985  0.951805519 #> 5585  931 -0.059363969  0.963536131 #> 5586  931 -0.059363969  0.986997354 #> 5587  932 -0.039045954  0.998727966 #> 5588  932 -0.059363969  0.986997354 #> 5589  932 -0.059363969  0.963536131 #> 5590  932 -0.039045954  0.951805519 #> 5591  932 -0.018727938  0.963536131 #> 5592  932 -0.018727938  0.986997354 #> 5593  933  0.001590077  0.998727966 #> 5594  933 -0.018727938  0.986997354 #> 5595  933 -0.018727938  0.963536131 #> 5596  933  0.001590077  0.951805519 #> 5597  933  0.021908092  0.963536131 #> 5598  933  0.021908092  0.986997354 #> 5599  934  0.042226108  0.998727966 #> 5600  934  0.021908092  0.986997354 #> 5601  934  0.021908092  0.963536131 #> 5602  934  0.042226108  0.951805519 #> 5603  934  0.062544123  0.963536131 #> 5604  934  0.062544123  0.986997354 #> 5605  935  0.082862139  0.998727966 #> 5606  935  0.062544123  0.986997354 #> 5607  935  0.062544123  0.963536131 #> 5608  935  0.082862139  0.951805519 #> 5609  935  0.103180154  0.963536131 #> 5610  935  0.103180154  0.986997354 #> 5611  936  0.123498170  0.998727966 #> 5612  936  0.103180154  0.986997354 #> 5613  936  0.103180154  0.963536131 #> 5614  936  0.123498170  0.951805519 #> 5615  936  0.143816185  0.963536131 #> 5616  936  0.143816185  0.986997354 #> 5617  937  0.164134200  0.998727966 #> 5618  937  0.143816185  0.986997354 #> 5619  937  0.143816185  0.963536131 #> 5620  937  0.164134200  0.951805519 #> 5621  937  0.184452216  0.963536131 #> 5622  937  0.184452216  0.986997354 #> 5623  938  0.204770231  0.998727966 #> 5624  938  0.184452216  0.986997354 #> 5625  938  0.184452216  0.963536131 #> 5626  938  0.204770231  0.951805519 #> 5627  938  0.225088247  0.963536131 #> 5628  938  0.225088247  0.986997354 #> 5629  939  0.245406262  0.998727966 #> 5630  939  0.225088247  0.986997354 #> 5631  939  0.225088247  0.963536131 #> 5632  939  0.245406262  0.951805519 #> 5633  939  0.265724277  0.963536131 #> 5634  939  0.265724277  0.986997354 #> 5635  940  0.286042293  0.998727966 #> 5636  940  0.265724277  0.986997354 #> 5637  940  0.265724277  0.963536131 #> 5638  940  0.286042293  0.951805519 #> 5639  940  0.306360308  0.963536131 #> 5640  940  0.306360308  0.986997354 #> 5641  941  0.326678324  0.998727966 #> 5642  941  0.306360308  0.986997354 #> 5643  941  0.306360308  0.963536131 #> 5644  941  0.326678324  0.951805519 #> 5645  941  0.346996339  0.963536131 #> 5646  941  0.346996339  0.986997354 #> 5647  942  0.367314354  0.998727966 #> 5648  942  0.346996339  0.986997354 #> 5649  942  0.346996339  0.963536131 #> 5650  942  0.367314354  0.951805519 #> 5651  942  0.387632370  0.963536131 #> 5652  942  0.387632370  0.986997354 #> 5653  943  0.407950385  0.998727966 #> 5654  943  0.387632370  0.986997354 #> 5655  943  0.387632370  0.963536131 #> 5656  943  0.407950385  0.951805519 #> 5657  943  0.428268401  0.963536131 #> 5658  943  0.428268401  0.986997354 #> 5659  944  0.448586416  0.998727966 #> 5660  944  0.428268401  0.986997354 #> 5661  944  0.428268401  0.963536131 #> 5662  944  0.448586416  0.951805519 #> 5663  944  0.468904432  0.963536131 #> 5664  944  0.468904432  0.986997354 #> 5665  945  0.489222447  0.998727966 #> 5666  945  0.468904432  0.986997354 #> 5667  945  0.468904432  0.963536131 #> 5668  945  0.489222447  0.951805519 #> 5669  945  0.509540462  0.963536131 #> 5670  945  0.509540462  0.986997354 #> 5671  946  0.529858478  0.998727966 #> 5672  946  0.509540462  0.986997354 #> 5673  946  0.509540462  0.963536131 #> 5674  946  0.529858478  0.951805519 #> 5675  946  0.550176493  0.963536131 #> 5676  946  0.550176493  0.986997354 #> 5677  947  0.570494509  0.998727966 #> 5678  947  0.550176493  0.986997354 #> 5679  947  0.550176493  0.963536131 #> 5680  947  0.570494509  0.951805519 #> 5681  947  0.590812524  0.963536131 #> 5682  947  0.590812524  0.986997354 #> 5683  948  0.611130539  0.998727966 #> 5684  948  0.590812524  0.986997354 #> 5685  948  0.590812524  0.963536131 #> 5686  948  0.611130539  0.951805519 #> 5687  948  0.631448555  0.963536131 #> 5688  948  0.631448555  0.986997354 #> 5689  949  0.651766570  0.998727966 #> 5690  949  0.631448555  0.986997354 #> 5691  949  0.631448555  0.963536131 #> 5692  949  0.651766570  0.951805519 #> 5693  949  0.672084586  0.963536131 #> 5694  949  0.672084586  0.986997354 #> 5695  950  0.692402601  0.998727966 #> 5696  950  0.672084586  0.986997354 #> 5697  950  0.672084586  0.963536131 #> 5698  950  0.692402601  0.951805519 #> 5699  950  0.712720616  0.963536131 #> 5700  950  0.712720616  0.986997354 #> 5701  951  0.733038632  0.998727966 #> 5702  951  0.712720616  0.986997354 #> 5703  951  0.712720616  0.963536131 #> 5704  951  0.733038632  0.951805519 #> 5705  951  0.753356647  0.963536131 #> 5706  951  0.753356647  0.986997354 #> 5707  952  0.773674663  0.998727966 #> 5708  952  0.753356647  0.986997354 #> 5709  952  0.753356647  0.963536131 #> 5710  952  0.773674663  0.951805519 #> 5711  952  0.793992678  0.963536131 #> 5712  952  0.793992678  0.986997354 #> 5713  953  0.814310694  0.998727966 #> 5714  953  0.793992678  0.986997354 #> 5715  953  0.793992678  0.963536131 #> 5716  953  0.814310694  0.951805519 #> 5717  953  0.834628709  0.963536131 #> 5718  953  0.834628709  0.986997354 #> 5719  954  0.854946724  0.998727966 #> 5720  954  0.834628709  0.986997354 #> 5721  954  0.834628709  0.963536131 #> 5722  954  0.854946724  0.951805519 #> 5723  954  0.875264740  0.963536131 #> 5724  954  0.875264740  0.986997354 #> 5725  955  0.895582755  0.998727966 #> 5726  955  0.875264740  0.986997354 #> 5727  955  0.875264740  0.963536131 #> 5728  955  0.895582755  0.951805519 #> 5729  955  0.915900771  0.963536131 #> 5730  955  0.915900771  0.986997354 #> 5731  956  0.936218786  0.998727966 #> 5732  956  0.915900771  0.986997354 #> 5733  956  0.915900771  0.963536131 #> 5734  956  0.936218786  0.951805519 #> 5735  956  0.956536801  0.963536131 #> 5736  956  0.956536801  0.986997354 #> 5737  957  0.976854817  0.998727966 #> 5738  957  0.956536801  0.986997354 #> 5739  957  0.956536801  0.963536131 #> 5740  957  0.976854817  0.951805519 #> 5741  957  0.997172832  0.963536131 #> 5742  957  0.997172832  0.986997354 #> 5743  958  1.017490848  0.998727966 #> 5744  958  0.997172832  0.986997354 #> 5745  958  0.997172832  0.963536131 #> 5746  958  1.017490848  0.951805519 #> 5747  958  1.037808863  0.963536131 #> 5748  958  1.037808863  0.986997354 #> 5749  959  1.058126878  0.998727966 #> 5750  959  1.037808863  0.986997354 #> 5751  959  1.037808863  0.963536131 #> 5752  959  1.058126878  0.951805519 #> 5753  959  1.078444894  0.963536131 #> 5754  959  1.078444894  0.986997354 #> 5755  960  1.098762909  0.998727966 #> 5756  960  1.078444894  0.986997354 #> 5757  960  1.078444894  0.963536131 #> 5758  960  1.098762909  0.951805519 #> 5759  960  1.119080925  0.963536131 #> 5760  960  1.119080925  0.986997354 #> 5761  961 -0.100000000  1.033919801 #> 5762  961 -0.120318015  1.022189189 #> 5763  961 -0.120318015  0.998727966 #> 5764  961 -0.100000000  0.986997354 #> 5765  961 -0.079681985  0.998727966 #> 5766  961 -0.079681985  1.022189189 #> 5767  962 -0.059363969  1.033919801 #> 5768  962 -0.079681985  1.022189189 #> 5769  962 -0.079681985  0.998727966 #> 5770  962 -0.059363969  0.986997354 #> 5771  962 -0.039045954  0.998727966 #> 5772  962 -0.039045954  1.022189189 #> 5773  963 -0.018727938  1.033919801 #> 5774  963 -0.039045954  1.022189189 #> 5775  963 -0.039045954  0.998727966 #> 5776  963 -0.018727938  0.986997354 #> 5777  963  0.001590077  0.998727966 #> 5778  963  0.001590077  1.022189189 #> 5779  964  0.021908092  1.033919801 #> 5780  964  0.001590077  1.022189189 #> 5781  964  0.001590077  0.998727966 #> 5782  964  0.021908092  0.986997354 #> 5783  964  0.042226108  0.998727966 #> 5784  964  0.042226108  1.022189189 #> 5785  965  0.062544123  1.033919801 #> 5786  965  0.042226108  1.022189189 #> 5787  965  0.042226108  0.998727966 #> 5788  965  0.062544123  0.986997354 #> 5789  965  0.082862139  0.998727966 #> 5790  965  0.082862139  1.022189189 #> 5791  966  0.103180154  1.033919801 #> 5792  966  0.082862139  1.022189189 #> 5793  966  0.082862139  0.998727966 #> 5794  966  0.103180154  0.986997354 #> 5795  966  0.123498170  0.998727966 #> 5796  966  0.123498170  1.022189189 #> 5797  967  0.143816185  1.033919801 #> 5798  967  0.123498170  1.022189189 #> 5799  967  0.123498170  0.998727966 #> 5800  967  0.143816185  0.986997354 #> 5801  967  0.164134200  0.998727966 #> 5802  967  0.164134200  1.022189189 #> 5803  968  0.184452216  1.033919801 #> 5804  968  0.164134200  1.022189189 #> 5805  968  0.164134200  0.998727966 #> 5806  968  0.184452216  0.986997354 #> 5807  968  0.204770231  0.998727966 #> 5808  968  0.204770231  1.022189189 #> 5809  969  0.225088247  1.033919801 #> 5810  969  0.204770231  1.022189189 #> 5811  969  0.204770231  0.998727966 #> 5812  969  0.225088247  0.986997354 #> 5813  969  0.245406262  0.998727966 #> 5814  969  0.245406262  1.022189189 #> 5815  970  0.265724277  1.033919801 #> 5816  970  0.245406262  1.022189189 #> 5817  970  0.245406262  0.998727966 #> 5818  970  0.265724277  0.986997354 #> 5819  970  0.286042293  0.998727966 #> 5820  970  0.286042293  1.022189189 #> 5821  971  0.306360308  1.033919801 #> 5822  971  0.286042293  1.022189189 #> 5823  971  0.286042293  0.998727966 #> 5824  971  0.306360308  0.986997354 #> 5825  971  0.326678324  0.998727966 #> 5826  971  0.326678324  1.022189189 #> 5827  972  0.346996339  1.033919801 #> 5828  972  0.326678324  1.022189189 #> 5829  972  0.326678324  0.998727966 #> 5830  972  0.346996339  0.986997354 #> 5831  972  0.367314354  0.998727966 #> 5832  972  0.367314354  1.022189189 #> 5833  973  0.387632370  1.033919801 #> 5834  973  0.367314354  1.022189189 #> 5835  973  0.367314354  0.998727966 #> 5836  973  0.387632370  0.986997354 #> 5837  973  0.407950385  0.998727966 #> 5838  973  0.407950385  1.022189189 #> 5839  974  0.428268401  1.033919801 #> 5840  974  0.407950385  1.022189189 #> 5841  974  0.407950385  0.998727966 #> 5842  974  0.428268401  0.986997354 #> 5843  974  0.448586416  0.998727966 #> 5844  974  0.448586416  1.022189189 #> 5845  975  0.468904432  1.033919801 #> 5846  975  0.448586416  1.022189189 #> 5847  975  0.448586416  0.998727966 #> 5848  975  0.468904432  0.986997354 #> 5849  975  0.489222447  0.998727966 #> 5850  975  0.489222447  1.022189189 #> 5851  976  0.509540462  1.033919801 #> 5852  976  0.489222447  1.022189189 #> 5853  976  0.489222447  0.998727966 #> 5854  976  0.509540462  0.986997354 #> 5855  976  0.529858478  0.998727966 #> 5856  976  0.529858478  1.022189189 #> 5857  977  0.550176493  1.033919801 #> 5858  977  0.529858478  1.022189189 #> 5859  977  0.529858478  0.998727966 #> 5860  977  0.550176493  0.986997354 #> 5861  977  0.570494509  0.998727966 #> 5862  977  0.570494509  1.022189189 #> 5863  978  0.590812524  1.033919801 #> 5864  978  0.570494509  1.022189189 #> 5865  978  0.570494509  0.998727966 #> 5866  978  0.590812524  0.986997354 #> 5867  978  0.611130539  0.998727966 #> 5868  978  0.611130539  1.022189189 #> 5869  979  0.631448555  1.033919801 #> 5870  979  0.611130539  1.022189189 #> 5871  979  0.611130539  0.998727966 #> 5872  979  0.631448555  0.986997354 #> 5873  979  0.651766570  0.998727966 #> 5874  979  0.651766570  1.022189189 #> 5875  980  0.672084586  1.033919801 #> 5876  980  0.651766570  1.022189189 #> 5877  980  0.651766570  0.998727966 #> 5878  980  0.672084586  0.986997354 #> 5879  980  0.692402601  0.998727966 #> 5880  980  0.692402601  1.022189189 #> 5881  981  0.712720616  1.033919801 #> 5882  981  0.692402601  1.022189189 #> 5883  981  0.692402601  0.998727966 #> 5884  981  0.712720616  0.986997354 #> 5885  981  0.733038632  0.998727966 #> 5886  981  0.733038632  1.022189189 #> 5887  982  0.753356647  1.033919801 #> 5888  982  0.733038632  1.022189189 #> 5889  982  0.733038632  0.998727966 #> 5890  982  0.753356647  0.986997354 #> 5891  982  0.773674663  0.998727966 #> 5892  982  0.773674663  1.022189189 #> 5893  983  0.793992678  1.033919801 #> 5894  983  0.773674663  1.022189189 #> 5895  983  0.773674663  0.998727966 #> 5896  983  0.793992678  0.986997354 #> 5897  983  0.814310694  0.998727966 #> 5898  983  0.814310694  1.022189189 #> 5899  984  0.834628709  1.033919801 #> 5900  984  0.814310694  1.022189189 #> 5901  984  0.814310694  0.998727966 #> 5902  984  0.834628709  0.986997354 #> 5903  984  0.854946724  0.998727966 #> 5904  984  0.854946724  1.022189189 #> 5905  985  0.875264740  1.033919801 #> 5906  985  0.854946724  1.022189189 #> 5907  985  0.854946724  0.998727966 #> 5908  985  0.875264740  0.986997354 #> 5909  985  0.895582755  0.998727966 #> 5910  985  0.895582755  1.022189189 #> 5911  986  0.915900771  1.033919801 #> 5912  986  0.895582755  1.022189189 #> 5913  986  0.895582755  0.998727966 #> 5914  986  0.915900771  0.986997354 #> 5915  986  0.936218786  0.998727966 #> 5916  986  0.936218786  1.022189189 #> 5917  987  0.956536801  1.033919801 #> 5918  987  0.936218786  1.022189189 #> 5919  987  0.936218786  0.998727966 #> 5920  987  0.956536801  0.986997354 #> 5921  987  0.976854817  0.998727966 #> 5922  987  0.976854817  1.022189189 #> 5923  988  0.997172832  1.033919801 #> 5924  988  0.976854817  1.022189189 #> 5925  988  0.976854817  0.998727966 #> 5926  988  0.997172832  0.986997354 #> 5927  988  1.017490848  0.998727966 #> 5928  988  1.017490848  1.022189189 #> 5929  989  1.037808863  1.033919801 #> 5930  989  1.017490848  1.022189189 #> 5931  989  1.017490848  0.998727966 #> 5932  989  1.037808863  0.986997354 #> 5933  989  1.058126878  0.998727966 #> 5934  989  1.058126878  1.022189189 #> 5935  990  1.078444894  1.033919801 #> 5936  990  1.058126878  1.022189189 #> 5937  990  1.058126878  0.998727966 #> 5938  990  1.078444894  0.986997354 #> 5939  990  1.098762909  0.998727966 #> 5940  990  1.098762909  1.022189189 #> 5941  991 -0.079681985  1.069111636 #> 5942  991 -0.100000000  1.057381024 #> 5943  991 -0.100000000  1.033919801 #> 5944  991 -0.079681985  1.022189189 #> 5945  991 -0.059363969  1.033919801 #> 5946  991 -0.059363969  1.057381024 #> 5947  992 -0.039045954  1.069111636 #> 5948  992 -0.059363969  1.057381024 #> 5949  992 -0.059363969  1.033919801 #> 5950  992 -0.039045954  1.022189189 #> 5951  992 -0.018727938  1.033919801 #> 5952  992 -0.018727938  1.057381024 #> 5953  993  0.001590077  1.069111636 #> 5954  993 -0.018727938  1.057381024 #> 5955  993 -0.018727938  1.033919801 #> 5956  993  0.001590077  1.022189189 #> 5957  993  0.021908092  1.033919801 #> 5958  993  0.021908092  1.057381024 #> 5959  994  0.042226108  1.069111636 #> 5960  994  0.021908092  1.057381024 #> 5961  994  0.021908092  1.033919801 #> 5962  994  0.042226108  1.022189189 #> 5963  994  0.062544123  1.033919801 #> 5964  994  0.062544123  1.057381024 #> 5965  995  0.082862139  1.069111636 #> 5966  995  0.062544123  1.057381024 #> 5967  995  0.062544123  1.033919801 #> 5968  995  0.082862139  1.022189189 #> 5969  995  0.103180154  1.033919801 #> 5970  995  0.103180154  1.057381024 #> 5971  996  0.123498170  1.069111636 #> 5972  996  0.103180154  1.057381024 #> 5973  996  0.103180154  1.033919801 #> 5974  996  0.123498170  1.022189189 #> 5975  996  0.143816185  1.033919801 #> 5976  996  0.143816185  1.057381024 #> 5977  997  0.164134200  1.069111636 #> 5978  997  0.143816185  1.057381024 #> 5979  997  0.143816185  1.033919801 #> 5980  997  0.164134200  1.022189189 #> 5981  997  0.184452216  1.033919801 #> 5982  997  0.184452216  1.057381024 #> 5983  998  0.204770231  1.069111636 #> 5984  998  0.184452216  1.057381024 #> 5985  998  0.184452216  1.033919801 #> 5986  998  0.204770231  1.022189189 #> 5987  998  0.225088247  1.033919801 #> 5988  998  0.225088247  1.057381024 #> 5989  999  0.245406262  1.069111636 #> 5990  999  0.225088247  1.057381024 #> 5991  999  0.225088247  1.033919801 #> 5992  999  0.245406262  1.022189189 #> 5993  999  0.265724277  1.033919801 #> 5994  999  0.265724277  1.057381024 #> 5995 1000  0.286042293  1.069111636 #> 5996 1000  0.265724277  1.057381024 #> 5997 1000  0.265724277  1.033919801 #> 5998 1000  0.286042293  1.022189189 #> 5999 1000  0.306360308  1.033919801 #> 6000 1000  0.306360308  1.057381024 #> 6001 1001  0.326678324  1.069111636 #> 6002 1001  0.306360308  1.057381024 #> 6003 1001  0.306360308  1.033919801 #> 6004 1001  0.326678324  1.022189189 #> 6005 1001  0.346996339  1.033919801 #> 6006 1001  0.346996339  1.057381024 #> 6007 1002  0.367314354  1.069111636 #> 6008 1002  0.346996339  1.057381024 #> 6009 1002  0.346996339  1.033919801 #> 6010 1002  0.367314354  1.022189189 #> 6011 1002  0.387632370  1.033919801 #> 6012 1002  0.387632370  1.057381024 #> 6013 1003  0.407950385  1.069111636 #> 6014 1003  0.387632370  1.057381024 #> 6015 1003  0.387632370  1.033919801 #> 6016 1003  0.407950385  1.022189189 #> 6017 1003  0.428268401  1.033919801 #> 6018 1003  0.428268401  1.057381024 #> 6019 1004  0.448586416  1.069111636 #> 6020 1004  0.428268401  1.057381024 #> 6021 1004  0.428268401  1.033919801 #> 6022 1004  0.448586416  1.022189189 #> 6023 1004  0.468904432  1.033919801 #> 6024 1004  0.468904432  1.057381024 #> 6025 1005  0.489222447  1.069111636 #> 6026 1005  0.468904432  1.057381024 #> 6027 1005  0.468904432  1.033919801 #> 6028 1005  0.489222447  1.022189189 #> 6029 1005  0.509540462  1.033919801 #> 6030 1005  0.509540462  1.057381024 #> 6031 1006  0.529858478  1.069111636 #> 6032 1006  0.509540462  1.057381024 #> 6033 1006  0.509540462  1.033919801 #> 6034 1006  0.529858478  1.022189189 #> 6035 1006  0.550176493  1.033919801 #> 6036 1006  0.550176493  1.057381024 #> 6037 1007  0.570494509  1.069111636 #> 6038 1007  0.550176493  1.057381024 #> 6039 1007  0.550176493  1.033919801 #> 6040 1007  0.570494509  1.022189189 #> 6041 1007  0.590812524  1.033919801 #> 6042 1007  0.590812524  1.057381024 #> 6043 1008  0.611130539  1.069111636 #> 6044 1008  0.590812524  1.057381024 #> 6045 1008  0.590812524  1.033919801 #> 6046 1008  0.611130539  1.022189189 #> 6047 1008  0.631448555  1.033919801 #> 6048 1008  0.631448555  1.057381024 #> 6049 1009  0.651766570  1.069111636 #> 6050 1009  0.631448555  1.057381024 #> 6051 1009  0.631448555  1.033919801 #> 6052 1009  0.651766570  1.022189189 #> 6053 1009  0.672084586  1.033919801 #> 6054 1009  0.672084586  1.057381024 #> 6055 1010  0.692402601  1.069111636 #> 6056 1010  0.672084586  1.057381024 #> 6057 1010  0.672084586  1.033919801 #> 6058 1010  0.692402601  1.022189189 #> 6059 1010  0.712720616  1.033919801 #> 6060 1010  0.712720616  1.057381024 #> 6061 1011  0.733038632  1.069111636 #> 6062 1011  0.712720616  1.057381024 #> 6063 1011  0.712720616  1.033919801 #> 6064 1011  0.733038632  1.022189189 #> 6065 1011  0.753356647  1.033919801 #> 6066 1011  0.753356647  1.057381024 #> 6067 1012  0.773674663  1.069111636 #> 6068 1012  0.753356647  1.057381024 #> 6069 1012  0.753356647  1.033919801 #> 6070 1012  0.773674663  1.022189189 #> 6071 1012  0.793992678  1.033919801 #> 6072 1012  0.793992678  1.057381024 #> 6073 1013  0.814310694  1.069111636 #> 6074 1013  0.793992678  1.057381024 #> 6075 1013  0.793992678  1.033919801 #> 6076 1013  0.814310694  1.022189189 #> 6077 1013  0.834628709  1.033919801 #> 6078 1013  0.834628709  1.057381024 #> 6079 1014  0.854946724  1.069111636 #> 6080 1014  0.834628709  1.057381024 #> 6081 1014  0.834628709  1.033919801 #> 6082 1014  0.854946724  1.022189189 #> 6083 1014  0.875264740  1.033919801 #> 6084 1014  0.875264740  1.057381024 #> 6085 1015  0.895582755  1.069111636 #> 6086 1015  0.875264740  1.057381024 #> 6087 1015  0.875264740  1.033919801 #> 6088 1015  0.895582755  1.022189189 #> 6089 1015  0.915900771  1.033919801 #> 6090 1015  0.915900771  1.057381024 #> 6091 1016  0.936218786  1.069111636 #> 6092 1016  0.915900771  1.057381024 #> 6093 1016  0.915900771  1.033919801 #> 6094 1016  0.936218786  1.022189189 #> 6095 1016  0.956536801  1.033919801 #> 6096 1016  0.956536801  1.057381024 #> 6097 1017  0.976854817  1.069111636 #> 6098 1017  0.956536801  1.057381024 #> 6099 1017  0.956536801  1.033919801 #> 6100 1017  0.976854817  1.022189189 #> 6101 1017  0.997172832  1.033919801 #> 6102 1017  0.997172832  1.057381024 #> 6103 1018  1.017490848  1.069111636 #> 6104 1018  0.997172832  1.057381024 #> 6105 1018  0.997172832  1.033919801 #> 6106 1018  1.017490848  1.022189189 #> 6107 1018  1.037808863  1.033919801 #> 6108 1018  1.037808863  1.057381024 #> 6109 1019  1.058126878  1.069111636 #> 6110 1019  1.037808863  1.057381024 #> 6111 1019  1.037808863  1.033919801 #> 6112 1019  1.058126878  1.022189189 #> 6113 1019  1.078444894  1.033919801 #> 6114 1019  1.078444894  1.057381024 #> 6115 1020  1.098762909  1.069111636 #> 6116 1020  1.078444894  1.057381024 #> 6117 1020  1.078444894  1.033919801 #> 6118 1020  1.098762909  1.022189189 #> 6119 1020  1.119080925  1.033919801 #> 6120 1020  1.119080925  1.057381024 #> 6121 1021 -0.100000000  1.104303471 #> 6122 1021 -0.120318015  1.092572859 #> 6123 1021 -0.120318015  1.069111636 #> 6124 1021 -0.100000000  1.057381024 #> 6125 1021 -0.079681985  1.069111636 #> 6126 1021 -0.079681985  1.092572859 #> 6127 1022 -0.059363969  1.104303471 #> 6128 1022 -0.079681985  1.092572859 #> 6129 1022 -0.079681985  1.069111636 #> 6130 1022 -0.059363969  1.057381024 #> 6131 1022 -0.039045954  1.069111636 #> 6132 1022 -0.039045954  1.092572859 #> 6133 1023 -0.018727938  1.104303471 #> 6134 1023 -0.039045954  1.092572859 #> 6135 1023 -0.039045954  1.069111636 #> 6136 1023 -0.018727938  1.057381024 #> 6137 1023  0.001590077  1.069111636 #> 6138 1023  0.001590077  1.092572859 #> 6139 1024  0.021908092  1.104303471 #> 6140 1024  0.001590077  1.092572859 #> 6141 1024  0.001590077  1.069111636 #> 6142 1024  0.021908092  1.057381024 #> 6143 1024  0.042226108  1.069111636 #> 6144 1024  0.042226108  1.092572859 #> 6145 1025  0.062544123  1.104303471 #> 6146 1025  0.042226108  1.092572859 #> 6147 1025  0.042226108  1.069111636 #> 6148 1025  0.062544123  1.057381024 #> 6149 1025  0.082862139  1.069111636 #> 6150 1025  0.082862139  1.092572859 #> 6151 1026  0.103180154  1.104303471 #> 6152 1026  0.082862139  1.092572859 #> 6153 1026  0.082862139  1.069111636 #> 6154 1026  0.103180154  1.057381024 #> 6155 1026  0.123498170  1.069111636 #> 6156 1026  0.123498170  1.092572859 #> 6157 1027  0.143816185  1.104303471 #> 6158 1027  0.123498170  1.092572859 #> 6159 1027  0.123498170  1.069111636 #> 6160 1027  0.143816185  1.057381024 #> 6161 1027  0.164134200  1.069111636 #> 6162 1027  0.164134200  1.092572859 #> 6163 1028  0.184452216  1.104303471 #> 6164 1028  0.164134200  1.092572859 #> 6165 1028  0.164134200  1.069111636 #> 6166 1028  0.184452216  1.057381024 #> 6167 1028  0.204770231  1.069111636 #> 6168 1028  0.204770231  1.092572859 #> 6169 1029  0.225088247  1.104303471 #> 6170 1029  0.204770231  1.092572859 #> 6171 1029  0.204770231  1.069111636 #> 6172 1029  0.225088247  1.057381024 #> 6173 1029  0.245406262  1.069111636 #> 6174 1029  0.245406262  1.092572859 #> 6175 1030  0.265724277  1.104303471 #> 6176 1030  0.245406262  1.092572859 #> 6177 1030  0.245406262  1.069111636 #> 6178 1030  0.265724277  1.057381024 #> 6179 1030  0.286042293  1.069111636 #> 6180 1030  0.286042293  1.092572859 #> 6181 1031  0.306360308  1.104303471 #> 6182 1031  0.286042293  1.092572859 #> 6183 1031  0.286042293  1.069111636 #> 6184 1031  0.306360308  1.057381024 #> 6185 1031  0.326678324  1.069111636 #> 6186 1031  0.326678324  1.092572859 #> 6187 1032  0.346996339  1.104303471 #> 6188 1032  0.326678324  1.092572859 #> 6189 1032  0.326678324  1.069111636 #> 6190 1032  0.346996339  1.057381024 #> 6191 1032  0.367314354  1.069111636 #> 6192 1032  0.367314354  1.092572859 #> 6193 1033  0.387632370  1.104303471 #> 6194 1033  0.367314354  1.092572859 #> 6195 1033  0.367314354  1.069111636 #> 6196 1033  0.387632370  1.057381024 #> 6197 1033  0.407950385  1.069111636 #> 6198 1033  0.407950385  1.092572859 #> 6199 1034  0.428268401  1.104303471 #> 6200 1034  0.407950385  1.092572859 #> 6201 1034  0.407950385  1.069111636 #> 6202 1034  0.428268401  1.057381024 #> 6203 1034  0.448586416  1.069111636 #> 6204 1034  0.448586416  1.092572859 #> 6205 1035  0.468904432  1.104303471 #> 6206 1035  0.448586416  1.092572859 #> 6207 1035  0.448586416  1.069111636 #> 6208 1035  0.468904432  1.057381024 #> 6209 1035  0.489222447  1.069111636 #> 6210 1035  0.489222447  1.092572859 #> 6211 1036  0.509540462  1.104303471 #> 6212 1036  0.489222447  1.092572859 #> 6213 1036  0.489222447  1.069111636 #> 6214 1036  0.509540462  1.057381024 #> 6215 1036  0.529858478  1.069111636 #> 6216 1036  0.529858478  1.092572859 #> 6217 1037  0.550176493  1.104303471 #> 6218 1037  0.529858478  1.092572859 #> 6219 1037  0.529858478  1.069111636 #> 6220 1037  0.550176493  1.057381024 #> 6221 1037  0.570494509  1.069111636 #> 6222 1037  0.570494509  1.092572859 #> 6223 1038  0.590812524  1.104303471 #> 6224 1038  0.570494509  1.092572859 #> 6225 1038  0.570494509  1.069111636 #> 6226 1038  0.590812524  1.057381024 #> 6227 1038  0.611130539  1.069111636 #> 6228 1038  0.611130539  1.092572859 #> 6229 1039  0.631448555  1.104303471 #> 6230 1039  0.611130539  1.092572859 #> 6231 1039  0.611130539  1.069111636 #> 6232 1039  0.631448555  1.057381024 #> 6233 1039  0.651766570  1.069111636 #> 6234 1039  0.651766570  1.092572859 #> 6235 1040  0.672084586  1.104303471 #> 6236 1040  0.651766570  1.092572859 #> 6237 1040  0.651766570  1.069111636 #> 6238 1040  0.672084586  1.057381024 #> 6239 1040  0.692402601  1.069111636 #> 6240 1040  0.692402601  1.092572859 #> 6241 1041  0.712720616  1.104303471 #> 6242 1041  0.692402601  1.092572859 #> 6243 1041  0.692402601  1.069111636 #> 6244 1041  0.712720616  1.057381024 #> 6245 1041  0.733038632  1.069111636 #> 6246 1041  0.733038632  1.092572859 #> 6247 1042  0.753356647  1.104303471 #> 6248 1042  0.733038632  1.092572859 #> 6249 1042  0.733038632  1.069111636 #> 6250 1042  0.753356647  1.057381024 #> 6251 1042  0.773674663  1.069111636 #> 6252 1042  0.773674663  1.092572859 #> 6253 1043  0.793992678  1.104303471 #> 6254 1043  0.773674663  1.092572859 #> 6255 1043  0.773674663  1.069111636 #> 6256 1043  0.793992678  1.057381024 #> 6257 1043  0.814310694  1.069111636 #> 6258 1043  0.814310694  1.092572859 #> 6259 1044  0.834628709  1.104303471 #> 6260 1044  0.814310694  1.092572859 #> 6261 1044  0.814310694  1.069111636 #> 6262 1044  0.834628709  1.057381024 #> 6263 1044  0.854946724  1.069111636 #> 6264 1044  0.854946724  1.092572859 #> 6265 1045  0.875264740  1.104303471 #> 6266 1045  0.854946724  1.092572859 #> 6267 1045  0.854946724  1.069111636 #> 6268 1045  0.875264740  1.057381024 #> 6269 1045  0.895582755  1.069111636 #> 6270 1045  0.895582755  1.092572859 #> 6271 1046  0.915900771  1.104303471 #> 6272 1046  0.895582755  1.092572859 #> 6273 1046  0.895582755  1.069111636 #> 6274 1046  0.915900771  1.057381024 #> 6275 1046  0.936218786  1.069111636 #> 6276 1046  0.936218786  1.092572859 #> 6277 1047  0.956536801  1.104303471 #> 6278 1047  0.936218786  1.092572859 #> 6279 1047  0.936218786  1.069111636 #> 6280 1047  0.956536801  1.057381024 #> 6281 1047  0.976854817  1.069111636 #> 6282 1047  0.976854817  1.092572859 #> 6283 1048  0.997172832  1.104303471 #> 6284 1048  0.976854817  1.092572859 #> 6285 1048  0.976854817  1.069111636 #> 6286 1048  0.997172832  1.057381024 #> 6287 1048  1.017490848  1.069111636 #> 6288 1048  1.017490848  1.092572859 #> 6289 1049  1.037808863  1.104303471 #> 6290 1049  1.017490848  1.092572859 #> 6291 1049  1.017490848  1.069111636 #> 6292 1049  1.037808863  1.057381024 #> 6293 1049  1.058126878  1.069111636 #> 6294 1049  1.058126878  1.092572859 #> 6295 1050  1.078444894  1.104303471 #> 6296 1050  1.058126878  1.092572859 #> 6297 1050  1.058126878  1.069111636 #> 6298 1050  1.078444894  1.057381024 #> 6299 1050  1.098762909  1.069111636 #> 6300 1050  1.098762909  1.092572859 #> 6301 1051 -0.079681985  1.139495306 #> 6302 1051 -0.100000000  1.127764694 #> 6303 1051 -0.100000000  1.104303471 #> 6304 1051 -0.079681985  1.092572859 #> 6305 1051 -0.059363969  1.104303471 #> 6306 1051 -0.059363969  1.127764694 #> 6307 1052 -0.039045954  1.139495306 #> 6308 1052 -0.059363969  1.127764694 #> 6309 1052 -0.059363969  1.104303471 #> 6310 1052 -0.039045954  1.092572859 #> 6311 1052 -0.018727938  1.104303471 #> 6312 1052 -0.018727938  1.127764694 #> 6313 1053  0.001590077  1.139495306 #> 6314 1053 -0.018727938  1.127764694 #> 6315 1053 -0.018727938  1.104303471 #> 6316 1053  0.001590077  1.092572859 #> 6317 1053  0.021908092  1.104303471 #> 6318 1053  0.021908092  1.127764694 #> 6319 1054  0.042226108  1.139495306 #> 6320 1054  0.021908092  1.127764694 #> 6321 1054  0.021908092  1.104303471 #> 6322 1054  0.042226108  1.092572859 #> 6323 1054  0.062544123  1.104303471 #> 6324 1054  0.062544123  1.127764694 #> 6325 1055  0.082862139  1.139495306 #> 6326 1055  0.062544123  1.127764694 #> 6327 1055  0.062544123  1.104303471 #> 6328 1055  0.082862139  1.092572859 #> 6329 1055  0.103180154  1.104303471 #> 6330 1055  0.103180154  1.127764694 #> 6331 1056  0.123498170  1.139495306 #> 6332 1056  0.103180154  1.127764694 #> 6333 1056  0.103180154  1.104303471 #> 6334 1056  0.123498170  1.092572859 #> 6335 1056  0.143816185  1.104303471 #> 6336 1056  0.143816185  1.127764694 #> 6337 1057  0.164134200  1.139495306 #> 6338 1057  0.143816185  1.127764694 #> 6339 1057  0.143816185  1.104303471 #> 6340 1057  0.164134200  1.092572859 #> 6341 1057  0.184452216  1.104303471 #> 6342 1057  0.184452216  1.127764694 #> 6343 1058  0.204770231  1.139495306 #> 6344 1058  0.184452216  1.127764694 #> 6345 1058  0.184452216  1.104303471 #> 6346 1058  0.204770231  1.092572859 #> 6347 1058  0.225088247  1.104303471 #> 6348 1058  0.225088247  1.127764694 #> 6349 1059  0.245406262  1.139495306 #> 6350 1059  0.225088247  1.127764694 #> 6351 1059  0.225088247  1.104303471 #> 6352 1059  0.245406262  1.092572859 #> 6353 1059  0.265724277  1.104303471 #> 6354 1059  0.265724277  1.127764694 #> 6355 1060  0.286042293  1.139495306 #> 6356 1060  0.265724277  1.127764694 #> 6357 1060  0.265724277  1.104303471 #> 6358 1060  0.286042293  1.092572859 #> 6359 1060  0.306360308  1.104303471 #> 6360 1060  0.306360308  1.127764694 #> 6361 1061  0.326678324  1.139495306 #> 6362 1061  0.306360308  1.127764694 #> 6363 1061  0.306360308  1.104303471 #> 6364 1061  0.326678324  1.092572859 #> 6365 1061  0.346996339  1.104303471 #> 6366 1061  0.346996339  1.127764694 #> 6367 1062  0.367314354  1.139495306 #> 6368 1062  0.346996339  1.127764694 #> 6369 1062  0.346996339  1.104303471 #> 6370 1062  0.367314354  1.092572859 #> 6371 1062  0.387632370  1.104303471 #> 6372 1062  0.387632370  1.127764694 #> 6373 1063  0.407950385  1.139495306 #> 6374 1063  0.387632370  1.127764694 #> 6375 1063  0.387632370  1.104303471 #> 6376 1063  0.407950385  1.092572859 #> 6377 1063  0.428268401  1.104303471 #> 6378 1063  0.428268401  1.127764694 #> 6379 1064  0.448586416  1.139495306 #> 6380 1064  0.428268401  1.127764694 #> 6381 1064  0.428268401  1.104303471 #> 6382 1064  0.448586416  1.092572859 #> 6383 1064  0.468904432  1.104303471 #> 6384 1064  0.468904432  1.127764694 #> 6385 1065  0.489222447  1.139495306 #> 6386 1065  0.468904432  1.127764694 #> 6387 1065  0.468904432  1.104303471 #> 6388 1065  0.489222447  1.092572859 #> 6389 1065  0.509540462  1.104303471 #> 6390 1065  0.509540462  1.127764694 #> 6391 1066  0.529858478  1.139495306 #> 6392 1066  0.509540462  1.127764694 #> 6393 1066  0.509540462  1.104303471 #> 6394 1066  0.529858478  1.092572859 #> 6395 1066  0.550176493  1.104303471 #> 6396 1066  0.550176493  1.127764694 #> 6397 1067  0.570494509  1.139495306 #> 6398 1067  0.550176493  1.127764694 #> 6399 1067  0.550176493  1.104303471 #> 6400 1067  0.570494509  1.092572859 #> 6401 1067  0.590812524  1.104303471 #> 6402 1067  0.590812524  1.127764694 #> 6403 1068  0.611130539  1.139495306 #> 6404 1068  0.590812524  1.127764694 #> 6405 1068  0.590812524  1.104303471 #> 6406 1068  0.611130539  1.092572859 #> 6407 1068  0.631448555  1.104303471 #> 6408 1068  0.631448555  1.127764694 #> 6409 1069  0.651766570  1.139495306 #> 6410 1069  0.631448555  1.127764694 #> 6411 1069  0.631448555  1.104303471 #> 6412 1069  0.651766570  1.092572859 #> 6413 1069  0.672084586  1.104303471 #> 6414 1069  0.672084586  1.127764694 #> 6415 1070  0.692402601  1.139495306 #> 6416 1070  0.672084586  1.127764694 #> 6417 1070  0.672084586  1.104303471 #> 6418 1070  0.692402601  1.092572859 #> 6419 1070  0.712720616  1.104303471 #> 6420 1070  0.712720616  1.127764694 #> 6421 1071  0.733038632  1.139495306 #> 6422 1071  0.712720616  1.127764694 #> 6423 1071  0.712720616  1.104303471 #> 6424 1071  0.733038632  1.092572859 #> 6425 1071  0.753356647  1.104303471 #> 6426 1071  0.753356647  1.127764694 #> 6427 1072  0.773674663  1.139495306 #> 6428 1072  0.753356647  1.127764694 #> 6429 1072  0.753356647  1.104303471 #> 6430 1072  0.773674663  1.092572859 #> 6431 1072  0.793992678  1.104303471 #> 6432 1072  0.793992678  1.127764694 #> 6433 1073  0.814310694  1.139495306 #> 6434 1073  0.793992678  1.127764694 #> 6435 1073  0.793992678  1.104303471 #> 6436 1073  0.814310694  1.092572859 #> 6437 1073  0.834628709  1.104303471 #> 6438 1073  0.834628709  1.127764694 #> 6439 1074  0.854946724  1.139495306 #> 6440 1074  0.834628709  1.127764694 #> 6441 1074  0.834628709  1.104303471 #> 6442 1074  0.854946724  1.092572859 #> 6443 1074  0.875264740  1.104303471 #> 6444 1074  0.875264740  1.127764694 #> 6445 1075  0.895582755  1.139495306 #> 6446 1075  0.875264740  1.127764694 #> 6447 1075  0.875264740  1.104303471 #> 6448 1075  0.895582755  1.092572859 #> 6449 1075  0.915900771  1.104303471 #> 6450 1075  0.915900771  1.127764694 #> 6451 1076  0.936218786  1.139495306 #> 6452 1076  0.915900771  1.127764694 #> 6453 1076  0.915900771  1.104303471 #> 6454 1076  0.936218786  1.092572859 #> 6455 1076  0.956536801  1.104303471 #> 6456 1076  0.956536801  1.127764694 #> 6457 1077  0.976854817  1.139495306 #> 6458 1077  0.956536801  1.127764694 #> 6459 1077  0.956536801  1.104303471 #> 6460 1077  0.976854817  1.092572859 #> 6461 1077  0.997172832  1.104303471 #> 6462 1077  0.997172832  1.127764694 #> 6463 1078  1.017490848  1.139495306 #> 6464 1078  0.997172832  1.127764694 #> 6465 1078  0.997172832  1.104303471 #> 6466 1078  1.017490848  1.092572859 #> 6467 1078  1.037808863  1.104303471 #> 6468 1078  1.037808863  1.127764694 #> 6469 1079  1.058126878  1.139495306 #> 6470 1079  1.037808863  1.127764694 #> 6471 1079  1.037808863  1.104303471 #> 6472 1079  1.058126878  1.092572859 #> 6473 1079  1.078444894  1.104303471 #> 6474 1079  1.078444894  1.127764694 #> 6475 1080  1.098762909  1.139495306 #> 6476 1080  1.078444894  1.127764694 #> 6477 1080  1.078444894  1.104303471 #> 6478 1080  1.098762909  1.092572859 #> 6479 1080  1.119080925  1.104303471 #> 6480 1080  1.119080925  1.127764694 #> 6481 1081 -0.100000000  1.174687141 #> 6482 1081 -0.120318015  1.162956529 #> 6483 1081 -0.120318015  1.139495306 #> 6484 1081 -0.100000000  1.127764694 #> 6485 1081 -0.079681985  1.139495306 #> 6486 1081 -0.079681985  1.162956529 #> 6487 1082 -0.059363969  1.174687141 #> 6488 1082 -0.079681985  1.162956529 #> 6489 1082 -0.079681985  1.139495306 #> 6490 1082 -0.059363969  1.127764694 #> 6491 1082 -0.039045954  1.139495306 #> 6492 1082 -0.039045954  1.162956529 #> 6493 1083 -0.018727938  1.174687141 #> 6494 1083 -0.039045954  1.162956529 #> 6495 1083 -0.039045954  1.139495306 #> 6496 1083 -0.018727938  1.127764694 #> 6497 1083  0.001590077  1.139495306 #> 6498 1083  0.001590077  1.162956529 #> 6499 1084  0.021908092  1.174687141 #> 6500 1084  0.001590077  1.162956529 #> 6501 1084  0.001590077  1.139495306 #> 6502 1084  0.021908092  1.127764694 #> 6503 1084  0.042226108  1.139495306 #> 6504 1084  0.042226108  1.162956529 #> 6505 1085  0.062544123  1.174687141 #> 6506 1085  0.042226108  1.162956529 #> 6507 1085  0.042226108  1.139495306 #> 6508 1085  0.062544123  1.127764694 #> 6509 1085  0.082862139  1.139495306 #> 6510 1085  0.082862139  1.162956529 #> 6511 1086  0.103180154  1.174687141 #> 6512 1086  0.082862139  1.162956529 #> 6513 1086  0.082862139  1.139495306 #> 6514 1086  0.103180154  1.127764694 #> 6515 1086  0.123498170  1.139495306 #> 6516 1086  0.123498170  1.162956529 #> 6517 1087  0.143816185  1.174687141 #> 6518 1087  0.123498170  1.162956529 #> 6519 1087  0.123498170  1.139495306 #> 6520 1087  0.143816185  1.127764694 #> 6521 1087  0.164134200  1.139495306 #> 6522 1087  0.164134200  1.162956529 #> 6523 1088  0.184452216  1.174687141 #> 6524 1088  0.164134200  1.162956529 #> 6525 1088  0.164134200  1.139495306 #> 6526 1088  0.184452216  1.127764694 #> 6527 1088  0.204770231  1.139495306 #> 6528 1088  0.204770231  1.162956529 #> 6529 1089  0.225088247  1.174687141 #> 6530 1089  0.204770231  1.162956529 #> 6531 1089  0.204770231  1.139495306 #> 6532 1089  0.225088247  1.127764694 #> 6533 1089  0.245406262  1.139495306 #> 6534 1089  0.245406262  1.162956529 #> 6535 1090  0.265724277  1.174687141 #> 6536 1090  0.245406262  1.162956529 #> 6537 1090  0.245406262  1.139495306 #> 6538 1090  0.265724277  1.127764694 #> 6539 1090  0.286042293  1.139495306 #> 6540 1090  0.286042293  1.162956529 #> 6541 1091  0.306360308  1.174687141 #> 6542 1091  0.286042293  1.162956529 #> 6543 1091  0.286042293  1.139495306 #> 6544 1091  0.306360308  1.127764694 #> 6545 1091  0.326678324  1.139495306 #> 6546 1091  0.326678324  1.162956529 #> 6547 1092  0.346996339  1.174687141 #> 6548 1092  0.326678324  1.162956529 #> 6549 1092  0.326678324  1.139495306 #> 6550 1092  0.346996339  1.127764694 #> 6551 1092  0.367314354  1.139495306 #> 6552 1092  0.367314354  1.162956529 #> 6553 1093  0.387632370  1.174687141 #> 6554 1093  0.367314354  1.162956529 #> 6555 1093  0.367314354  1.139495306 #> 6556 1093  0.387632370  1.127764694 #> 6557 1093  0.407950385  1.139495306 #> 6558 1093  0.407950385  1.162956529 #> 6559 1094  0.428268401  1.174687141 #> 6560 1094  0.407950385  1.162956529 #> 6561 1094  0.407950385  1.139495306 #> 6562 1094  0.428268401  1.127764694 #> 6563 1094  0.448586416  1.139495306 #> 6564 1094  0.448586416  1.162956529 #> 6565 1095  0.468904432  1.174687141 #> 6566 1095  0.448586416  1.162956529 #> 6567 1095  0.448586416  1.139495306 #> 6568 1095  0.468904432  1.127764694 #> 6569 1095  0.489222447  1.139495306 #> 6570 1095  0.489222447  1.162956529 #> 6571 1096  0.509540462  1.174687141 #> 6572 1096  0.489222447  1.162956529 #> 6573 1096  0.489222447  1.139495306 #> 6574 1096  0.509540462  1.127764694 #> 6575 1096  0.529858478  1.139495306 #> 6576 1096  0.529858478  1.162956529 #> 6577 1097  0.550176493  1.174687141 #> 6578 1097  0.529858478  1.162956529 #> 6579 1097  0.529858478  1.139495306 #> 6580 1097  0.550176493  1.127764694 #> 6581 1097  0.570494509  1.139495306 #> 6582 1097  0.570494509  1.162956529 #> 6583 1098  0.590812524  1.174687141 #> 6584 1098  0.570494509  1.162956529 #> 6585 1098  0.570494509  1.139495306 #> 6586 1098  0.590812524  1.127764694 #> 6587 1098  0.611130539  1.139495306 #> 6588 1098  0.611130539  1.162956529 #> 6589 1099  0.631448555  1.174687141 #> 6590 1099  0.611130539  1.162956529 #> 6591 1099  0.611130539  1.139495306 #> 6592 1099  0.631448555  1.127764694 #> 6593 1099  0.651766570  1.139495306 #> 6594 1099  0.651766570  1.162956529 #> 6595 1100  0.672084586  1.174687141 #> 6596 1100  0.651766570  1.162956529 #> 6597 1100  0.651766570  1.139495306 #> 6598 1100  0.672084586  1.127764694 #> 6599 1100  0.692402601  1.139495306 #> 6600 1100  0.692402601  1.162956529 #> 6601 1101  0.712720616  1.174687141 #> 6602 1101  0.692402601  1.162956529 #> 6603 1101  0.692402601  1.139495306 #> 6604 1101  0.712720616  1.127764694 #> 6605 1101  0.733038632  1.139495306 #> 6606 1101  0.733038632  1.162956529 #> 6607 1102  0.753356647  1.174687141 #> 6608 1102  0.733038632  1.162956529 #> 6609 1102  0.733038632  1.139495306 #> 6610 1102  0.753356647  1.127764694 #> 6611 1102  0.773674663  1.139495306 #> 6612 1102  0.773674663  1.162956529 #> 6613 1103  0.793992678  1.174687141 #> 6614 1103  0.773674663  1.162956529 #> 6615 1103  0.773674663  1.139495306 #> 6616 1103  0.793992678  1.127764694 #> 6617 1103  0.814310694  1.139495306 #> 6618 1103  0.814310694  1.162956529 #> 6619 1104  0.834628709  1.174687141 #> 6620 1104  0.814310694  1.162956529 #> 6621 1104  0.814310694  1.139495306 #> 6622 1104  0.834628709  1.127764694 #> 6623 1104  0.854946724  1.139495306 #> 6624 1104  0.854946724  1.162956529 #> 6625 1105  0.875264740  1.174687141 #> 6626 1105  0.854946724  1.162956529 #> 6627 1105  0.854946724  1.139495306 #> 6628 1105  0.875264740  1.127764694 #> 6629 1105  0.895582755  1.139495306 #> 6630 1105  0.895582755  1.162956529 #> 6631 1106  0.915900771  1.174687141 #> 6632 1106  0.895582755  1.162956529 #> 6633 1106  0.895582755  1.139495306 #> 6634 1106  0.915900771  1.127764694 #> 6635 1106  0.936218786  1.139495306 #> 6636 1106  0.936218786  1.162956529 #> 6637 1107  0.956536801  1.174687141 #> 6638 1107  0.936218786  1.162956529 #> 6639 1107  0.936218786  1.139495306 #> 6640 1107  0.956536801  1.127764694 #> 6641 1107  0.976854817  1.139495306 #> 6642 1107  0.976854817  1.162956529 #> 6643 1108  0.997172832  1.174687141 #> 6644 1108  0.976854817  1.162956529 #> 6645 1108  0.976854817  1.139495306 #> 6646 1108  0.997172832  1.127764694 #> 6647 1108  1.017490848  1.139495306 #> 6648 1108  1.017490848  1.162956529 #> 6649 1109  1.037808863  1.174687141 #> 6650 1109  1.017490848  1.162956529 #> 6651 1109  1.017490848  1.139495306 #> 6652 1109  1.037808863  1.127764694 #> 6653 1109  1.058126878  1.139495306 #> 6654 1109  1.058126878  1.162956529 #> 6655 1110  1.078444894  1.174687141 #> 6656 1110  1.058126878  1.162956529 #> 6657 1110  1.058126878  1.139495306 #> 6658 1110  1.078444894  1.127764694 #> 6659 1110  1.098762909  1.139495306 #> 6660 1110  1.098762909  1.162956529 #> 6661 1111 -0.079681985  1.209878976 #> 6662 1111 -0.100000000  1.198148364 #> 6663 1111 -0.100000000  1.174687141 #> 6664 1111 -0.079681985  1.162956529 #> 6665 1111 -0.059363969  1.174687141 #> 6666 1111 -0.059363969  1.198148364 #> 6667 1112 -0.039045954  1.209878976 #> 6668 1112 -0.059363969  1.198148364 #> 6669 1112 -0.059363969  1.174687141 #> 6670 1112 -0.039045954  1.162956529 #> 6671 1112 -0.018727938  1.174687141 #> 6672 1112 -0.018727938  1.198148364 #> 6673 1113  0.001590077  1.209878976 #> 6674 1113 -0.018727938  1.198148364 #> 6675 1113 -0.018727938  1.174687141 #> 6676 1113  0.001590077  1.162956529 #> 6677 1113  0.021908092  1.174687141 #> 6678 1113  0.021908092  1.198148364 #> 6679 1114  0.042226108  1.209878976 #> 6680 1114  0.021908092  1.198148364 #> 6681 1114  0.021908092  1.174687141 #> 6682 1114  0.042226108  1.162956529 #> 6683 1114  0.062544123  1.174687141 #> 6684 1114  0.062544123  1.198148364 #> 6685 1115  0.082862139  1.209878976 #> 6686 1115  0.062544123  1.198148364 #> 6687 1115  0.062544123  1.174687141 #> 6688 1115  0.082862139  1.162956529 #> 6689 1115  0.103180154  1.174687141 #> 6690 1115  0.103180154  1.198148364 #> 6691 1116  0.123498170  1.209878976 #> 6692 1116  0.103180154  1.198148364 #> 6693 1116  0.103180154  1.174687141 #> 6694 1116  0.123498170  1.162956529 #> 6695 1116  0.143816185  1.174687141 #> 6696 1116  0.143816185  1.198148364 #> 6697 1117  0.164134200  1.209878976 #> 6698 1117  0.143816185  1.198148364 #> 6699 1117  0.143816185  1.174687141 #> 6700 1117  0.164134200  1.162956529 #> 6701 1117  0.184452216  1.174687141 #> 6702 1117  0.184452216  1.198148364 #> 6703 1118  0.204770231  1.209878976 #> 6704 1118  0.184452216  1.198148364 #> 6705 1118  0.184452216  1.174687141 #> 6706 1118  0.204770231  1.162956529 #> 6707 1118  0.225088247  1.174687141 #> 6708 1118  0.225088247  1.198148364 #> 6709 1119  0.245406262  1.209878976 #> 6710 1119  0.225088247  1.198148364 #> 6711 1119  0.225088247  1.174687141 #> 6712 1119  0.245406262  1.162956529 #> 6713 1119  0.265724277  1.174687141 #> 6714 1119  0.265724277  1.198148364 #> 6715 1120  0.286042293  1.209878976 #> 6716 1120  0.265724277  1.198148364 #> 6717 1120  0.265724277  1.174687141 #> 6718 1120  0.286042293  1.162956529 #> 6719 1120  0.306360308  1.174687141 #> 6720 1120  0.306360308  1.198148364 #> 6721 1121  0.326678324  1.209878976 #> 6722 1121  0.306360308  1.198148364 #> 6723 1121  0.306360308  1.174687141 #> 6724 1121  0.326678324  1.162956529 #> 6725 1121  0.346996339  1.174687141 #> 6726 1121  0.346996339  1.198148364 #> 6727 1122  0.367314354  1.209878976 #> 6728 1122  0.346996339  1.198148364 #> 6729 1122  0.346996339  1.174687141 #> 6730 1122  0.367314354  1.162956529 #> 6731 1122  0.387632370  1.174687141 #> 6732 1122  0.387632370  1.198148364 #> 6733 1123  0.407950385  1.209878976 #> 6734 1123  0.387632370  1.198148364 #> 6735 1123  0.387632370  1.174687141 #> 6736 1123  0.407950385  1.162956529 #> 6737 1123  0.428268401  1.174687141 #> 6738 1123  0.428268401  1.198148364 #> 6739 1124  0.448586416  1.209878976 #> 6740 1124  0.428268401  1.198148364 #> 6741 1124  0.428268401  1.174687141 #> 6742 1124  0.448586416  1.162956529 #> 6743 1124  0.468904432  1.174687141 #> 6744 1124  0.468904432  1.198148364 #> 6745 1125  0.489222447  1.209878976 #> 6746 1125  0.468904432  1.198148364 #> 6747 1125  0.468904432  1.174687141 #> 6748 1125  0.489222447  1.162956529 #> 6749 1125  0.509540462  1.174687141 #> 6750 1125  0.509540462  1.198148364 #> 6751 1126  0.529858478  1.209878976 #> 6752 1126  0.509540462  1.198148364 #> 6753 1126  0.509540462  1.174687141 #> 6754 1126  0.529858478  1.162956529 #> 6755 1126  0.550176493  1.174687141 #> 6756 1126  0.550176493  1.198148364 #> 6757 1127  0.570494509  1.209878976 #> 6758 1127  0.550176493  1.198148364 #> 6759 1127  0.550176493  1.174687141 #> 6760 1127  0.570494509  1.162956529 #> 6761 1127  0.590812524  1.174687141 #> 6762 1127  0.590812524  1.198148364 #> 6763 1128  0.611130539  1.209878976 #> 6764 1128  0.590812524  1.198148364 #> 6765 1128  0.590812524  1.174687141 #> 6766 1128  0.611130539  1.162956529 #> 6767 1128  0.631448555  1.174687141 #> 6768 1128  0.631448555  1.198148364 #> 6769 1129  0.651766570  1.209878976 #> 6770 1129  0.631448555  1.198148364 #> 6771 1129  0.631448555  1.174687141 #> 6772 1129  0.651766570  1.162956529 #> 6773 1129  0.672084586  1.174687141 #> 6774 1129  0.672084586  1.198148364 #> 6775 1130  0.692402601  1.209878976 #> 6776 1130  0.672084586  1.198148364 #> 6777 1130  0.672084586  1.174687141 #> 6778 1130  0.692402601  1.162956529 #> 6779 1130  0.712720616  1.174687141 #> 6780 1130  0.712720616  1.198148364 #> 6781 1131  0.733038632  1.209878976 #> 6782 1131  0.712720616  1.198148364 #> 6783 1131  0.712720616  1.174687141 #> 6784 1131  0.733038632  1.162956529 #> 6785 1131  0.753356647  1.174687141 #> 6786 1131  0.753356647  1.198148364 #> 6787 1132  0.773674663  1.209878976 #> 6788 1132  0.753356647  1.198148364 #> 6789 1132  0.753356647  1.174687141 #> 6790 1132  0.773674663  1.162956529 #> 6791 1132  0.793992678  1.174687141 #> 6792 1132  0.793992678  1.198148364 #> 6793 1133  0.814310694  1.209878976 #> 6794 1133  0.793992678  1.198148364 #> 6795 1133  0.793992678  1.174687141 #> 6796 1133  0.814310694  1.162956529 #> 6797 1133  0.834628709  1.174687141 #> 6798 1133  0.834628709  1.198148364 #> 6799 1134  0.854946724  1.209878976 #> 6800 1134  0.834628709  1.198148364 #> 6801 1134  0.834628709  1.174687141 #> 6802 1134  0.854946724  1.162956529 #> 6803 1134  0.875264740  1.174687141 #> 6804 1134  0.875264740  1.198148364 #> 6805 1135  0.895582755  1.209878976 #> 6806 1135  0.875264740  1.198148364 #> 6807 1135  0.875264740  1.174687141 #> 6808 1135  0.895582755  1.162956529 #> 6809 1135  0.915900771  1.174687141 #> 6810 1135  0.915900771  1.198148364 #> 6811 1136  0.936218786  1.209878976 #> 6812 1136  0.915900771  1.198148364 #> 6813 1136  0.915900771  1.174687141 #> 6814 1136  0.936218786  1.162956529 #> 6815 1136  0.956536801  1.174687141 #> 6816 1136  0.956536801  1.198148364 #> 6817 1137  0.976854817  1.209878976 #> 6818 1137  0.956536801  1.198148364 #> 6819 1137  0.956536801  1.174687141 #> 6820 1137  0.976854817  1.162956529 #> 6821 1137  0.997172832  1.174687141 #> 6822 1137  0.997172832  1.198148364 #> 6823 1138  1.017490848  1.209878976 #> 6824 1138  0.997172832  1.198148364 #> 6825 1138  0.997172832  1.174687141 #> 6826 1138  1.017490848  1.162956529 #> 6827 1138  1.037808863  1.174687141 #> 6828 1138  1.037808863  1.198148364 #> 6829 1139  1.058126878  1.209878976 #> 6830 1139  1.037808863  1.198148364 #> 6831 1139  1.037808863  1.174687141 #> 6832 1139  1.058126878  1.162956529 #> 6833 1139  1.078444894  1.174687141 #> 6834 1139  1.078444894  1.198148364 #> 6835 1140  1.098762909  1.209878976 #> 6836 1140  1.078444894  1.198148364 #> 6837 1140  1.078444894  1.174687141 #> 6838 1140  1.098762909  1.162956529 #> 6839 1140  1.119080925  1.174687141 #> 6840 1140  1.119080925  1.198148364 #> 6841 1141 -0.100000000  1.245070811 #> 6842 1141 -0.120318015  1.233340199 #> 6843 1141 -0.120318015  1.209878976 #> 6844 1141 -0.100000000  1.198148364 #> 6845 1141 -0.079681985  1.209878976 #> 6846 1141 -0.079681985  1.233340199 #> 6847 1142 -0.059363969  1.245070811 #> 6848 1142 -0.079681985  1.233340199 #> 6849 1142 -0.079681985  1.209878976 #> 6850 1142 -0.059363969  1.198148364 #> 6851 1142 -0.039045954  1.209878976 #> 6852 1142 -0.039045954  1.233340199 #> 6853 1143 -0.018727938  1.245070811 #> 6854 1143 -0.039045954  1.233340199 #> 6855 1143 -0.039045954  1.209878976 #> 6856 1143 -0.018727938  1.198148364 #> 6857 1143  0.001590077  1.209878976 #> 6858 1143  0.001590077  1.233340199 #> 6859 1144  0.021908092  1.245070811 #> 6860 1144  0.001590077  1.233340199 #> 6861 1144  0.001590077  1.209878976 #> 6862 1144  0.021908092  1.198148364 #> 6863 1144  0.042226108  1.209878976 #> 6864 1144  0.042226108  1.233340199 #> 6865 1145  0.062544123  1.245070811 #> 6866 1145  0.042226108  1.233340199 #> 6867 1145  0.042226108  1.209878976 #> 6868 1145  0.062544123  1.198148364 #> 6869 1145  0.082862139  1.209878976 #> 6870 1145  0.082862139  1.233340199 #> 6871 1146  0.103180154  1.245070811 #> 6872 1146  0.082862139  1.233340199 #> 6873 1146  0.082862139  1.209878976 #> 6874 1146  0.103180154  1.198148364 #> 6875 1146  0.123498170  1.209878976 #> 6876 1146  0.123498170  1.233340199 #> 6877 1147  0.143816185  1.245070811 #> 6878 1147  0.123498170  1.233340199 #> 6879 1147  0.123498170  1.209878976 #> 6880 1147  0.143816185  1.198148364 #> 6881 1147  0.164134200  1.209878976 #> 6882 1147  0.164134200  1.233340199 #> 6883 1148  0.184452216  1.245070811 #> 6884 1148  0.164134200  1.233340199 #> 6885 1148  0.164134200  1.209878976 #> 6886 1148  0.184452216  1.198148364 #> 6887 1148  0.204770231  1.209878976 #> 6888 1148  0.204770231  1.233340199 #> 6889 1149  0.225088247  1.245070811 #> 6890 1149  0.204770231  1.233340199 #> 6891 1149  0.204770231  1.209878976 #> 6892 1149  0.225088247  1.198148364 #> 6893 1149  0.245406262  1.209878976 #> 6894 1149  0.245406262  1.233340199 #> 6895 1150  0.265724277  1.245070811 #> 6896 1150  0.245406262  1.233340199 #> 6897 1150  0.245406262  1.209878976 #> 6898 1150  0.265724277  1.198148364 #> 6899 1150  0.286042293  1.209878976 #> 6900 1150  0.286042293  1.233340199 #> 6901 1151  0.306360308  1.245070811 #> 6902 1151  0.286042293  1.233340199 #> 6903 1151  0.286042293  1.209878976 #> 6904 1151  0.306360308  1.198148364 #> 6905 1151  0.326678324  1.209878976 #> 6906 1151  0.326678324  1.233340199 #> 6907 1152  0.346996339  1.245070811 #> 6908 1152  0.326678324  1.233340199 #> 6909 1152  0.326678324  1.209878976 #> 6910 1152  0.346996339  1.198148364 #> 6911 1152  0.367314354  1.209878976 #> 6912 1152  0.367314354  1.233340199 #> 6913 1153  0.387632370  1.245070811 #> 6914 1153  0.367314354  1.233340199 #> 6915 1153  0.367314354  1.209878976 #> 6916 1153  0.387632370  1.198148364 #> 6917 1153  0.407950385  1.209878976 #> 6918 1153  0.407950385  1.233340199 #> 6919 1154  0.428268401  1.245070811 #> 6920 1154  0.407950385  1.233340199 #> 6921 1154  0.407950385  1.209878976 #> 6922 1154  0.428268401  1.198148364 #> 6923 1154  0.448586416  1.209878976 #> 6924 1154  0.448586416  1.233340199 #> 6925 1155  0.468904432  1.245070811 #> 6926 1155  0.448586416  1.233340199 #> 6927 1155  0.448586416  1.209878976 #> 6928 1155  0.468904432  1.198148364 #> 6929 1155  0.489222447  1.209878976 #> 6930 1155  0.489222447  1.233340199 #> 6931 1156  0.509540462  1.245070811 #> 6932 1156  0.489222447  1.233340199 #> 6933 1156  0.489222447  1.209878976 #> 6934 1156  0.509540462  1.198148364 #> 6935 1156  0.529858478  1.209878976 #> 6936 1156  0.529858478  1.233340199 #> 6937 1157  0.550176493  1.245070811 #> 6938 1157  0.529858478  1.233340199 #> 6939 1157  0.529858478  1.209878976 #> 6940 1157  0.550176493  1.198148364 #> 6941 1157  0.570494509  1.209878976 #> 6942 1157  0.570494509  1.233340199 #> 6943 1158  0.590812524  1.245070811 #> 6944 1158  0.570494509  1.233340199 #> 6945 1158  0.570494509  1.209878976 #> 6946 1158  0.590812524  1.198148364 #> 6947 1158  0.611130539  1.209878976 #> 6948 1158  0.611130539  1.233340199 #> 6949 1159  0.631448555  1.245070811 #> 6950 1159  0.611130539  1.233340199 #> 6951 1159  0.611130539  1.209878976 #> 6952 1159  0.631448555  1.198148364 #> 6953 1159  0.651766570  1.209878976 #> 6954 1159  0.651766570  1.233340199 #> 6955 1160  0.672084586  1.245070811 #> 6956 1160  0.651766570  1.233340199 #> 6957 1160  0.651766570  1.209878976 #> 6958 1160  0.672084586  1.198148364 #> 6959 1160  0.692402601  1.209878976 #> 6960 1160  0.692402601  1.233340199 #> 6961 1161  0.712720616  1.245070811 #> 6962 1161  0.692402601  1.233340199 #> 6963 1161  0.692402601  1.209878976 #> 6964 1161  0.712720616  1.198148364 #> 6965 1161  0.733038632  1.209878976 #> 6966 1161  0.733038632  1.233340199 #> 6967 1162  0.753356647  1.245070811 #> 6968 1162  0.733038632  1.233340199 #> 6969 1162  0.733038632  1.209878976 #> 6970 1162  0.753356647  1.198148364 #> 6971 1162  0.773674663  1.209878976 #> 6972 1162  0.773674663  1.233340199 #> 6973 1163  0.793992678  1.245070811 #> 6974 1163  0.773674663  1.233340199 #> 6975 1163  0.773674663  1.209878976 #> 6976 1163  0.793992678  1.198148364 #> 6977 1163  0.814310694  1.209878976 #> 6978 1163  0.814310694  1.233340199 #> 6979 1164  0.834628709  1.245070811 #> 6980 1164  0.814310694  1.233340199 #> 6981 1164  0.814310694  1.209878976 #> 6982 1164  0.834628709  1.198148364 #> 6983 1164  0.854946724  1.209878976 #> 6984 1164  0.854946724  1.233340199 #> 6985 1165  0.875264740  1.245070811 #> 6986 1165  0.854946724  1.233340199 #> 6987 1165  0.854946724  1.209878976 #> 6988 1165  0.875264740  1.198148364 #> 6989 1165  0.895582755  1.209878976 #> 6990 1165  0.895582755  1.233340199 #> 6991 1166  0.915900771  1.245070811 #> 6992 1166  0.895582755  1.233340199 #> 6993 1166  0.895582755  1.209878976 #> 6994 1166  0.915900771  1.198148364 #> 6995 1166  0.936218786  1.209878976 #> 6996 1166  0.936218786  1.233340199 #> 6997 1167  0.956536801  1.245070811 #> 6998 1167  0.936218786  1.233340199 #> 6999 1167  0.936218786  1.209878976 #> 7000 1167  0.956536801  1.198148364 #> 7001 1167  0.976854817  1.209878976 #> 7002 1167  0.976854817  1.233340199 #> 7003 1168  0.997172832  1.245070811 #> 7004 1168  0.976854817  1.233340199 #> 7005 1168  0.976854817  1.209878976 #> 7006 1168  0.997172832  1.198148364 #> 7007 1168  1.017490848  1.209878976 #> 7008 1168  1.017490848  1.233340199 #> 7009 1169  1.037808863  1.245070811 #> 7010 1169  1.017490848  1.233340199 #> 7011 1169  1.017490848  1.209878976 #> 7012 1169  1.037808863  1.198148364 #> 7013 1169  1.058126878  1.209878976 #> 7014 1169  1.058126878  1.233340199 #> 7015 1170  1.078444894  1.245070811 #> 7016 1170  1.058126878  1.233340199 #> 7017 1170  1.058126878  1.209878976 #> 7018 1170  1.078444894  1.198148364 #> 7019 1170  1.098762909  1.209878976 #> 7020 1170  1.098762909  1.233340199 #> 7021 1171 -0.079681985  1.280262646 #> 7022 1171 -0.100000000  1.268532034 #> 7023 1171 -0.100000000  1.245070811 #> 7024 1171 -0.079681985  1.233340199 #> 7025 1171 -0.059363969  1.245070811 #> 7026 1171 -0.059363969  1.268532034 #> 7027 1172 -0.039045954  1.280262646 #> 7028 1172 -0.059363969  1.268532034 #> 7029 1172 -0.059363969  1.245070811 #> 7030 1172 -0.039045954  1.233340199 #> 7031 1172 -0.018727938  1.245070811 #> 7032 1172 -0.018727938  1.268532034 #> 7033 1173  0.001590077  1.280262646 #> 7034 1173 -0.018727938  1.268532034 #> 7035 1173 -0.018727938  1.245070811 #> 7036 1173  0.001590077  1.233340199 #> 7037 1173  0.021908092  1.245070811 #> 7038 1173  0.021908092  1.268532034 #> 7039 1174  0.042226108  1.280262646 #> 7040 1174  0.021908092  1.268532034 #> 7041 1174  0.021908092  1.245070811 #> 7042 1174  0.042226108  1.233340199 #> 7043 1174  0.062544123  1.245070811 #> 7044 1174  0.062544123  1.268532034 #> 7045 1175  0.082862139  1.280262646 #> 7046 1175  0.062544123  1.268532034 #> 7047 1175  0.062544123  1.245070811 #> 7048 1175  0.082862139  1.233340199 #> 7049 1175  0.103180154  1.245070811 #> 7050 1175  0.103180154  1.268532034 #> 7051 1176  0.123498170  1.280262646 #> 7052 1176  0.103180154  1.268532034 #> 7053 1176  0.103180154  1.245070811 #> 7054 1176  0.123498170  1.233340199 #> 7055 1176  0.143816185  1.245070811 #> 7056 1176  0.143816185  1.268532034 #> 7057 1177  0.164134200  1.280262646 #> 7058 1177  0.143816185  1.268532034 #> 7059 1177  0.143816185  1.245070811 #> 7060 1177  0.164134200  1.233340199 #> 7061 1177  0.184452216  1.245070811 #> 7062 1177  0.184452216  1.268532034 #> 7063 1178  0.204770231  1.280262646 #> 7064 1178  0.184452216  1.268532034 #> 7065 1178  0.184452216  1.245070811 #> 7066 1178  0.204770231  1.233340199 #> 7067 1178  0.225088247  1.245070811 #> 7068 1178  0.225088247  1.268532034 #> 7069 1179  0.245406262  1.280262646 #> 7070 1179  0.225088247  1.268532034 #> 7071 1179  0.225088247  1.245070811 #> 7072 1179  0.245406262  1.233340199 #> 7073 1179  0.265724277  1.245070811 #> 7074 1179  0.265724277  1.268532034 #> 7075 1180  0.286042293  1.280262646 #> 7076 1180  0.265724277  1.268532034 #> 7077 1180  0.265724277  1.245070811 #> 7078 1180  0.286042293  1.233340199 #> 7079 1180  0.306360308  1.245070811 #> 7080 1180  0.306360308  1.268532034 #> 7081 1181  0.326678324  1.280262646 #> 7082 1181  0.306360308  1.268532034 #> 7083 1181  0.306360308  1.245070811 #> 7084 1181  0.326678324  1.233340199 #> 7085 1181  0.346996339  1.245070811 #> 7086 1181  0.346996339  1.268532034 #> 7087 1182  0.367314354  1.280262646 #> 7088 1182  0.346996339  1.268532034 #> 7089 1182  0.346996339  1.245070811 #> 7090 1182  0.367314354  1.233340199 #> 7091 1182  0.387632370  1.245070811 #> 7092 1182  0.387632370  1.268532034 #> 7093 1183  0.407950385  1.280262646 #> 7094 1183  0.387632370  1.268532034 #> 7095 1183  0.387632370  1.245070811 #> 7096 1183  0.407950385  1.233340199 #> 7097 1183  0.428268401  1.245070811 #> 7098 1183  0.428268401  1.268532034 #> 7099 1184  0.448586416  1.280262646 #> 7100 1184  0.428268401  1.268532034 #> 7101 1184  0.428268401  1.245070811 #> 7102 1184  0.448586416  1.233340199 #> 7103 1184  0.468904432  1.245070811 #> 7104 1184  0.468904432  1.268532034 #> 7105 1185  0.489222447  1.280262646 #> 7106 1185  0.468904432  1.268532034 #> 7107 1185  0.468904432  1.245070811 #> 7108 1185  0.489222447  1.233340199 #> 7109 1185  0.509540462  1.245070811 #> 7110 1185  0.509540462  1.268532034 #> 7111 1186  0.529858478  1.280262646 #> 7112 1186  0.509540462  1.268532034 #> 7113 1186  0.509540462  1.245070811 #> 7114 1186  0.529858478  1.233340199 #> 7115 1186  0.550176493  1.245070811 #> 7116 1186  0.550176493  1.268532034 #> 7117 1187  0.570494509  1.280262646 #> 7118 1187  0.550176493  1.268532034 #> 7119 1187  0.550176493  1.245070811 #> 7120 1187  0.570494509  1.233340199 #> 7121 1187  0.590812524  1.245070811 #> 7122 1187  0.590812524  1.268532034 #> 7123 1188  0.611130539  1.280262646 #> 7124 1188  0.590812524  1.268532034 #> 7125 1188  0.590812524  1.245070811 #> 7126 1188  0.611130539  1.233340199 #> 7127 1188  0.631448555  1.245070811 #> 7128 1188  0.631448555  1.268532034 #> 7129 1189  0.651766570  1.280262646 #> 7130 1189  0.631448555  1.268532034 #> 7131 1189  0.631448555  1.245070811 #> 7132 1189  0.651766570  1.233340199 #> 7133 1189  0.672084586  1.245070811 #> 7134 1189  0.672084586  1.268532034 #> 7135 1190  0.692402601  1.280262646 #> 7136 1190  0.672084586  1.268532034 #> 7137 1190  0.672084586  1.245070811 #> 7138 1190  0.692402601  1.233340199 #> 7139 1190  0.712720616  1.245070811 #> 7140 1190  0.712720616  1.268532034 #> 7141 1191  0.733038632  1.280262646 #> 7142 1191  0.712720616  1.268532034 #> 7143 1191  0.712720616  1.245070811 #> 7144 1191  0.733038632  1.233340199 #> 7145 1191  0.753356647  1.245070811 #> 7146 1191  0.753356647  1.268532034 #> 7147 1192  0.773674663  1.280262646 #> 7148 1192  0.753356647  1.268532034 #> 7149 1192  0.753356647  1.245070811 #> 7150 1192  0.773674663  1.233340199 #> 7151 1192  0.793992678  1.245070811 #> 7152 1192  0.793992678  1.268532034 #> 7153 1193  0.814310694  1.280262646 #> 7154 1193  0.793992678  1.268532034 #> 7155 1193  0.793992678  1.245070811 #> 7156 1193  0.814310694  1.233340199 #> 7157 1193  0.834628709  1.245070811 #> 7158 1193  0.834628709  1.268532034 #> 7159 1194  0.854946724  1.280262646 #> 7160 1194  0.834628709  1.268532034 #> 7161 1194  0.834628709  1.245070811 #> 7162 1194  0.854946724  1.233340199 #> 7163 1194  0.875264740  1.245070811 #> 7164 1194  0.875264740  1.268532034 #> 7165 1195  0.895582755  1.280262646 #> 7166 1195  0.875264740  1.268532034 #> 7167 1195  0.875264740  1.245070811 #> 7168 1195  0.895582755  1.233340199 #> 7169 1195  0.915900771  1.245070811 #> 7170 1195  0.915900771  1.268532034 #> 7171 1196  0.936218786  1.280262646 #> 7172 1196  0.915900771  1.268532034 #> 7173 1196  0.915900771  1.245070811 #> 7174 1196  0.936218786  1.233340199 #> 7175 1196  0.956536801  1.245070811 #> 7176 1196  0.956536801  1.268532034 #> 7177 1197  0.976854817  1.280262646 #> 7178 1197  0.956536801  1.268532034 #> 7179 1197  0.956536801  1.245070811 #> 7180 1197  0.976854817  1.233340199 #> 7181 1197  0.997172832  1.245070811 #> 7182 1197  0.997172832  1.268532034 #> 7183 1198  1.017490848  1.280262646 #> 7184 1198  0.997172832  1.268532034 #> 7185 1198  0.997172832  1.245070811 #> 7186 1198  1.017490848  1.233340199 #> 7187 1198  1.037808863  1.245070811 #> 7188 1198  1.037808863  1.268532034 #> 7189 1199  1.058126878  1.280262646 #> 7190 1199  1.037808863  1.268532034 #> 7191 1199  1.037808863  1.245070811 #> 7192 1199  1.058126878  1.233340199 #> 7193 1199  1.078444894  1.245070811 #> 7194 1199  1.078444894  1.268532034 #> 7195 1200  1.098762909  1.280262646 #> 7196 1200  1.078444894  1.268532034 #> 7197 1200  1.078444894  1.245070811 #> 7198 1200  1.098762909  1.233340199 #> 7199 1200  1.119080925  1.245070811 #> 7200 1200  1.119080925  1.268532034 #>  #> $data_hb_id #> # A tibble: 1,000 × 4 #>     emb1  emb2    ID     h #>    <dbl> <dbl> <int> <int> #>  1 0.277 0.913     1   880 #>  2 0.697 0.538     2   590 #>  3 0.779 0.399     3   472 #>  4 0.173 0.953     4   908 #>  5 0.218 0.983     5   938 #>  6 0.593 1.05      6  1008 #>  7 0.180 0.210     7   277 #>  8 0.976 0.571     8   597 #>  9 0.803 0.829     9   833 #> 10 0.932 0.410    10   476 #> # ℹ 990 more rows #>  #> $std_cts #> # A tibble: 438 × 3 #>        h   n_h   w_h #>    <int> <int> <dbl> #>  1   112     1 0.001 #>  2   113     1 0.001 #>  3   128     1 0.001 #>  4   129     3 0.003 #>  5   130     5 0.005 #>  6   131     3 0.003 #>  7   132     2 0.002 #>  8   133     3 0.003 #>  9   134     1 0.001 #> 10   142     1 0.001 #> # ℹ 428 more rows #>  #> $b #> [1] 1200 #>  #> $m #> [1] 438 #>  #> $pts_bins #> # A tibble: 438 × 2 #>        h pts_list  #>    <int> <list>    #>  1   112 <int [1]> #>  2   113 <int [1]> #>  3   128 <int [1]> #>  4   129 <int [3]> #>  5   130 <int [5]> #>  6   131 <int [3]> #>  7   132 <int [2]> #>  8   133 <int [3]> #>  9   134 <int [1]> #> 10   142 <int [1]> #> # ℹ 428 more rows #>  #> attr(,\"class\") #> [1] \"hex_bin_obj\""},{"path":"https://jayanilakshika.github.io/quollr/reference/map_hexbin_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Hexagon IDs to Centroids in the Full Grid — map_hexbin_id","title":"Map Hexagon IDs to Centroids in the Full Grid — map_hexbin_id","text":"function generates data frame hexagon IDs mapped centroids full grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/map_hexbin_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Hexagon IDs to Centroids in the Full Grid — map_hexbin_id","text":"","code":"map_hexbin_id(full_centroid_df, df_bin_centroids)"},{"path":"https://jayanilakshika.github.io/quollr/reference/map_hexbin_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Hexagon IDs to Centroids in the Full Grid — map_hexbin_id","text":"full_centroid_df Data frame containing centroid coordinates full grid. df_bin_centroids Data frame containing hexagon IDs centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/map_hexbin_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Hexagon IDs to Centroids in the Full Grid — map_hexbin_id","text":"data frame columns 'x', 'y', 'hexID', 'counts' representing hexagon centroids counts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/map_hexbin_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Hexagon IDs to Centroids in the Full Grid — map_hexbin_id","text":"","code":"num_bins_x <- 4 shape_value <- 1.833091 hexbin_data_object <- extract_hexbin_centroids(nldr_df = s_curve_noise_umap, num_bins = num_bins_x, shape_val = shape_value) df_bin_centroids <- hexbin_data_object$hexdf_data full_centroid_df <- generate_full_grid_centroids(df_bin_centroids) map_hexbin_id(full_centroid_df, df_bin_centroids) #> # A tibble: 50 × 5 #>       c_x   c_y hexID counts std_counts #>     <dbl> <dbl> <int>  <int>      <dbl> #>  1 -3.27  -5.74     1      2      0.222 #>  2 -1.84  -5.74     2      6      0.667 #>  3 -0.407 -5.74     3     NA     NA     #>  4  1.02  -5.74     4     NA     NA     #>  5  2.46  -5.74     5     NA     NA     #>  6 -2.55  -4.38     6      7      0.778 #>  7 -1.12  -4.38     7      5      0.556 #>  8  0.308 -4.38     8     NA     NA     #>  9  1.74  -4.38     9     NA     NA     #> 10  3.17  -4.38    10     NA     NA     #> # ℹ 40 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/map_polygon_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Polygon ID to Hexagon Coordinates — map_polygon_id","title":"Map Polygon ID to Hexagon Coordinates — map_polygon_id","text":"function maps polygon IDs corresponding hexagon coordinates full grid.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/map_polygon_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Polygon ID to Hexagon Coordinates — map_polygon_id","text":"","code":"map_polygon_id(full_grid_with_hexbin_id, hex_grid)"},{"path":"https://jayanilakshika.github.io/quollr/reference/map_polygon_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Polygon ID to Hexagon Coordinates — map_polygon_id","text":"full_grid_with_hexbin_id data frame containing hexagon IDs, centroids, standardized counts. hex_grid data frame containing coordinates hexagons.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/map_polygon_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Polygon ID to Hexagon Coordinates — map_polygon_id","text":"data frame hexagon information along mapped polygon IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/map_polygon_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Polygon ID to Hexagon Coordinates — map_polygon_id","text":"","code":"num_bins_x <- 4 shape_value <- 1.833091 hexbin_data_object <- extract_hexbin_centroids(nldr_df = s_curve_noise_umap, num_bins = num_bins_x, shape_val = shape_value) df_bin_centroids <- hexbin_data_object$hexdf_data full_centroid_df <- generate_full_grid_centroids(df_bin_centroids) hex_grid <- full_hex_grid(full_centroid_df) full_grid_with_hexbin_id <- map_hexbin_id(full_centroid_df, df_bin_centroids) map_polygon_id(full_grid_with_hexbin_id, hex_grid) #>           c_x        c_y hexID counts std_counts polygon_id #> 1  -3.2703577 -5.7425405     1      2  0.2222222          1 #> 2  -1.8388696 -5.7425405     2      6  0.6666667          2 #> 3  -0.4073814 -5.7425405     3     NA         NA          3 #> 4   1.0241067 -5.7425405     4     NA         NA          4 #> 5   2.4555949 -5.7425405     5     NA         NA          5 #> 6  -2.5546137 -4.3768263     6      7  0.7777778         26 #> 7  -1.1231255 -4.3768263     7      5  0.5555556         27 #> 8   0.3083626 -4.3768263     8     NA         NA         28 #> 9   1.7398508 -4.3768263     9     NA         NA         29 #> 10  3.1713389 -4.3768263    10     NA         NA         30 #> 11 -3.2703577 -3.0111121    11      2  0.2222222          6 #> 12 -1.8388696 -3.0111121    12      2  0.2222222          7 #> 13 -0.4073814 -3.0111121    13      2  0.2222222          8 #> 14  1.0241067 -3.0111121    14     NA         NA          9 #> 15  2.4555949 -3.0111121    15     NA         NA         10 #> 16 -2.5546137 -1.6453979    16     NA         NA         31 #> 17 -1.1231255 -1.6453979    17      1  0.1111111         32 #> 18  0.3083626 -1.6453979    18      8  0.8888889         33 #> 19  1.7398508 -1.6453979    19     NA         NA         34 #> 20  3.1713389 -1.6453979    20     NA         NA         35 #> 21 -3.2703577 -0.2796838    21     NA         NA         11 #> 22 -1.8388696 -0.2796838    22     NA         NA         12 #> 23 -0.4073814 -0.2796838    23     NA         NA         13 #> 24  1.0241067 -0.2796838    24      7  0.7777778         14 #> 25  2.4555949 -0.2796838    25     NA         NA         15 #> 26 -2.5546137  1.0860304    26     NA         NA         36 #> 27 -1.1231255  1.0860304    27     NA         NA         37 #> 28  0.3083626  1.0860304    28      1  0.1111111         38 #> 29  1.7398508  1.0860304    29      6  0.6666667         39 #> 30  3.1713389  1.0860304    30     NA         NA         40 #> 31 -3.2703577  2.4517446    31     NA         NA         16 #> 32 -1.8388696  2.4517446    32     NA         NA         17 #> 33 -0.4073814  2.4517446    33     NA         NA         18 #> 34  1.0241067  2.4517446    34     NA         NA         19 #> 35  2.4555949  2.4517446    35     NA         NA         20 #> 36 -2.5546137  3.8174588    36     NA         NA         41 #> 37 -1.1231255  3.8174588    37     NA         NA         42 #> 38  0.3083626  3.8174588    38      2  0.2222222         43 #> 39  1.7398508  3.8174588    39      8  0.8888889         44 #> 40  3.1713389  3.8174588    40     NA         NA         45 #> 41 -3.2703577  5.1831729    41     NA         NA         21 #> 42 -1.8388696  5.1831729    42     NA         NA         22 #> 43 -0.4073814  5.1831729    43     NA         NA         23 #> 44  1.0241067  5.1831729    44      9  1.0000000         24 #> 45  2.4555949  5.1831729    45      7  0.7777778         25 #> 46 -2.5546137  6.5488871    46     NA         NA         46 #> 47 -1.1231255  6.5488871    47     NA         NA         47 #> 48  0.3083626  6.5488871    48     NA         NA         48 #> 49  1.7398508  6.5488871    49     NA         NA         49 #> 50  3.1713389  6.5488871    50     NA         NA         50"},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — merge_hexbin_centroids","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — merge_hexbin_centroids","text":"Extract hexagonal bin centroids coordinates corresponding standardise counts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — merge_hexbin_centroids","text":"","code":"merge_hexbin_centroids(centroids_data, counts_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — merge_hexbin_centroids","text":"centroids_data tibble contains hexagonal bin centroid coordinates hexagon IDs. counts_data tibble contains hexagon IDs standardise number points within hexagon.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — merge_hexbin_centroids","text":"tibble contains hexagon ID (h), centroid coordinates (c_x, c_y), bin counts (n_h), standardise counts (w_h).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract hexagonal bin centroids coordinates and the corresponding standardise counts. — merge_hexbin_centroids","text":"","code":"all_centroids_df <- scurve_model_obj$hb_obj$centroids counts_data <- scurve_model_obj$hb_obj$std_cts merge_hexbin_centroids(centroids_data = all_centroids_df, counts_data = counts_data) #>       h        c_x         c_y n_h   w_h #> 1     1 -0.1000000 -0.11568014   0 0.000 #> 2     2 -0.0165892 -0.11568014   0 0.000 #> 3     3  0.0668216 -0.11568014   0 0.000 #> 4     4  0.1502324 -0.11568014   0 0.000 #> 5     5  0.2336432 -0.11568014   0 0.000 #> 6     6  0.3170540 -0.11568014   0 0.000 #> 7     7  0.4004648 -0.11568014   0 0.000 #> 8     8  0.4838756 -0.11568014   0 0.000 #> 9     9  0.5672864 -0.11568014   0 0.000 #> 10   10  0.6506972 -0.11568014   0 0.000 #> 11   11  0.7341080 -0.11568014   0 0.000 #> 12   12  0.8175188 -0.11568014   0 0.000 #> 13   13  0.9009296 -0.11568014   0 0.000 #> 14   14  0.9843404 -0.11568014   0 0.000 #> 15   15  1.0677512 -0.11568014   0 0.000 #> 16   16 -0.0582946 -0.04344427   0 0.000 #> 17   17  0.0251162 -0.04344427   0 0.000 #> 18   18  0.1085270 -0.04344427   0 0.000 #> 19   19  0.1919378 -0.04344427   0 0.000 #> 20   20  0.2753486 -0.04344427   0 0.000 #> 21   21  0.3587594 -0.04344427   0 0.000 #> 22   22  0.4421702 -0.04344427   0 0.000 #> 23   23  0.5255810 -0.04344427   0 0.000 #> 24   24  0.6089918 -0.04344427   0 0.000 #> 25   25  0.6924026 -0.04344427   0 0.000 #> 26   26  0.7758134 -0.04344427   0 0.000 #> 27   27  0.8592242 -0.04344427   0 0.000 #> 28   28  0.9426350 -0.04344427   0 0.000 #> 29   29  1.0260458 -0.04344427   0 0.000 #> 30   30  1.1094566 -0.04344427   0 0.000 #> 31   31 -0.1000000  0.02879160   0 0.000 #> 32   32 -0.0165892  0.02879160   0 0.000 #> 33   33  0.0668216  0.02879160   0 0.000 #> 34   34  0.1502324  0.02879160   1 0.001 #> 35   35  0.2336432  0.02879160  10 0.010 #> 36   36  0.3170540  0.02879160   8 0.008 #> 37   37  0.4004648  0.02879160   8 0.008 #> 38   38  0.4838756  0.02879160   2 0.002 #> 39   39  0.5672864  0.02879160   0 0.000 #> 40   40  0.6506972  0.02879160   0 0.000 #> 41   41  0.7341080  0.02879160   2 0.002 #> 42   42  0.8175188  0.02879160  12 0.012 #> 43   43  0.9009296  0.02879160   0 0.000 #> 44   44  0.9843404  0.02879160   0 0.000 #> 45   45  1.0677512  0.02879160   0 0.000 #> 46   46 -0.0582946  0.10102747   0 0.000 #> 47   47  0.0251162  0.10102747   0 0.000 #> 48   48  0.1085270  0.10102747   0 0.000 #> 49   49  0.1919378  0.10102747  11 0.011 #> 50   50  0.2753486  0.10102747   9 0.009 #> 51   51  0.3587594  0.10102747   4 0.004 #> 52   52  0.4421702  0.10102747  11 0.011 #> 53   53  0.5255810  0.10102747  12 0.012 #> 54   54  0.6089918  0.10102747   1 0.001 #> 55   55  0.6924026  0.10102747   6 0.006 #> 56   56  0.7758134  0.10102747  12 0.012 #> 57   57  0.8592242  0.10102747  12 0.012 #> 58   58  0.9426350  0.10102747   0 0.000 #> 59   59  1.0260458  0.10102747   0 0.000 #> 60   60  1.1094566  0.10102747   0 0.000 #> 61   61 -0.1000000  0.17326335   0 0.000 #> 62   62 -0.0165892  0.17326335   0 0.000 #> 63   63  0.0668216  0.17326335   0 0.000 #> 64   64  0.1502324  0.17326335   5 0.005 #> 65   65  0.2336432  0.17326335  10 0.010 #> 66   66  0.3170540  0.17326335  10 0.010 #> 67   67  0.4004648  0.17326335  11 0.011 #> 68   68  0.4838756  0.17326335   5 0.005 #> 69   69  0.5672864  0.17326335  14 0.014 #> 70   70  0.6506972  0.17326335  11 0.011 #> 71   71  0.7341080  0.17326335   9 0.009 #> 72   72  0.8175188  0.17326335   6 0.006 #> 73   73  0.9009296  0.17326335   6 0.006 #> 74   74  0.9843404  0.17326335   0 0.000 #> 75   75  1.0677512  0.17326335   0 0.000 #> 76   76 -0.0582946  0.24549922   0 0.000 #> 77   77  0.0251162  0.24549922   0 0.000 #> 78   78  0.1085270  0.24549922   1 0.001 #> 79   79  0.1919378  0.24549922  10 0.010 #> 80   80  0.2753486  0.24549922   5 0.005 #> 81   81  0.3587594  0.24549922   8 0.008 #> 82   82  0.4421702  0.24549922   8 0.008 #> 83   83  0.5255810  0.24549922   1 0.001 #> 84   84  0.6089918  0.24549922   9 0.009 #> 85   85  0.6924026  0.24549922   5 0.005 #> 86   86  0.7758134  0.24549922  11 0.011 #> 87   87  0.8592242  0.24549922   7 0.007 #> 88   88  0.9426350  0.24549922   9 0.009 #> 89   89  1.0260458  0.24549922   0 0.000 #> 90   90  1.1094566  0.24549922   0 0.000 #> 91   91 -0.1000000  0.31773509   0 0.000 #> 92   92 -0.0165892  0.31773509   0 0.000 #> 93   93  0.0668216  0.31773509   0 0.000 #> 94   94  0.1502324  0.31773509  11 0.011 #> 95   95  0.2336432  0.31773509   5 0.005 #> 96   96  0.3170540  0.31773509  10 0.010 #> 97   97  0.4004648  0.31773509   8 0.008 #> 98   98  0.4838756  0.31773509   0 0.000 #> 99   99  0.5672864  0.31773509   0 0.000 #> 100 100  0.6506972  0.31773509  10 0.010 #> 101 101  0.7341080  0.31773509  12 0.012 #> 102 102  0.8175188  0.31773509   2 0.002 #> 103 103  0.9009296  0.31773509  13 0.013 #> 104 104  0.9843404  0.31773509   1 0.001 #> 105 105  1.0677512  0.31773509   0 0.000 #> 106 106 -0.0582946  0.38997096   0 0.000 #> 107 107  0.0251162  0.38997096   0 0.000 #> 108 108  0.1085270  0.38997096   0 0.000 #> 109 109  0.1919378  0.38997096   9 0.009 #> 110 110  0.2753486  0.38997096   3 0.003 #> 111 111  0.3587594  0.38997096   2 0.002 #> 112 112  0.4421702  0.38997096   0 0.000 #> 113 113  0.5255810  0.38997096   0 0.000 #> 114 114  0.6089918  0.38997096   0 0.000 #> 115 115  0.6924026  0.38997096   6 0.006 #> 116 116  0.7758134  0.38997096   9 0.009 #> 117 117  0.8592242  0.38997096  10 0.010 #> 118 118  0.9426350  0.38997096   7 0.007 #> 119 119  1.0260458  0.38997096   0 0.000 #> 120 120  1.1094566  0.38997096   0 0.000 #> 121 121 -0.1000000  0.46220683   0 0.000 #> 122 122 -0.0165892  0.46220683   0 0.000 #> 123 123  0.0668216  0.46220683   0 0.000 #> 124 124  0.1502324  0.46220683   0 0.000 #> 125 125  0.2336432  0.46220683   0 0.000 #> 126 126  0.3170540  0.46220683   0 0.000 #> 127 127  0.4004648  0.46220683   0 0.000 #> 128 128  0.4838756  0.46220683   0 0.000 #> 129 129  0.5672864  0.46220683   0 0.000 #> 130 130  0.6506972  0.46220683   5 0.005 #> 131 131  0.7341080  0.46220683  12 0.012 #> 132 132  0.8175188  0.46220683   6 0.006 #> 133 133  0.9009296  0.46220683   6 0.006 #> 134 134  0.9843404  0.46220683   9 0.009 #> 135 135  1.0677512  0.46220683   0 0.000 #> 136 136 -0.0582946  0.53444270   0 0.000 #> 137 137  0.0251162  0.53444270   0 0.000 #> 138 138  0.1085270  0.53444270   0 0.000 #> 139 139  0.1919378  0.53444270   0 0.000 #> 140 140  0.2753486  0.53444270   0 0.000 #> 141 141  0.3587594  0.53444270   0 0.000 #> 142 142  0.4421702  0.53444270   0 0.000 #> 143 143  0.5255810  0.53444270   0 0.000 #> 144 144  0.6089918  0.53444270   0 0.000 #> 145 145  0.6924026  0.53444270   9 0.009 #> 146 146  0.7758134  0.53444270   9 0.009 #> 147 147  0.8592242  0.53444270   6 0.006 #> 148 148  0.9426350  0.53444270   6 0.006 #> 149 149  1.0260458  0.53444270   1 0.001 #> 150 150  1.1094566  0.53444270   0 0.000 #> 151 151 -0.1000000  0.60667858   0 0.000 #> 152 152 -0.0165892  0.60667858   0 0.000 #> 153 153  0.0668216  0.60667858   0 0.000 #> 154 154  0.1502324  0.60667858   0 0.000 #> 155 155  0.2336432  0.60667858   0 0.000 #> 156 156  0.3170540  0.60667858   0 0.000 #> 157 157  0.4004648  0.60667858   0 0.000 #> 158 158  0.4838756  0.60667858   0 0.000 #> 159 159  0.5672864  0.60667858   0 0.000 #> 160 160  0.6506972  0.60667858  10 0.010 #> 161 161  0.7341080  0.60667858   9 0.009 #> 162 162  0.8175188  0.60667858   5 0.005 #> 163 163  0.9009296  0.60667858   5 0.005 #> 164 164  0.9843404  0.60667858   8 0.008 #> 165 165  1.0677512  0.60667858   0 0.000 #> 166 166 -0.0582946  0.67891445   0 0.000 #> 167 167  0.0251162  0.67891445   0 0.000 #> 168 168  0.1085270  0.67891445   0 0.000 #> 169 169  0.1919378  0.67891445   0 0.000 #> 170 170  0.2753486  0.67891445   0 0.000 #> 171 171  0.3587594  0.67891445   0 0.000 #> 172 172  0.4421702  0.67891445   0 0.000 #> 173 173  0.5255810  0.67891445   1 0.001 #> 174 174  0.6089918  0.67891445  10 0.010 #> 175 175  0.6924026  0.67891445   9 0.009 #> 176 176  0.7758134  0.67891445   6 0.006 #> 177 177  0.8592242  0.67891445  11 0.011 #> 178 178  0.9426350  0.67891445   5 0.005 #> 179 179  1.0260458  0.67891445   0 0.000 #> 180 180  1.1094566  0.67891445   0 0.000 #> 181 181 -0.1000000  0.75115032   0 0.000 #> 182 182 -0.0165892  0.75115032   0 0.000 #> 183 183  0.0668216  0.75115032   0 0.000 #> 184 184  0.1502324  0.75115032   3 0.003 #> 185 185  0.2336432  0.75115032   5 0.005 #> 186 186  0.3170540  0.75115032   3 0.003 #> 187 187  0.4004648  0.75115032  11 0.011 #> 188 188  0.4838756  0.75115032   3 0.003 #> 189 189  0.5672864  0.75115032  12 0.012 #> 190 190  0.6506972  0.75115032   6 0.006 #> 191 191  0.7341080  0.75115032   5 0.005 #> 192 192  0.8175188  0.75115032   8 0.008 #> 193 193  0.9009296  0.75115032   9 0.009 #> 194 194  0.9843404  0.75115032   0 0.000 #> 195 195  1.0677512  0.75115032   0 0.000 #> 196 196 -0.0582946  0.82338619   0 0.000 #> 197 197  0.0251162  0.82338619  12 0.012 #> 198 198  0.1085270  0.82338619   9 0.009 #> 199 199  0.1919378  0.82338619  10 0.010 #> 200 200  0.2753486  0.82338619  11 0.011 #> 201 201  0.3587594  0.82338619   9 0.009 #> 202 202  0.4421702  0.82338619  12 0.012 #> 203 203  0.5255810  0.82338619   7 0.007 #> 204 204  0.6089918  0.82338619   8 0.008 #> 205 205  0.6924026  0.82338619  11 0.011 #> 206 206  0.7758134  0.82338619   5 0.005 #> 207 207  0.8592242  0.82338619   7 0.007 #> 208 208  0.9426350  0.82338619   0 0.000 #> 209 209  1.0260458  0.82338619   0 0.000 #> 210 210  1.1094566  0.82338619   0 0.000 #> 211 211 -0.1000000  0.89562206   0 0.000 #> 212 212 -0.0165892  0.89562206   4 0.004 #> 213 213  0.0668216  0.89562206   8 0.008 #> 214 214  0.1502324  0.89562206   5 0.005 #> 215 215  0.2336432  0.89562206   8 0.008 #> 216 216  0.3170540  0.89562206   8 0.008 #> 217 217  0.4004648  0.89562206   4 0.004 #> 218 218  0.4838756  0.89562206   9 0.009 #> 219 219  0.5672864  0.89562206   7 0.007 #> 220 220  0.6506972  0.89562206  10 0.010 #> 221 221  0.7341080  0.89562206   7 0.007 #> 222 222  0.8175188  0.89562206  15 0.015 #> 223 223  0.9009296  0.89562206   0 0.000 #> 224 224  0.9843404  0.89562206   0 0.000 #> 225 225  1.0677512  0.89562206   0 0.000 #> 226 226 -0.0582946  0.96785794   0 0.000 #> 227 227  0.0251162  0.96785794  12 0.012 #> 228 228  0.1085270  0.96785794   6 0.006 #> 229 229  0.1919378  0.96785794   5 0.005 #> 230 230  0.2753486  0.96785794   5 0.005 #> 231 231  0.3587594  0.96785794   7 0.007 #> 232 232  0.4421702  0.96785794  14 0.014 #> 233 233  0.5255810  0.96785794   3 0.003 #> 234 234  0.6089918  0.96785794   3 0.003 #> 235 235  0.6924026  0.96785794   8 0.008 #> 236 236  0.7758134  0.96785794   7 0.007 #> 237 237  0.8592242  0.96785794   0 0.000 #> 238 238  0.9426350  0.96785794   0 0.000 #> 239 239  1.0260458  0.96785794   0 0.000 #> 240 240  1.1094566  0.96785794   0 0.000 #> 241 241 -0.1000000  1.04009381   0 0.000 #> 242 242 -0.0165892  1.04009381   4 0.004 #> 243 243  0.0668216  1.04009381   9 0.009 #> 244 244  0.1502324  1.04009381   9 0.009 #> 245 245  0.2336432  1.04009381   5 0.005 #> 246 246  0.3170540  1.04009381   8 0.008 #> 247 247  0.4004648  1.04009381   8 0.008 #> 248 248  0.4838756  1.04009381   7 0.007 #> 249 249  0.5672864  1.04009381   5 0.005 #> 250 250  0.6506972  1.04009381   4 0.004 #> 251 251  0.7341080  1.04009381   0 0.000 #> 252 252  0.8175188  1.04009381   0 0.000 #> 253 253  0.9009296  1.04009381   0 0.000 #> 254 254  0.9843404  1.04009381   0 0.000 #> 255 255  1.0677512  1.04009381   0 0.000 #> 256 256 -0.0582946  1.11232968   0 0.000 #> 257 257  0.0251162  1.11232968   4 0.004 #> 258 258  0.1085270  1.11232968  13 0.013 #> 259 259  0.1919378  1.11232968  14 0.014 #> 260 260  0.2753486  1.11232968   6 0.006 #> 261 261  0.3587594  1.11232968   7 0.007 #> 262 262  0.4421702  1.11232968  10 0.010 #> 263 263  0.5255810  1.11232968  10 0.010 #> 264 264  0.6089918  1.11232968   0 0.000 #> 265 265  0.6924026  1.11232968   0 0.000 #> 266 266  0.7758134  1.11232968   0 0.000 #> 267 267  0.8592242  1.11232968   0 0.000 #> 268 268  0.9426350  1.11232968   0 0.000 #> 269 269  1.0260458  1.11232968   0 0.000 #> 270 270  1.1094566  1.11232968   0 0.000 #> 271 271 -0.1000000  1.18456555   0 0.000 #> 272 272 -0.0165892  1.18456555   0 0.000 #> 273 273  0.0668216  1.18456555   3 0.003 #> 274 274  0.1502324  1.18456555   1 0.001 #> 275 275  0.2336432  1.18456555   2 0.002 #> 276 276  0.3170540  1.18456555   1 0.001 #> 277 277  0.4004648  1.18456555   1 0.001 #> 278 278  0.4838756  1.18456555   0 0.000 #> 279 279  0.5672864  1.18456555   0 0.000 #> 280 280  0.6506972  1.18456555   0 0.000 #> 281 281  0.7341080  1.18456555   0 0.000 #> 282 282  0.8175188  1.18456555   0 0.000 #> 283 283  0.9009296  1.18456555   0 0.000 #> 284 284  0.9843404  1.18456555   0 0.000 #> 285 285  1.0677512  1.18456555   0 0.000 #> 286 286 -0.0582946  1.25680142   0 0.000 #> 287 287  0.0251162  1.25680142   0 0.000 #> 288 288  0.1085270  1.25680142   0 0.000 #> 289 289  0.1919378  1.25680142   0 0.000 #> 290 290  0.2753486  1.25680142   0 0.000 #> 291 291  0.3587594  1.25680142   0 0.000 #> 292 292  0.4421702  1.25680142   0 0.000 #> 293 293  0.5255810  1.25680142   0 0.000 #> 294 294  0.6089918  1.25680142   0 0.000 #> 295 295  0.6924026  1.25680142   0 0.000 #> 296 296  0.7758134  1.25680142   0 0.000 #> 297 297  0.8592242  1.25680142   0 0.000 #> 298 298  0.9426350  1.25680142   0 0.000 #> 299 299  1.0260458  1.25680142   0 0.000 #> 300 300  1.1094566  1.25680142   0 0.000"},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — merge_hexbin_mean","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — merge_hexbin_mean","text":"Extract hexagonal bin mean coordinates corresponding standardize counts.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — merge_hexbin_mean","text":"","code":"merge_hexbin_mean(data_hb, counts_data, centroids_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — merge_hexbin_mean","text":"data_hb tibble embedding components hexagonal bin IDs. counts_data tibble contains hexagon IDs standardise number points within hexagon. centroids_data tibble contains hexagonal bin centroid coordinates hexagon IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — merge_hexbin_mean","text":"tibble contains hexagon ID (h), bin means (c_x, c_y), bin counts (n_h), standardise counts (w_h).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/merge_hexbin_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract hexagonal bin mean coordinates and the corresponding standardize counts. — merge_hexbin_mean","text":"","code":"all_centroids_df <- scurve_model_obj$hb_obj$centroids counts_data <- scurve_model_obj$hb_obj$std_cts umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id merge_hexbin_mean(data_hb = umap_with_hb_id, counts_data = counts_data, centroids_data = all_centroids_df) #> # A tibble: 137 × 5 #>        h   c_x    c_y   n_h   w_h #>    <int> <dbl>  <dbl> <dbl> <dbl> #>  1    34 0.192 0.0440     1 0.001 #>  2    35 0.241 0.0377    10 0.01  #>  3    36 0.325 0.0379     8 0.008 #>  4    37 0.396 0.0401     8 0.008 #>  5    38 0.451 0.0527     2 0.002 #>  6    41 0.757 0.0378     2 0.002 #>  7    42 0.808 0.0299    12 0.012 #>  8    49 0.195 0.0971    11 0.011 #>  9    50 0.269 0.101      9 0.009 #> 10    51 0.363 0.0901     4 0.004 #> # ℹ 127 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_hbe_layouts.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange HBE plot and 2-D layouts — plot_hbe_layouts","title":"Arrange HBE plot and 2-D layouts — plot_hbe_layouts","text":"function arranges HBE plot left 2-D layouts right.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_hbe_layouts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange HBE plot and 2-D layouts — plot_hbe_layouts","text":"","code":"plot_hbe_layouts(plots, design)"},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_hbe_layouts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange HBE plot and 2-D layouts — plot_hbe_layouts","text":"plots list plots include HBE plot 2-D layouts. design design plots need arranged.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_hbe_layouts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange HBE plot and 2-D layouts — plot_hbe_layouts","text":"patchwork object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_hbe_layouts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange HBE plot and 2-D layouts — plot_hbe_layouts","text":"","code":"design <- gen_design(n_right = 4, ncol_right = 2) plot_hbe_layouts(plots = scurve_plts, design = design)"},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Projected Data with Axes and Circles — plot_proj","title":"Plot Projected Data with Axes and Circles — plot_proj","text":"Plot Projected Data Axes Circles","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Projected Data with Axes and Circles — plot_proj","text":"","code":"plot_proj(   proj_obj,   point_param = c(1, 0.3, \"#66B2CC\"),   line_param = c(0.5, 0.5, \"#000000\"),   plot_limits,   axis_text_size = 3,   is_category = FALSE )"},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Projected Data with Axes and Circles — plot_proj","text":"proj_obj object contains tibble containing projected data, tibble containing model reference data, list specifying axes details, list defining circle parameters. point_param vector specifying point size, alpha, color (default: c(1, 0.3, \"#66B2CC\")). line_param vector specifying line width, alpha, color (default: c(0.5, 0.5, \"#000000\")). plot_limits Limits plot axes. axis_text_size Size axis text (default: 3). is_category Logical indicating data categorical (default: FALSE).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_proj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Projected Data with Axes and Circles — plot_proj","text":"ggplot object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_proj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Projected Data with Axes and Circles — plot_proj","text":"","code":"projection_df <- cbind( c(-0.17353,-0.02906,0.19857,0.00037,0.00131,-0.05019,0.03371), c(-0.10551,0.14829,-0.02063,0.02658,-0.03150,0.19698,0.00044))  df_bin <- scurve_model_obj$model_highd edge_data <- scurve_model_obj$trimesh_data  proj_obj1 <- get_projection(projection = projection_df, proj_scale = 1, highd_data = scurve, model_highd = df_bin, trimesh_data = edge_data, axis_param = list(limits = 1, axis_scaled = 3, axis_pos_x = -0.72, axis_pos_y = -0.72, threshold = 0.09)) #> New names: #> • `` -> `...1` #> • `` -> `...2` #> New names: #> • `` -> `...1` #> • `` -> `...2`  plot_proj(proj_obj = proj_obj1, plot_limits = c(-1, 1))"},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_rmse_layouts.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange RMSE plot and 2-D layouts — plot_rmse_layouts","title":"Arrange RMSE plot and 2-D layouts — plot_rmse_layouts","text":"function arranges RMSE plot left 2-D layouts right.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_rmse_layouts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange RMSE plot and 2-D layouts — plot_rmse_layouts","text":"","code":"plot_rmse_layouts(plots, design)"},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_rmse_layouts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange RMSE plot and 2-D layouts — plot_rmse_layouts","text":"plots list plots include RMSE plot 2-D layouts. design design plots need arranged.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_rmse_layouts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange RMSE plot and 2-D layouts — plot_rmse_layouts","text":"patchwork object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/plot_rmse_layouts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange RMSE plot and 2-D layouts — plot_rmse_layouts","text":"","code":"design <- gen_design(n_right = 4, ncol_right = 2) plot_rmse_layouts(plots = scurve_plts, design = design)"},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_2d_embeddings.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict 2D Embeddings — predict_2d_embeddings","title":"Predict 2D Embeddings — predict_2d_embeddings","text":"Given test dataset, centroid coordinates hexagonal bins  2D high-dimensional space, predict 2D embeddings data point test dataset.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_2d_embeddings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict 2D Embeddings — predict_2d_embeddings","text":"","code":"predict_2d_embeddings(test_data, df_bin_centroids, df_bin, type_NLDR = \"UMAP\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_2d_embeddings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict 2D Embeddings — predict_2d_embeddings","text":"test_data test dataset containing high-dimensional coordinates unique identifier. df_bin_centroids Centroid coordinates hexagonal bins 2D space. df_bin Centroid coordinates hexagonal bins high dimensions. type_NLDR type non-linear dimensionality reduction (NLDR) used. Default \"UMAP\".","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_2d_embeddings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict 2D Embeddings — predict_2d_embeddings","text":"list contains predicted 2D embeddings, ID test data, predicted hexagonal IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_2d_embeddings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict 2D Embeddings — predict_2d_embeddings","text":"","code":"training_data <- s_curve_noise_training num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. hex_bin_obj <- generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. all_centroids_df <- as.data.frame(do.call(cbind, hex_bin_obj$full_grid_hex_centroids)) counts_df <- as.data.frame(do.call(cbind, hex_bin_obj$hex_id_with_std_counts)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df, counts_df = counts_df) UMAP_data_with_hb_id <- hex_bin_obj$nldr_data_with_hex_id df_all <- dplyr::bind_cols(training_data |> dplyr::select(-ID), UMAP_data_with_hb_id) df_bin <- avg_highD_data(df_all, column_start_text = \"x\") predict_2d_embeddings(test_data = s_curve_noise_training, df_bin_centroids = df_bin_centroids, df_bin = df_bin, type_NLDR = \"UMAP\") #> $pred_UMAP_1 #>  [1] 0.1732051 0.6928203 0.8660254 0.1732051 0.1732051 0.8660254 0.6928203 #>  [8] 0.6928203 0.6928203 0.8660254 0.6928203 0.1732051 1.0392305 0.0000000 #> [15] 0.6928203 0.6928203 0.1732051 0.6928203 0.5196152 0.1732051 0.6928203 #> [22] 0.1732051 0.0000000 0.8660254 0.8660254 0.3464102 0.5196152 0.6928203 #> [29] 0.3464102 0.6928203 0.8660254 0.8660254 0.6928203 0.1732051 0.8660254 #> [36] 0.1732051 0.6928203 0.8660254 0.8660254 0.0000000 0.5196152 0.8660254 #> [43] 0.3464102 0.8660254 0.8660254 0.6928203 0.1732051 0.0000000 0.8660254 #> [50] 0.0000000 0.6928203 0.6928203 0.8660254 0.3464102 0.6928203 0.8660254 #> [57] 0.8660254 1.0392305 1.0392305 0.5196152 0.8660254 1.0392305 0.5196152 #> [64] 0.8660254 0.3464102 0.3464102 1.0392305 0.8660254 0.6928203 1.0392305 #> [71] 0.8660254 0.5196152 0.1732051 0.3464102 1.0392305 #>  #> $pred_UMAP_2 #>  [1]  0.45  0.75  1.05 -0.15  0.45  1.65  0.75  0.75  0.75  1.65  0.75  0.45 #> [13]  1.35  0.15  0.75  1.35  0.45  1.35  0.45 -0.15  0.75 -0.15  0.15  1.65 #> [25]  1.05  0.15  0.45  0.75  0.15  0.75  1.05  1.65  0.75  0.45  1.65 -0.15 #> [37]  1.35  1.65  1.65  0.15  0.45  1.05  0.15  1.05  1.05  1.35 -0.15  0.15 #> [49]  1.65  0.15  0.75  0.75  1.65  0.15  1.35  1.65  1.05  1.35  1.35  0.45 #> [61]  1.65  1.35  0.45  1.65  0.15  0.15  1.35  1.05  1.35  1.35  1.65  0.45 #> [73] -0.15  0.15  1.35 #>  #> $ID #>  [1]   1   2   3   4   6   7   8   9  11  12  14  15  16  17  19  20  21  22  23 #> [20]  24  25  26  31  33  34  35  37  38  39  40  41  42  43  44  45  46  47  51 #> [39]  52  54  55  56  57  59  60  62  63  64  65  66  67  69  70  71  72  73  74 #> [58]  75  76  77  78  79  80  81  84  87  89  91  93  94  95  96  97  99 100 #>  #> $pred_hb_id #>  [1] 12 18 24  2 12 34 18 18 18 34 18 12 29  6 18 28 12 28 13  2 18  2  6 34 24 #> [26]  7 13 18  7 18 24 34 18 12 34  2 28 34 34  6 13 24  7 24 24 28  2  6 34  6 #> [51] 18 18 34  7 28 34 24 29 29 13 34 29 13 34  7  7 29 24 28 29 34 13  2  7 29 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_emb.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict 2-D embeddings — predict_emb","title":"Predict 2-D embeddings — predict_emb","text":"Given test dataset, centroid coordinates hexagonal bins  2-D high-dimensional space, predict 2-D embeddings data point test dataset.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_emb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict 2-D embeddings — predict_emb","text":"","code":"predict_emb(highd_data, model_2d, model_highd)"},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_emb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict 2-D embeddings — predict_emb","text":"highd_data tibble contains high-dimensional data unique identifier. model_2d Centroid coordinates hexagonal bins 2-D space. model_highd Centroid coordinates hexagonal bins high dimensions.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_emb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict 2-D embeddings — predict_emb","text":"tibble contains predicted 2-D embeddings, ID test data, predicted hexagonal IDs.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_emb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict 2-D embeddings — predict_emb","text":"","code":"predict_emb(highd_data = scurve, model_highd = scurve_model_obj$model_highd, model_2d = scurve_model_obj$model_2d) #> # A tibble: 1,000 × 4 #>    pred_emb_1 pred_emb_2    ID pred_h #>         <dbl>      <dbl> <int>  <int> #>  1      0.234      0.896     1    215 #>  2      0.692      0.534     2    145 #>  3      0.776      0.390     3    116 #>  4      0.192      0.968     4    229 #>  5      0.192      0.968     5    229 #>  6      0.567      1.04      6    249 #>  7      0.192      0.245     7     79 #>  8      0.984      0.607     8    164 #>  9      0.776      0.823     9    206 #> 10      0.943      0.390    10    118 #> # ℹ 990 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_hex_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Hexagonal IDs — predict_hex_id","title":"Predict Hexagonal IDs — predict_hex_id","text":"function predicts hexagonal IDs test set based existing bin centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_hex_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Hexagonal IDs — predict_hex_id","text":"","code":"predict_hex_id(df_bin_centroids, nldr_df_test, x = \"UMAP1\", y = \"UMAP2\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_hex_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Hexagonal IDs — predict_hex_id","text":"df_bin_centroids training dataset containing high-dimensional data IDs. nldr_df_test non-linear dimensionality reductions need find prediction. x name column contains first 2D embeddings component. y name column contains second 2D embeddings component.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_hex_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Hexagonal IDs — predict_hex_id","text":"data frame containing prediced hexID 2D embedding data","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/predict_hex_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Hexagonal IDs — predict_hex_id","text":"","code":"num_bins_x <- 4 shape_value <- 1.833091 hexbin_data_object <- extract_hexbin_mean(nldr_df = s_curve_noise_umap, num_bins_x, shape_val = shape_value) df_bin_centroids <- hexbin_data_object$hexdf_data predict_hex_id(df_bin_centroids = df_bin_centroids, nldr_df_test = s_curve_noise_umap, x = \"UMAP1\", y = \"UMAP2\") #> # A tibble: 75 × 4 #>     UMAP1    UMAP2    ID pred_hb_id #>     <dbl>    <dbl> <int>      <dbl> #>  1 -2.81  -3.91        1          6 #>  2  0.959 -0.00271     2         24 #>  3  1.54   0.462       3         29 #>  4 -2.31  -5.50        4          2 #>  5 -1.76  -3.46        6         12 #>  6  1.53   5.75        7         44 #>  7  0.930 -0.175       8         24 #>  8  0.319 -1.61        9         18 #>  9  1.37   0.0541     11         24 #> 10  1.90   4.94       12         45 #> # ℹ 65 more rows"},{"path":"https://jayanilakshika.github.io/quollr/reference/quad.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve Quadratic Equation for Positive Real Roots — quad","title":"Solve Quadratic Equation for Positive Real Roots — quad","text":"function solves quadratic equation form `ax^2 + bx + c = 0` returns positive real roots. handles complex intermediate calculations returns real numbers roots real.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/quad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve Quadratic Equation for Positive Real Roots — quad","text":"","code":"quad(a = 3, b = 2, c = -1)"},{"path":"https://jayanilakshika.github.io/quollr/reference/quad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve Quadratic Equation for Positive Real Roots — quad","text":"coefficient x^2 term. Can complex. b coefficient x term. c constant term.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/quad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve Quadratic Equation for Positive Real Roots — quad","text":"numeric vector containing positive real root(s) quadratic equation.         Returns `numeric(0)` positive real roots found.         Returns single value positive roots identical.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/quad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve Quadratic Equation for Positive Real Roots — quad","text":"","code":"# Example 1: With specific coefficients quad(a = 1, b = -3, c = 2) # x^2 - 3x + 2 = 0 #> [1] 2 1"},{"path":"https://jayanilakshika.github.io/quollr/reference/remove_long_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Long Edges from a Triangular Mesh Plot — remove_long_edges","title":"Remove Long Edges from a Triangular Mesh Plot — remove_long_edges","text":"function removes long edges triangular mesh plot based benchmark value.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/remove_long_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Long Edges from a Triangular Mesh Plot — remove_long_edges","text":"","code":"remove_long_edges(   distance_edges,   benchmark_value,   tr_from_to_df_coord,   distance_col )"},{"path":"https://jayanilakshika.github.io/quollr/reference/remove_long_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Long Edges from a Triangular Mesh Plot — remove_long_edges","text":"distance_edges data frame containing edge information. benchmark_value threshold value determine long edges. tr_from_to_df_coord data frame containing columns x y coordinates start end points. distance_col column name `distance_edges` representing distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/remove_long_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Long Edges from a Triangular Mesh Plot — remove_long_edges","text":"ggplot object triangular mesh plot long edges removed.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/remove_long_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Long Edges from a Triangular Mesh Plot — remove_long_edges","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,                                         x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,                                         y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled,                                              x = \"UMAP1\", y = \"UMAP2\",                                              num_bins_x = num_bins_x,                                              num_bins_y = num_bins_y,                                              x_start = NA, y_start = NA,                                              buffer_x = NA,                                              buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. all_centroids_df <- as.data.frame(do.call(cbind, centroid_list)) s_curve_noise_umap_scaled_rm_id <- s_curve_noise_umap_scaled |> dplyr::select(-ID) nldr_with_hb_id_list <- assign_data(nldr_df = s_curve_noise_umap_scaled_rm_id, centroid_df = all_centroids_df) umap_with_hb_id <- as.data.frame(do.call(cbind, nldr_with_hb_id_list)) std_counts_list <- compute_std_counts(nldr_df_with_hex_id = umap_with_hb_id) counts_df <- as.data.frame(do.call(cbind, std_counts_list)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df,  counts_df = counts_df) tr1_object <- triangulate_bin_centroids(hex_bin_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") #> Warning: triangle collapsed! #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> Warning: three points coincide or are collinear! tr_from_to_df <- generate_edge_info(triangular_object = tr1_object) distance_df <- cal_2d_dist(tr_from_to_df_coord = tr_from_to_df, start_x = \"x_from\", start_y = \"y_from\", end_x = \"x_to\", end_y = \"y_to\", select_col_vec = c(\"from\", \"to\", \"distance\")) remove_long_edges(distance_edges = distance_df, benchmark_value = 0.75, tr_from_to_df_coord = tr_from_to_df, distance_col = \"distance\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise.html","id":null,"dir":"Reference","previous_headings":"","what":"S-curve dataset with noise dimensions — s_curve_noise","title":"S-curve dataset with noise dimensions — s_curve_noise","text":"`s_curve_noise` dataset contains 3-dimensional S-curve added noise dimensions. data point represented seven dimensions (x1 x7) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S-curve dataset with noise dimensions — s_curve_noise","text":"","code":"data(s_curve_noise)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S-curve dataset with noise dimensions — s_curve_noise","text":"data frame 100 rows 8 columns: ID Identification number x1, x2, x3, x4, x5, x6, x7 High-dimensional coordinates","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"S-curve dataset with noise dimensions — s_curve_noise","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S-curve dataset with noise dimensions — s_curve_noise","text":"","code":"# Load the s_curve_noise dataset data(s_curve_noise)  # Display the first few rows of the dataset head(s_curve_noise) #> # A tibble: 6 × 8 #>        x1     x2       x3       x4       x5      x6        x7    ID #>     <dbl>  <dbl>    <dbl>    <dbl>    <dbl>   <dbl>     <dbl> <int> #> 1 -0.120  1.64   -1.99     0.0104   0.0125   0.0923 -0.00128      1 #> 2 -0.0492 1.51    0.00121 -0.0177   0.00726 -0.0362 -0.00535      2 #> 3 -0.774  1.30    0.367   -0.00173  0.0156  -0.0962  0.00335      3 #> 4 -0.606  0.246  -1.80    -0.00897 -0.0187  -0.0716  0.00126      4 #> 5 -0.478  0.0177 -1.88     0.00848  0.00533  0.0998  0.000677     5 #> 6  0.818  0.927  -1.58    -0.00318 -0.00980  0.0989  0.00696      6"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_test.html","id":null,"dir":"Reference","previous_headings":"","what":"S-curve dataset with noise dimensions for test — s_curve_noise_test","title":"S-curve dataset with noise dimensions for test — s_curve_noise_test","text":"`s_curve_noise_test` dataset contains test data dimensions x1, x2, x3, x4, x5, x6, x7. data point identified ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S-curve dataset with noise dimensions for test — s_curve_noise_test","text":"","code":"data(s_curve_noise_test)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S-curve dataset with noise dimensions for test — s_curve_noise_test","text":"data frame 25 rows 8 columns: ID Identification number x1, x2, x3, x4, x5, x6, x7 High-dimensional coordinates","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"S-curve dataset with noise dimensions for test — s_curve_noise_test","text":"dataset generated training purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S-curve dataset with noise dimensions for test — s_curve_noise_test","text":"","code":"# Load the s_curve_noise_test dataset data(s_curve_noise_test)  # Display the first few rows of the dataset head(s_curve_noise_test) #> # A tibble: 6 × 8 #>        x1    x2       x3       x4       x5      x6        x7    ID #>     <dbl> <dbl>    <dbl>    <dbl>    <dbl>   <dbl>     <dbl> <int> #> 1 -0.606  0.246 -1.80    -0.00897 -0.0187  -0.0716  0.00126      4 #> 2 -0.0691 1.59   0.00239  0.0127  -0.0130   0.0396 -0.000185     8 #> 3  0.513  1.02   1.86     0.0141  -0.0149   0.0619 -0.00309     13 #> 4  0.869  0.576 -0.505   -0.0196   0.00169 -0.0197  0.00597     14 #> 5 -0.737  1.94  -1.68     0.00601 -0.0113   0.0301 -0.00988     17 #> 6 -0.795  0.488  1.61    -0.0126   0.0131  -0.0956 -0.00283     20"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_training.html","id":null,"dir":"Reference","previous_headings":"","what":"S-curve dataset with noise dimensions for training — s_curve_noise_training","title":"S-curve dataset with noise dimensions for training — s_curve_noise_training","text":"`s_curve_noise_training` dataset contains training data dimensions x1, x2, x3, x4, x5, x6, x7. data point identified ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_training.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S-curve dataset with noise dimensions for training — s_curve_noise_training","text":"","code":"data(s_curve_noise_training)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_training.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S-curve dataset with noise dimensions for training — s_curve_noise_training","text":"data frame 75 rows 8 columns: ID Identification number x1, x2, x3, x4, x5, x6, x7 High-dimensional coordinates","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_training.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"S-curve dataset with noise dimensions for training — s_curve_noise_training","text":"dataset generated training purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_training.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S-curve dataset with noise dimensions for training — s_curve_noise_training","text":"","code":"# Load the s_curve_noise_training dataset data(s_curve_noise_training)  # Display the first few rows of the dataset head(s_curve_noise_training) #> # A tibble: 6 × 8 #>        x1     x2       x3       x4       x5      x6        x7    ID #>     <dbl>  <dbl>    <dbl>    <dbl>    <dbl>   <dbl>     <dbl> <int> #> 1 -0.120  1.64   -1.99     0.0104   0.0125   0.0923 -0.00128      1 #> 2 -0.0492 1.51    0.00121 -0.0177   0.00726 -0.0362 -0.00535      2 #> 3 -0.774  1.30    0.367   -0.00173  0.0156  -0.0962  0.00335      3 #> 4 -0.478  0.0177 -1.88     0.00848  0.00533  0.0998  0.000677     5 #> 5  0.818  0.927  -1.58    -0.00318 -0.00980  0.0989  0.00696      6 #> 6  0.910  1.40    1.42     0.00699 -0.0182  -0.0710  0.00966      7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap","text":"`s_curve_noise_umap` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap","text":"","code":"data(s_curve_noise_umap)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap","text":"## `s_curve_noise_umap` data frame 75 rows 3 columns: UMAP1 Numeric, first UMAP 2D embeddings. UMAP2 Numeric, second UMAP 2D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap","text":"","code":"# Load the s_curve_noise_umap dataset data(s_curve_noise_umap)  # Display the first few rows of the dataset head(s_curve_noise_umap) #> # A tibble: 6 × 3 #>    emb1    emb2    ID #>   <dbl>   <dbl> <int> #> 1 -6.51 10.1        1 #> 2  7.62 -0.0782     2 #> 3  7.15 -4.08       3 #> 4 -5.53  2.00       5 #> 5  1.10  9.20       6 #> 6 -9.37 -5.71       7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap2.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap2","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap2","text":"`s_curve_noise_umap2` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap2","text":"","code":"data(s_curve_noise_umap2)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap2","text":"## `s_curve_noise_umap2` data frame 75 rows 3 columns: UMAP1 Numeric, first UMAP 2D embeddings. UMAP2 Numeric, second UMAP 2D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap2","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap2","text":"","code":"# Load the s_curve_noise_umap2 dataset data(s_curve_noise_umap2)  # Display the first few rows of the dataset head(s_curve_noise_umap2) #> # A tibble: 6 × 3 #>    emb1   emb2    ID #>   <dbl>  <dbl> <int> #> 1  5.78 -7.64      1 #> 2 -8.26  0.821     2 #> 3 -6.76  3.86      3 #> 4  5.69 -1.58      5 #> 5 -1.46 -6.36      6 #> 6  7.92  4.56      7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap3.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap3","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap3","text":"`s_curve_noise_umap3` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap3","text":"","code":"data(s_curve_noise_umap3)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap3","text":"## `s_curve_noise_umap3` data frame 75 rows 3 columns: UMAP1 Numeric, first UMAP 2D embeddings. UMAP2 Numeric, second UMAP 2D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap3","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap3","text":"","code":"# Load the s_curve_noise_umap3 dataset data(s_curve_noise_umap3)  # Display the first few rows of the dataset head(s_curve_noise_umap3) #> # A tibble: 6 × 3 #>     emb1  emb2    ID #>    <dbl> <dbl> <int> #> 1 -2.07   8.13     1 #> 2  4.51  -1.26     2 #> 3  3.63  -3.09     3 #> 4 -4.13   4.61     5 #> 5  0.961  5.46     6 #> 6 -5.94  -6.10     7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap4.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap4","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap4","text":"`s_curve_noise_umap4` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap4","text":"","code":"data(s_curve_noise_umap4)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap4","text":"## `s_curve_noise_umap4` data frame 75 rows 3 columns: UMAP1 Numeric, first UMAP 2D embeddings. UMAP2 Numeric, second UMAP 2D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap4","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap4","text":"","code":"# Load the s_curve_noise_umap4 dataset data(s_curve_noise_umap4)  # Display the first few rows of the dataset head(s_curve_noise_umap4) #> # A tibble: 6 × 3 #>    emb1  emb2    ID #>   <dbl> <dbl> <int> #> 1  4.19 -7.99     1 #> 2 -8.72  1.94     2 #> 3 -6.24  4.58     3 #> 4  6.68 -7.98     5 #> 5 -1.00 -5.75     6 #> 6  7.74  9.30     7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap5.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap5","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap5","text":"`s_curve_noise_umap5` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap5","text":"","code":"data(s_curve_noise_umap5)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap5","text":"## `s_curve_noise_umap5` data frame 75 rows 3 columns: UMAP1 Numeric, first UMAP 2D embeddings. UMAP2 Numeric, second UMAP 2D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap5.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap5","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap5","text":"","code":"# Load the s_curve_noise_umap5 dataset data(s_curve_noise_umap5)  # Display the first few rows of the dataset head(s_curve_noise_umap5) #> # A tibble: 6 × 3 #>     emb1   emb2    ID #>    <dbl>  <dbl> <int> #> 1  -5.22  6.39      1 #> 2   8.18 -0.255     2 #> 3   6.36 -3.32      3 #> 4  -6.01  7.60      5 #> 5   1.38  7.93      6 #> 6 -10.2  -7.36      7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap6.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap6","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap6","text":"`s_curve_noise_umap6` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap6","text":"","code":"data(s_curve_noise_umap6)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap6","text":"## `s_curve_noise_umap6` data frame 75 rows 3 columns: UMAP1 Numeric, first UMAP 2D embeddings. UMAP2 Numeric, second UMAP 2D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap6","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap6","text":"","code":"# Load the s_curve_noise_umap6 dataset data(s_curve_noise_umap6)  # Display the first few rows of the dataset head(s_curve_noise_umap6) #> # A tibble: 6 × 3 #>     emb1  emb2    ID #>    <dbl> <dbl> <int> #> 1 -3.31   8.43     1 #> 2  9.44  -2.67     2 #> 3  7.13  -4.73     3 #> 4 -6.02   3.38     5 #> 5  0.621  6.17     6 #> 6 -7.75  -8.18     7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_predict","title":"Predicted UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_predict","text":"`s_curve_noise_umap_predict` dataset contains predicted UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_predict","text":"","code":"data(s_curve_noise_umap_predict)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_predict.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Predicted UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_predict","text":"## `s_curve_noise_umap_predict` data frame 75 rows 3 columns: UMAP1 Numeric, predicted first UMAP 2D embeddings. UMAP2 Numeric, predicted second UMAP 2D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_predict.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_predict","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicted UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_predict","text":"","code":"# Load the s_curve_noise_umap_predict dataset data(s_curve_noise_umap_predict)  # Display the first few rows of the dataset head(s_curve_noise_umap_predict) #> # A tibble: 6 × 3 #>     emb1  emb2    ID #>    <dbl> <dbl> <int> #> 1 -6.40   3.50     4 #> 2  9.55  -3.05     8 #> 3 -5.77  -6.76    13 #> 4  5.56   3.99    14 #> 5 -6.15   8.82    17 #> 6  0.342 -5.10    20"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_scaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaled UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_scaled","title":"Scaled UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_scaled","text":"`s_curve_noise_umap_scaled` dataset contains scaled UMAP (Uniform Manifold Approximation Projection) embeddings.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_scaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaled UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_scaled","text":"","code":"data(s_curve_noise_umap_scaled)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_scaled.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scaled UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_scaled","text":"## `s_curve_noise_umap_scaled` data frame 25 rows 3 columns: UMAP1 Numeric, Scaled first UMAP 2D embeddings. UMAP2 Numeric, Scaled second UMAP 2D embedding. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_scaled.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Scaled UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_scaled","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_noise_umap_scaled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scaled UMAP embedding for S-curve dataset which with noise dimensions — s_curve_noise_umap_scaled","text":"","code":"# Load the s_curve_noise_umap_scaled dataset data(s_curve_noise_umap_scaled)  # Display the first few rows of the dataset head(s_curve_noise_umap_scaled) #> # A tibble: 6 × 3 #>    emb1  emb2    ID #>   <dbl> <dbl> <int> #> 1 0.270 0.839     1 #> 2 0.788 0.466     2 #> 3 0.771 0.319     3 #> 4 0.306 0.542     5 #> 5 0.549 0.806     6 #> 6 0.166 0.259     7"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Object for S-curve dataset — s_curve_obj","title":"Object for S-curve dataset — s_curve_obj","text":"`s_curve_obj` contains object scaled umap embedding, x y limits, range y; object hexagonal binning information, object high-d model fitted umap embedding training data, triangular object representing triangulated bin centroids, tibble contains edge information, tibble edge distance information.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object for S-curve dataset — s_curve_obj","text":"","code":"data(s_curve_obj)"},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_obj.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object for S-curve dataset — s_curve_obj","text":"## `s_curve_obj` object 6 elements","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_obj.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Object for S-curve dataset — s_curve_obj","text":"object generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/s_curve_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object for S-curve dataset — s_curve_obj","text":"","code":"# Load the s_curve_obj data(s_curve_obj)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve.html","id":null,"dir":"Reference","previous_headings":"","what":"S-curve dataset with noise dimensions — scurve","title":"S-curve dataset with noise dimensions — scurve","text":"`scurve` dataset contains 3-dimensional S-curve added noise dimensions. data point represented seven dimensions (x1 x7) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S-curve dataset with noise dimensions — scurve","text":"","code":"data(scurve)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S-curve dataset with noise dimensions — scurve","text":"data frame 5000 rows 8 columns: ID Identification number x1, x2, x3, x4, x5, x6, x7 High-dimensional coordinates","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"S-curve dataset with noise dimensions — scurve","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S-curve dataset with noise dimensions — scurve","text":"","code":"# Load the scurve dataset data(scurve)  # Display the first few rows of the dataset head(scurve) #> # A tibble: 6 × 8 #>        x1    x2       x3       x4       x5      x6        x7    ID #>     <dbl> <dbl>    <dbl>    <dbl>    <dbl>   <dbl>     <dbl> <int> #> 1 -0.120  0.819 -1.99     0.0114   0.00351  0.0334  0.00638      1 #> 2 -0.0492 0.166  0.00121  0.0115  -0.0166  -0.0297  0.00509      2 #> 3 -0.774  0.651  0.367   -0.0172   0.00600  0.0211  0.00303      3 #> 4 -0.606  0.952 -1.80     0.0157  -0.00978 -0.0590 -0.00754      4 #> 5 -0.478  1.10  -1.88    -0.00423  0.00495 -0.0482 -0.00982      5 #> 6  0.818  1.78  -1.58     0.0124   0.0198   0.0560 -0.000730     6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_model_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Object for S-curve dataset — scurve_model_obj","title":"Object for S-curve dataset — scurve_model_obj","text":"`scurve_model_obj` contains object scaled umap embedding, x y limits, range y; object hexagonal binning information, object high-d model fitted umap embedding training data, triangular object representing triangulated bin centroids, tibble contains edge information, tibble edge distance information.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_model_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object for S-curve dataset — scurve_model_obj","text":"","code":"data(scurve_model_obj)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_model_obj.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object for S-curve dataset — scurve_model_obj","text":"## `scurve_model_obj` object five elements nldr_scaled_obj tibble contains scaled first second columns NLDR   data, numeric vectors representing limits original NLDR data. hb_obj object contains hexagonal binning information. model_highd tibble high-dimensional model. model_2d tibble containing hexagonal bin centroids 2-D trimesh_data tibble contains edge information.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_model_obj.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Object for S-curve dataset — scurve_model_obj","text":"object generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_model_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object for S-curve dataset — scurve_model_obj","text":"","code":"# Load the scurve_model_obj data(scurve_model_obj)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_plts.html","id":null,"dir":"Reference","previous_headings":"","what":"List of plots — scurve_plts","title":"List of plots — scurve_plts","text":"`scurve_plts` contains RMSE plot 2-D NLDR layouts `scurve_umap`, `scurve_umap2`, `scurve_umap3`, `scurve_umap4`","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_plts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of plots — scurve_plts","text":"","code":"scurve_plts"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_plts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of plots — scurve_plts","text":"## `scurve_plts` list 5 elements: scurve_plts[[1]] ggplot object, RMSE plot. scurve_plts[[2]] ggplot object, 2-D NLDR layout `scurve_umap`. scurve_plts[[3]] ggplot object, 2-D NLDR layout `scurve_umap2`. scurve_plts[[4]] ggplot object, 2-D NLDR layout `scurve_umap3`. scurve_plts[[5]] ggplot object, 2-D NLDR layout `scurve_umap4`.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_plts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"List of plots — scurve_plts","text":"list plots generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_plts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of plots — scurve_plts","text":"","code":"# Show the scurve_plts scurve_plts #> [[1]]  #>  #> [[2]]  #>  #> [[3]]  #>  #> [[4]]  #>  #> [[5]]  #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.1 — scurve_umap","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.1 — scurve_umap","text":"`scurve_umap` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.1 — scurve_umap","text":"","code":"data(scurve_umap)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.1 — scurve_umap","text":"## `scurve_umap` data frame 5000 rows 3 columns: UMAP1 Numeric, first UMAP 2-D embeddings. UMAP2 Numeric, second UMAP 2-D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.1 — scurve_umap","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.1 — scurve_umap","text":"","code":"# Load the scurve_umap dataset data(scurve_umap)  # Display the first few rows of the dataset head(scurve_umap) #> # A tibble: 6 × 3 #>    emb1   emb2    ID #>   <dbl>  <dbl> <int> #> 1 -4.24  5.80      1 #> 2  3.19 -0.851     2 #> 3  4.65 -3.31      3 #> 4 -6.08  6.50      4 #> 5 -5.29  7.03      5 #> 6  1.35  8.19      6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap2.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for `scurve` with n_neighbors = 10 and min_dist = 0.4 — scurve_umap2","title":"UMAP embedding for `scurve` with n_neighbors = 10 and min_dist = 0.4 — scurve_umap2","text":"`scurve_umap2` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for `scurve` with n_neighbors = 10 and min_dist = 0.4 — scurve_umap2","text":"","code":"data(scurve_umap2)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for `scurve` with n_neighbors = 10 and min_dist = 0.4 — scurve_umap2","text":"## `scurve_umap2` data frame 5000 rows 3 columns: UMAP1 Numeric, first UMAP 2-D embeddings. UMAP2 Numeric, second UMAP 2-D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for `scurve` with n_neighbors = 10 and min_dist = 0.4 — scurve_umap2","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for `scurve` with n_neighbors = 10 and min_dist = 0.4 — scurve_umap2","text":"","code":"# Load the scurve_umap2 dataset data(scurve_umap2)  # Display the first few rows of the dataset head(scurve_umap2) #> # A tibble: 6 × 3 #>     emb1  emb2    ID #>    <dbl> <dbl> <int> #> 1  3.32  -6.31     1 #> 2 -9.39   5.09     2 #> 3 -6.51   5.76     3 #> 4  6.10  -5.03     4 #> 5  5.71  -4.76     5 #> 6 -0.255 -2.95     6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap3.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for `scurve` with n_neighbors = 62 and min_dist = 0.1 — scurve_umap3","title":"UMAP embedding for `scurve` with n_neighbors = 62 and min_dist = 0.1 — scurve_umap3","text":"`scurve_umap3` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for `scurve` with n_neighbors = 62 and min_dist = 0.1 — scurve_umap3","text":"","code":"data(scurve_umap3)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for `scurve` with n_neighbors = 62 and min_dist = 0.1 — scurve_umap3","text":"## `scurve_umap3` data frame 5000 rows 3 columns: UMAP1 Numeric, first UMAP 2-D embeddings. UMAP2 Numeric, second UMAP 2-D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for `scurve` with n_neighbors = 62 and min_dist = 0.1 — scurve_umap3","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for `scurve` with n_neighbors = 62 and min_dist = 0.1 — scurve_umap3","text":"","code":"# Load the scurve_umap3 dataset data(scurve_umap3)  # Display the first few rows of the dataset head(scurve_umap3) #> # A tibble: 6 × 3 #>    emb1  emb2    ID #>   <dbl> <dbl> <int> #> 1 -1.89  5.98     1 #> 2  4.21 -1.80     2 #> 3  3.15 -3.03     3 #> 4 -2.91  6.98     4 #> 5 -2.56  7.17     5 #> 6  1.08  5.87     6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap4.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for `scurve` with n_neighbors = 30 and min_dist = 0.5 — scurve_umap4","title":"UMAP embedding for `scurve` with n_neighbors = 30 and min_dist = 0.5 — scurve_umap4","text":"`scurve_umap4` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for `scurve` with n_neighbors = 30 and min_dist = 0.5 — scurve_umap4","text":"","code":"data(scurve_umap4)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for `scurve` with n_neighbors = 30 and min_dist = 0.5 — scurve_umap4","text":"## `scurve_umap4` data frame 5000 rows 3 columns: UMAP1 Numeric, first UMAP 2-D embeddings. UMAP2 Numeric, second UMAP 2-D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for `scurve` with n_neighbors = 30 and min_dist = 0.5 — scurve_umap4","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for `scurve` with n_neighbors = 30 and min_dist = 0.5 — scurve_umap4","text":"","code":"# Load the scurve_umap4 dataset data(scurve_umap4)  # Display the first few rows of the dataset head(scurve_umap4) #> # A tibble: 6 × 3 #>     emb1   emb2    ID #>    <dbl>  <dbl> <int> #> 1 -2.54   6.42      1 #> 2  3.63  -0.405     2 #> 3  3.48  -2.88      3 #> 4 -4.34   6.51      4 #> 5 -3.95   5.89      5 #> 6  0.115  2.80      6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap5.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.5 — scurve_umap5","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.5 — scurve_umap5","text":"`scurve_umap5` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.5 — scurve_umap5","text":"","code":"data(scurve_umap5)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.5 — scurve_umap5","text":"## `scurve_umap5` data frame 5000 rows 3 columns: UMAP1 Numeric, first UMAP 2-D embeddings. UMAP2 Numeric, second UMAP 2-D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap5.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.5 — scurve_umap5","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for `scurve` with n_neighbors = 15 and min_dist = 0.5 — scurve_umap5","text":"","code":"# Load the scurve_umap5 dataset data(scurve_umap5)  # Display the first few rows of the dataset head(scurve_umap5) #> # A tibble: 6 × 3 #>     emb1  emb2    ID #>    <dbl> <dbl> <int> #> 1 -5.33  -9.79     1 #> 2 11.4    3.02     2 #> 3  8.27   5.66     3 #> 4 -7.91  -6.87     4 #> 5 -7.17  -6.40     5 #> 6  0.488 -7.92     6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap6.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP embedding for `scurve` with n_neighbors = 46 and min_dist = 0.9 — scurve_umap6","title":"UMAP embedding for `scurve` with n_neighbors = 46 and min_dist = 0.9 — scurve_umap6","text":"`scurve_umap6` dataset contains UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP embedding for `scurve` with n_neighbors = 46 and min_dist = 0.9 — scurve_umap6","text":"","code":"data(scurve_umap6)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UMAP embedding for `scurve` with n_neighbors = 46 and min_dist = 0.9 — scurve_umap6","text":"## `scurve_umap6` data frame 5000 rows 3 columns: UMAP1 Numeric, first UMAP 2-D embeddings. UMAP2 Numeric, second UMAP 2-D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UMAP embedding for `scurve` with n_neighbors = 46 and min_dist = 0.9 — scurve_umap6","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP embedding for `scurve` with n_neighbors = 46 and min_dist = 0.9 — scurve_umap6","text":"","code":"# Load the scurve_umap6 dataset data(scurve_umap6)  # Display the first few rows of the dataset head(scurve_umap6) #> # A tibble: 6 × 3 #>     emb1   emb2    ID #>    <dbl>  <dbl> <int> #> 1 -3.94  -8.86      1 #> 2  7.09   0.591     2 #> 3  6.01   3.34      3 #> 4 -6.20  -3.59      4 #> 5 -5.90  -3.46      5 #> 6 -0.190 -6.56      6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted UMAP embedding for `scurve` data — scurve_umap_predict","title":"Predicted UMAP embedding for `scurve` data — scurve_umap_predict","text":"`scurve_umap_predict` dataset contains predicted UMAP (Uniform Manifold Approximation Projection) embeddings three-dimensional S-curve added noise. data point represented two UMAP coordinates (UMAP1 UMAP2) ID.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted UMAP embedding for `scurve` data — scurve_umap_predict","text":"","code":"data(scurve_umap_predict)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_predict.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Predicted UMAP embedding for `scurve` data — scurve_umap_predict","text":"## `scurve_umap_predict` data frame 5000 rows 3 columns: UMAP1 Numeric, predicted first UMAP 2-D embeddings. UMAP2 Numeric, predicted second UMAP 2-D embeddings. ID Numeric, identifier data point.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_predict.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted UMAP embedding for `scurve` data — scurve_umap_predict","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicted UMAP embedding for `scurve` data — scurve_umap_predict","text":"","code":"# Load the scurve_umap_predict dataset data(scurve_umap_predict)  # Display the first few rows of the dataset head(scurve_umap_predict) #> # A tibble: 6 × 3 #>    emb1   emb2    ID #>   <dbl>  <dbl> <int> #> 1 -4.36  5.70      1 #> 2  2.22 -0.925     2 #> 3  4.46 -3.06      3 #> 4 -5.94  6.48      4 #> 5 -5.24  6.94      5 #> 6  1.54  8.25      6"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary with different number of bins for `scurve_umap` — scurve_umap_rmse","title":"Summary with different number of bins for `scurve_umap` — scurve_umap_rmse","text":"`scurve_umap_rmse` dataset contains error, RMSE, b2, b, m, a1, a2, mean density (d_bar) different number bins x-axis (b1).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary with different number of bins for `scurve_umap` — scurve_umap_rmse","text":"","code":"data(scurve_umap_rmse)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary with different number of bins for `scurve_umap` — scurve_umap_rmse","text":"## `scurve_umap_rmse` data frame 70 rows 10 columns: Error Numeric, model error. RMSE Numeric, Root Mean Square Error. b1 Numeric, number bins along x-axis. b2 Numeric, number bins along y-axis. b Numeric, number total bins. m Numeric, number non-empty bins. a1 Numeric, hexagon bin width. a2 Numeric, hexagon bin height. d_bar Numeric, mean desnity. method Character, NLDR method.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary with different number of bins for `scurve_umap` — scurve_umap_rmse","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary with different number of bins for `scurve_umap` — scurve_umap_rmse","text":"","code":"# Load the scurve_umap_rmse dataset data(scurve_umap_rmse)  # Display the first few rows of the dataset head(scurve_umap_rmse) #>      Error      RMSE b1 b2   b  m   a1   a2      d_bar method #> 1 628.8048 0.4098319  5  7  35 22 0.26 0.23 0.04091470   UMAP #> 2 562.7530 0.3672331  6  8  48 27 0.23 0.20 0.03686260   UMAP #> 3 520.4474 0.3364583  7  9  63 33 0.20 0.17 0.03232767   UMAP #> 4 430.4658 0.2722071  8 11  88 46 0.16 0.14 0.02599600   UMAP #> 5 406.8971 0.2544715  9 12 108 51 0.14 0.12 0.02551305   UMAP #> 6 380.7331 0.2388800 10 13 130 59 0.13 0.11 0.02266418   UMAP"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse2.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary with different number of bins for `scurve_umap2` — scurve_umap_rmse2","title":"Summary with different number of bins for `scurve_umap2` — scurve_umap_rmse2","text":"`scurve_umap_rmse2` dataset contains error, RMSE, b2, b, m, a1, a2, mean density (d_bar) different number bins x-axis (b1).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary with different number of bins for `scurve_umap2` — scurve_umap_rmse2","text":"","code":"data(scurve_umap_rmse2)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary with different number of bins for `scurve_umap2` — scurve_umap_rmse2","text":"## `scurve_umap_rmse2` data frame 70 rows 10 columns: Error Numeric, model error. RMSE Numeric, Root Mean Square Error. b1 Numeric, number bins along x-axis. b2 Numeric, number bins along y-axis. b Numeric, number total bins. m Numeric, number non-empty bins. a1 Numeric, hexagon bin width. a2 Numeric, hexagon bin height. d_bar Numeric, mean desnity. method Character, NLDR method.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary with different number of bins for `scurve_umap2` — scurve_umap_rmse2","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary with different number of bins for `scurve_umap2` — scurve_umap_rmse2","text":"","code":"# Load the scurve_umap_rmse2 dataset data(scurve_umap_rmse2)  # Display the first few rows of the dataset head(scurve_umap_rmse2) #>      Error      RMSE b1 b2   b  m   a1   a2      d_bar method #> 1 678.3037 0.4500205  5  6  30 19 0.27 0.23 0.05414974  UMAP2 #> 2 612.6720 0.4062597  6  7  42 22 0.22 0.19 0.05821772  UMAP2 #> 3 540.2149 0.3487553  7  8  56 30 0.19 0.16 0.04257132  UMAP2 #> 4 472.2827 0.2985088  8  9  72 37 0.17 0.14 0.03659103  UMAP2 #> 5 450.7841 0.2892101  9 10  90 43 0.15 0.13 0.03428832  UMAP2 #> 6 407.4070 0.2574744 10 11 110 52 0.13 0.12 0.02894619  UMAP2"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse3.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary with different number of bins for `scurve_umap3` — scurve_umap_rmse3","title":"Summary with different number of bins for `scurve_umap3` — scurve_umap_rmse3","text":"`scurve_umap_rmse3` dataset contains error, RMSE, b2, b, m, a1, a2, mean density (d_bar) different number bins x-axis (b1).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary with different number of bins for `scurve_umap3` — scurve_umap_rmse3","text":"","code":"data(scurve_umap_rmse3)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary with different number of bins for `scurve_umap3` — scurve_umap_rmse3","text":"## `scurve_umap_rmse3` data frame 70 rows 10 columns: Error Numeric, model error. RMSE Numeric, Root Mean Square Error. b1 Numeric, number bins along x-axis. b2 Numeric, number bins along y-axis. b Numeric, number total bins. m Numeric, number non-empty bins. a1 Numeric, hexagon bin width. a2 Numeric, hexagon bin height. d_bar Numeric, mean desnity. method Character, NLDR method.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary with different number of bins for `scurve_umap3` — scurve_umap_rmse3","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary with different number of bins for `scurve_umap3` — scurve_umap_rmse3","text":"","code":"# Load the scurve_umap_rmse3 dataset data(scurve_umap_rmse3)  # Display the first few rows of the dataset head(scurve_umap_rmse3) #>      Error      RMSE b1 b2   b  m   a1   a2      d_bar method #> 1 580.8831 0.3816431  5 11  55 23 0.27 0.24 0.03485633  UMAP3 #> 2 517.9431 0.3409713  6 13  78 31 0.23 0.20 0.02762972  UMAP3 #> 3 478.0086 0.3102171  7 15 105 38 0.20 0.17 0.02502800  UMAP3 #> 4 446.7043 0.2904024  8 17 136 42 0.17 0.15 0.02675954  UMAP3 #> 5 393.9956 0.2530347  9 20 180 55 0.14 0.12 0.02196088  UMAP3 #> 6 374.9193 0.2392782 10 22 220 63 0.13 0.11 0.02044680  UMAP3"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse4.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary with different number of bins for `scurve_umap4` — scurve_umap_rmse4","title":"Summary with different number of bins for `scurve_umap4` — scurve_umap_rmse4","text":"`scurve_umap_rmse4` dataset contains error, RMSE, b2, b, m, a1, a2, mean density (d_bar) different number bins x-axis (b1).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary with different number of bins for `scurve_umap4` — scurve_umap_rmse4","text":"","code":"data(scurve_umap_rmse4)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary with different number of bins for `scurve_umap4` — scurve_umap_rmse4","text":"## `scurve_umap_rmse4` data frame 70 rows 10 columns: Error Numeric, model error. RMSE Numeric, Root Mean Square Error. b1 Numeric, number bins along x-axis. b2 Numeric, number bins along y-axis. b Numeric, number total bins. m Numeric, number non-empty bins. a1 Numeric, hexagon bin width. a2 Numeric, hexagon bin height. d_bar Numeric, mean desnity. method Character, NLDR method.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary with different number of bins for `scurve_umap4` — scurve_umap_rmse4","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary with different number of bins for `scurve_umap4` — scurve_umap_rmse4","text":"","code":"# Load the scurve_umap_rmse4 dataset data(scurve_umap_rmse4)  # Display the first few rows of the dataset head(scurve_umap_rmse4) #>      Error      RMSE b1 b2   b  m   a1   a2      d_bar method #> 1 647.4267 0.4259840  5  7  35 21 0.30 0.26 0.03539651  UMAP4 #> 2 543.8493 0.3550077  6  9  54 29 0.22 0.19 0.03296446  UMAP4 #> 3 494.4202 0.3171872  7 10  70 34 0.20 0.17 0.03038252  UMAP4 #> 4 429.9829 0.2721302  8 12  96 46 0.16 0.14 0.02479512  UMAP4 #> 5 399.9027 0.2512117  9 13 117 53 0.15 0.13 0.02220613  UMAP4 #> 6 353.1208 0.2208283 10 15 150 66 0.13 0.11 0.01943229  UMAP4"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse5.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary with different number of bins for `scurve_umap5` — scurve_umap_rmse5","title":"Summary with different number of bins for `scurve_umap5` — scurve_umap_rmse5","text":"`scurve_umap_rmse5` dataset contains error, RMSE, b2, b, m, a1, a2, mean density (d_bar) different number bins x-axis (b1).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary with different number of bins for `scurve_umap5` — scurve_umap_rmse5","text":"","code":"data(scurve_umap_rmse5)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary with different number of bins for `scurve_umap5` — scurve_umap_rmse5","text":"## `scurve_umap_rmse5` data frame 70 rows 10 columns: Error Numeric, model error. RMSE Numeric, Root Mean Square Error. b1 Numeric, number bins along x-axis. b2 Numeric, number bins along y-axis. b Numeric, number total bins. m Numeric, number non-empty bins. a1 Numeric, hexagon bin width. a2 Numeric, hexagon bin height. d_bar Numeric, mean desnity. method Character, NLDR method.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse5.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary with different number of bins for `scurve_umap5` — scurve_umap_rmse5","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary with different number of bins for `scurve_umap5` — scurve_umap_rmse5","text":"","code":"# Load the scurve_umap_rmse5 dataset data(scurve_umap_rmse5)  # Display the first few rows of the dataset head(scurve_umap_rmse5) #>      Error      RMSE b1 b2   b  m   a1   a2      d_bar method #> 1 3197.875 0.4262868  5  6  30 22 0.25 0.22 0.04528909  UMAP5 #> 2 3070.927 0.4162682  6  7  42 28 0.21 0.18 0.04026108  UMAP5 #> 3 2605.361 0.3408828  7  8  56 36 0.18 0.16 0.03314387  UMAP5 #> 4 2453.070 0.3217673  8  9  72 44 0.16 0.14 0.02898502  UMAP5 #> 5 2210.033 0.2838858  9 10  90 52 0.14 0.12 0.02626499  UMAP5 #> 6 2025.989 0.2571960 10 11 110 63 0.13 0.11 0.02208671  UMAP5"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse6.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary with different number of bins for `scurve_umap6` — scurve_umap_rmse6","title":"Summary with different number of bins for `scurve_umap6` — scurve_umap_rmse6","text":"`scurve_umap_rmse6` dataset contains error, RMSE, b2, b, m, a1, a2, mean density (d_bar) different number bins x-axis (b1).","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary with different number of bins for `scurve_umap6` — scurve_umap_rmse6","text":"","code":"data(scurve_umap_rmse6)"},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary with different number of bins for `scurve_umap6` — scurve_umap_rmse6","text":"## `scurve_umap_rmse6` data frame 70 rows 10 columns: Error Numeric, model error. RMSE Numeric, Root Mean Square Error. b1 Numeric, number bins along x-axis. b2 Numeric, number bins along y-axis. b Numeric, number total bins. m Numeric, number non-empty bins. a1 Numeric, hexagon bin width. a2 Numeric, hexagon bin height. d_bar Numeric, mean desnity. method Character, NLDR method.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary with different number of bins for `scurve_umap6` — scurve_umap_rmse6","text":"dataset generated illustrative purposes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/scurve_umap_rmse6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary with different number of bins for `scurve_umap6` — scurve_umap_rmse6","text":"","code":"# Load the scurve_umap_rmse6 dataset data(scurve_umap_rmse6)  # Display the first few rows of the dataset head(scurve_umap_rmse6) #>      Error      RMSE b1 b2   b  m   a1   a2      d_bar method #> 1 3212.887 0.4245767  5  6  30 22 0.25 0.22 0.04480434  UMAP6 #> 2 2916.611 0.3822152  6  7  42 26 0.21 0.18 0.04619354  UMAP6 #> 3 2664.346 0.3463970  7  8  56 31 0.18 0.16 0.04422809  UMAP6 #> 4 2394.621 0.3083565  8  9  72 40 0.16 0.14 0.03469648  UMAP6 #> 5 2242.947 0.2826232  9 10  90 44 0.14 0.12 0.03628426  UMAP6 #> 6 2067.747 0.2604085 10 11 110 55 0.13 0.11 0.02867478  UMAP6"},{"path":"https://jayanilakshika.github.io/quollr/reference/show_error_link_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model and error. — show_error_link_plots","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model and error. — show_error_link_plots","text":"function generates LangeviTour visualisation based different conditions input parameters 2-D wireframe.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_error_link_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model and error. — show_error_link_plots","text":"","code":"show_error_link_plots(   point_data,   edge_data,   point_colours = c(\"#66B2CC\", \"#FF7755\"),   point_sizes = c(0, 1) )"},{"path":"https://jayanilakshika.github.io/quollr/reference/show_error_link_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model and error. — show_error_link_plots","text":"point_data tibble contains high-dimensional data, -linear dimension reductions model high-dimensions. edge_data tibble contains wireframe data (). point_colours character vector contains colours points high-dimensional data model. point_sizes numeric vector contains sizes points high-dimensional data model.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_error_link_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model and error. — show_error_link_plots","text":"browsable HTML element.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_error_link_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model and error. — show_error_link_plots","text":"","code":"model_error <- augment(x = scurve_model_obj, highd_data = scurve) df_exe <- comb_all_data_model_error(highd_data = scurve, nldr_data = scurve_umap, model_highd = scurve_model_obj$model_highd, model_2d = scurve_model_obj$model_2d, error_data = model_error) edge_data <- scurve_model_obj$trimesh_data if (interactive()) {   show_error_link_plots(point_data = df_exe, edge_data = edge_data) }"},{"path":"https://jayanilakshika.github.io/quollr/reference/show_langevitour.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the model overlaid on high-dimensional data — show_langevitour","title":"Visualise the model overlaid on high-dimensional data — show_langevitour","text":"function generates langevitour visualise model overlaid high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_langevitour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the model overlaid on high-dimensional data — show_langevitour","text":"","code":"show_langevitour(   point_data,   edge_data,   point_colours = c(\"#66B2CC\", \"#FF7755\"),   point_sizes = c(2, 1) )"},{"path":"https://jayanilakshika.github.io/quollr/reference/show_langevitour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the model overlaid on high-dimensional data — show_langevitour","text":"point_data tibble contains high-dimensional data model high-dimensions. edge_data tibble contains wireframe data (). point_colours character vector contains colours points high-dimensional data model. point_sizes numeric vector contains sizes points high-dimensional data model.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_langevitour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the model overlaid on high-dimensional data — show_langevitour","text":"langevitour object model high-dimensional data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_langevitour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the model overlaid on high-dimensional data — show_langevitour","text":"","code":"df_exe <- comb_data_model(highd_data = scurve, model_highd = scurve_model_obj$model_highd, model_2d = scurve_model_obj$model_2d) edge_data <- scurve_model_obj$trimesh_data if (interactive()) {   show_langevitour(point_data = df_exe, edge_data = edge_data) }"},{"path":"https://jayanilakshika.github.io/quollr/reference/show_link_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model. — show_link_plots","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model. — show_link_plots","text":"function generates LangeviTour visualisation based different conditions input parameters 2-D wireframe.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_link_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model. — show_link_plots","text":"","code":"show_link_plots(   point_data,   edge_data,   point_colours = c(\"#66B2CC\", \"#FF7755\"),   point_sizes = c(0, 1) )"},{"path":"https://jayanilakshika.github.io/quollr/reference/show_link_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model. — show_link_plots","text":"point_data tibble contains high-dimensional data, non-linear dimension reductions model high-dimensions. edge_data tibble contains wireframe data (). point_colours character vector contains colours points high-dimensional data model. point_sizes numeric vector contains sizes points high-dimensional data model.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_link_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model. — show_link_plots","text":"browsable HTML element.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/show_link_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the model overlaid on high-dimensional data along with 2-D wireframe model. — show_link_plots","text":"","code":"df_exe <- comb_all_data_model(highd_data = scurve, nldr_data = scurve_umap, model_highd = scurve_model_obj$model_highd, model_2d = scurve_model_obj$model_2d) edge_data <- scurve_model_obj$trimesh_data if (interactive()) {   show_link_plots(point_data = df_exe, edge_data = edge_data) }"},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_hexgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"stat_hexgrid Custom Stat for hexagonal grid plot — stat_hexgrid","title":"stat_hexgrid Custom Stat for hexagonal grid plot — stat_hexgrid","text":"stat_hexgrid Custom Stat hexagonal grid plot","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_hexgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stat_hexgrid Custom Stat for hexagonal grid plot — stat_hexgrid","text":"","code":"stat_hexgrid(   mapping = NULL,   data = NULL,   geom = GeomHexgrid$default_aes(),   position = \"identity\",   show.legend = NA,   outliers = TRUE,   inherit.aes = TRUE,   ... )"},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_hexgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stat_hexgrid Custom Stat for hexagonal grid plot — stat_hexgrid","text":"mapping Aesthetic mappings plot. data data plotted. geom geometry used plot. position position adjustment applied. show.legend Whether show legend layer. outliers Whether include outliers. inherit.aes Whether inherit aesthetics plot layer. ... Additional arguments passed `layer` function.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_hexgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stat_hexgrid Custom Stat for hexagonal grid plot — stat_hexgrid","text":"`ggplot2` layer object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_trimesh.html","id":null,"dir":"Reference","previous_headings":"","what":"stat_trimesh Custom Stat for trimesh plot — stat_trimesh","title":"stat_trimesh Custom Stat for trimesh plot — stat_trimesh","text":"stat_trimesh Custom Stat trimesh plot","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_trimesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stat_trimesh Custom Stat for trimesh plot — stat_trimesh","text":"","code":"stat_trimesh(   mapping = NULL,   data = NULL,   geom = GeomTrimesh$default_aes(),   position = \"identity\",   show.legend = NA,   outliers = TRUE,   inherit.aes = TRUE,   ... )"},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_trimesh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stat_trimesh Custom Stat for trimesh plot — stat_trimesh","text":"mapping Aesthetic mappings plot. data data plotted. geom geometry used plot. position position adjustment applied. show.legend Whether show legend layer. outliers Whether include outliers. inherit.aes Whether inherit aesthetics plot layer. ... Additional arguments passed `layer` function.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/stat_trimesh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stat_trimesh Custom Stat for trimesh plot — stat_trimesh","text":"`ggplot2` layer object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/tri_bin_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangulate bin centroids — tri_bin_centroids","title":"Triangulate bin centroids — tri_bin_centroids","text":"function triangulates bin centroids using x y coordinates provided input data frame returns triangular object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/tri_bin_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangulate bin centroids — tri_bin_centroids","text":"","code":"tri_bin_centroids(centroids_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/tri_bin_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangulate bin centroids — tri_bin_centroids","text":"centroids_data tibble containing bin centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/tri_bin_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangulate bin centroids — tri_bin_centroids","text":"triangular object representing triangulated bin centroids.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/tri_bin_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangulate bin centroids — tri_bin_centroids","text":"","code":"all_centroids_df <- scurve_model_obj$hb_obj$centroids counts_data <- scurve_model_obj$hb_obj$std_cts umap_with_hb_id <- scurve_model_obj$hb_obj$data_hb_id df_bin_centroids <- merge_hexbin_mean(data_hb = umap_with_hb_id, counts_data = counts_data, centroids_data = all_centroids_df) tri_bin_centroids(centroids_data = df_bin_centroids) #> $trimesh_object #> Delaunay triangulation, node and triangle indices: #> triangle: nodes (a,b,c), neighbour triangles [i,j,k]  #> 1: (1,2,8), [2,6,0] #> 2: (9,8,2), [1,5,3] #> 3: (18,8,9), [2,8,7] #> 4: (9,3,10), [15,9,5] #> 5: (3,9,2), [2,74,4] #> 6: (17,1,8), [1,7,10] #> 7: (17,8,18), [3,12,6] #> 8: (9,19,18), [13,3,9] #> 9: (9,10,19), [17,8,4] #> 10: (27,1,17), [6,11,0] #> 11: (28,27,17), [10,12,26] #> 12: (28,17,18), [7,16,11] #> 13: (18,19,29), [18,16,8] #> 14: (4,5,11), [36,20,60] #> 15: (4,10,3), [4,62,20] #> 16: (18,29,28), [24,12,13] #> 17: (19,10,20), [22,19,9] #> 18: (19,30,29), [28,13,19] #> 19: (19,20,30), [30,18,17] #> 20: (4,11,10), [22,15,14] #> 21: (20,11,21), [31,29,22] #> 22: (11,20,10), [17,20,21] #> 23: (28,39,38), [34,26,24] #> 24: (39,28,29), [16,25,23] #> 25: (29,40,39), [27,24,28] #> 26: (28,38,27), [134,11,23] #> 27: (39,40,48), [39,35,25] #> 28: (29,30,40), [32,25,18] #> 29: (20,21,31), [41,30,21] #> 30: (20,31,30), [33,19,29] #> 31: (11,12,21), [43,21,36] #> 32: (30,41,40), [37,28,33] #> 33: (30,31,41), [48,32,30] #> 34: (39,47,38), [98,23,35] #> 35: (39,48,47), [93,34,27] #> 36: (11,5,12), [53,31,14] #> 37: (40,41,49), [69,39,32] #> 38: (77,48,49), [39,100,93] #> 39: (40,49,48), [38,27,37] #> 40: (33,31,32), [41,49,44] #> 41: (21,32,31), [40,29,42] #> 42: (21,22,32), [49,41,43] #> 43: (22,21,12), [31,46,42] #> 44: (42,31,33), [40,56,48] #> 45: (23,22,13), [46,52,50] #> 46: (13,22,12), [43,59,45] #> 47: (6,14,13), [52,59,58] #> 48: (42,41,31), [33,44,54] #> 49: (22,33,32), [40,42,50] #> 50: (23,33,22), [49,45,55] #> 51: (24,23,14), [52,64,57] #> 52: (14,23,13), [45,47,51] #> 53: (12,5,6), [60,59,36] #> 54: (41,42,54), [68,69,48] #> 55: (33,23,34), [57,56,50] #> 56: (33,34,42), [66,44,55] #> 57: (24,34,23), [55,51,67] #> 58: (14,6,15), [73,64,47] #> 59: (6,13,12), [46,53,47] #> 60: (6,5,4), [14,61,53] #> 61: (7,6,4), [60,62,73] #> 62: (7,4,3), [15,74,61] #> 63: (25,35,24), [67,77,81] #> 64: (14,15,24), [77,51,58] #> 65: (42,43,50), [70,68,66] #> 66: (43,42,34), [56,71,65] #> 67: (34,24,35), [63,71,57] #> 68: (42,50,54), [76,54,65] #> 69: (41,54,49), [84,37,54] #> 70: (51,50,43), [65,83,80] #> 71: (34,35,43), [82,66,67] #> 72: (16,15,7), [73,0,79] #> 73: (7,15,6), [58,61,72] #> 74: (3,2,7), [0,62,5] #> 75: (64,54,59), [85,107,84] #> 76: (50,55,54), [85,68,80] #> 77: (25,24,15), [64,79,63] #> 78: (26,25,16), [79,110,89] #> 79: (16,25,15), [77,72,78] #> 80: (51,55,50), [76,70,94] #> 81: (36,35,25), [63,89,88] #> 82: (43,35,44), [88,83,71] #> 83: (43,44,51), [91,70,82] #> 84: (64,49,54), [69,75,90] #> 85: (59,54,55), [76,86,75] #> 86: (60,59,55), [85,87,106] #> 87: (60,55,56), [94,129,86] #> 88: (36,44,35), [82,81,109] #> 89: (26,36,25), [81,78,102] #> 90: (69,49,64), [84,105,101] #> 91: (52,51,44), [83,96,95] #> 92: (47,77,76), [99,97,93] #> 93: (77,47,48), [35,38,92] #> 94: (56,55,51), [80,95,87] #> 95: (52,56,51), [94,91,108] #> 96: (45,52,44), [91,109,141] #> 97: (47,76,75), [104,121,92] #> 98: (47,85,38), [134,34,121] #> 99: (76,77,88), [119,114,92] #> 100: (78,77,49), [38,101,125] #> 101: (69,78,49), [100,90,116] #> 102: (36,26,37), [110,113,89] #> 103: (85,75,86), [122,153,121] #> 104: (76,87,75), [122,97,114] #> 105: (70,69,64), [90,120,118] #> 106: (65,59,60), [86,128,107] #> 107: (65,64,59), [75,106,111] #> 108: (57,56,52), [95,112,130] #> 109: (45,44,36), [88,113,96] #> 110: (37,26,16), [78,0,102] #> 111: (64,65,71), [143,120,107] #> 112: (52,53,57), [140,108,141] #> 113: (36,37,45), [138,109,102] #> 114: (76,88,87), [150,104,99] #> 115: (78,90,89), [147,125,139] #> 116: (79,78,69), [101,117,139] #> 117: (80,79,69), [116,118,135] #> 118: (80,69,70), [105,127,117] #> 119: (77,89,88), [155,99,125] #> 120: (64,71,70), [136,105,111] #> 121: (47,75,85), [103,98,97] #> 122: (86,75,87), [104,124,103] #> 123: (99,98,87), [124,150,174] #> 124: (98,86,87), [122,123,157] #> 125: (77,78,89), [115,119,100] #> 126: (91,90,79), [139,135,164] #> 127: (70,81,80), [148,118,136] #> 128: (66,65,60), [106,133,132] #> 129: (56,61,60), [133,87,130] #> 130: (56,57,61), [158,129,108] #> 131: (53,45,46), [138,159,141] #> 132: (72,65,66), [128,167,143] #> 133: (61,66,60), [128,129,144] #> 134: (85,27,38), [26,98,152] #> 135: (80,91,79), [126,117,161] #> 136: (70,71,81), [137,127,120] #> 137: (71,82,81), [170,136,142] #> 138: (45,37,46), [0,131,113] #> 139: (78,79,90), [126,115,116] #> 140: (58,57,53), [112,159,145] #> 141: (52,45,53), [131,112,96] #> 142: (71,72,82), [172,137,143] #> 143: (72,71,65), [111,132,142] #> 144: (67,66,61), [133,168,163] #> 145: (62,57,58), [140,186,158] #> 146: (90,102,101), [190,147,164] #> 147: (101,89,90), [115,146,160] #> 148: (80,81,92), [162,161,127] #> 149: (97,96,85), [152,153,188] #> 150: (99,87,88), [114,151,123] #> 151: (100,99,88), [150,155,156] #> 152: (96,27,85), [134,149,0] #> 153: (97,85,86), [103,157,149] #> 154: (99,110,109), [207,174,156] #> 155: (100,88,89), [119,160,151] #> 156: (110,99,100), [151,175,154] #> 157: (97,86,98), [124,179,153] #> 158: (62,61,57), [130,145,168] #> 159: (58,53,46), [131,187,140] #> 160: (101,100,89), [155,147,176] #> 161: (80,92,91), [166,135,148] #> 162: (81,93,92), [195,148,170] #> 163: (67,73,66), [167,144,191] #> 164: (90,91,102), [178,146,126] #> 165: (101,112,111), [189,176,190] #> 166: (91,92,103), [169,178,161] #> 167: (73,72,66), [132,163,171] #> 168: (62,67,61), [144,158,184] #> 169: (104,103,92), [166,195,194] #> 170: (81,82,93), [182,162,137] #> 171: (83,72,73), [167,197,172] #> 172: (83,82,72), [142,171,183] #> 173: (62,63,68), [205,184,186] #> 174: (99,109,98), [180,123,154] #> 175: (100,111,110), [218,156,176] #> 176: (100,101,111), [165,175,160] #> 177: (113,112,102), [190,199,181] #> 178: (91,103,102), [199,164,166] #> 179: (108,97,98), [157,180,192] #> 180: (108,98,109), [174,201,179] #> 181: (123,112,113), [177,208,222] #> 182: (82,94,93), [210,170,183] #> 183: (82,83,94), [215,182,172] #> 184: (62,68,67), [185,168,173] #> 185: (67,68,74), [204,191,184] #> 186: (63,62,58), [145,187,173] #> 187: (63,58,46), [159,0,186] #> 188: (97,107,96), [212,149,192] #> 189: (112,122,111), [198,165,222] #> 190: (101,102,112), [177,165,146] #> 191: (67,74,73), [193,163,185] #> 192: (97,108,107), [213,188,179] #> 193: (73,74,84), [204,197,191] #> 194: (114,103,104), [169,216,209] #> 195: (104,92,93), [162,196,169] #> 196: (93,105,104), [228,195,210] #> 197: (73,84,83), [203,171,193] #> 198: (121,111,122), [189,233,218] #> 199: (113,102,103), [178,209,177] #> 200: (108,119,118), [221,213,201] #> 201: (119,108,109), [180,202,200] #> 202: (109,120,119), [219,201,207] #> 203: (95,83,84), [197,227,215] #> 204: (84,74,68), [185,205,193] #> 205: (84,68,63), [173,0,204] #> 206: (120,110,121), [218,234,207] #> 207: (109,110,120), [206,202,154] #> 208: (113,124,123), [242,181,223] #> 209: (114,113,103), [199,194,223] #> 210: (93,94,105), [226,196,182] #> 211: (106,94,95), [215,227,226] #> 212: (117,96,107), [188,214,0] #> 213: (107,108,118), [200,214,192] #> 214: (107,118,117), [230,212,213] #> 215: (95,94,83), [183,203,211] #> 216: (115,114,104), [194,228,224] #> 217: (129,128,120), [219,234,243] #> 218: (121,110,111), [175,198,206] #> 219: (128,119,120), [202,217,231] #> 220: (130,129,121), [234,233,238] #> 221: (119,127,118), [240,200,246] #> 222: (123,122,112), [189,181,239] #> 223: (113,114,124), [236,208,209] #> 224: (125,114,115), [216,237,236] #> 225: (116,105,106), [226,0,229] #> 226: (106,105,94), [210,211,225] #> 227: (106,95,84), [203,0,211] #> 228: (115,104,105), [196,229,216] #> 229: (116,115,105), [228,225,237] #> 230: (126,117,118), [214,240,0] #> 231: (119,128,134), [249,246,219] #> 232: (137,130,122), [233,251,244] #> 233: (130,121,122), [198,232,220] #> 234: (129,120,121), [206,220,217] #> 235: (132,124,125), [236,0,242] #> 236: (125,124,114), [223,224,235] #> 237: (125,115,116), [229,0,224] #> 238: (136,129,130), [220,244,241] #> 239: (131,122,123), [222,248,251] #> 240: (118,127,126), [252,230,221] #> 241: (135,129,136), [238,250,243] #> 242: (123,124,132), [235,248,208] #> 243: (135,128,129), [217,241,249] #> 244: (137,136,130), [238,232,250] #> 245: (127,134,133), [253,252,246] #> 246: (119,134,127), [245,221,231] #> 247: (131,132,137), [0,251,248] #> 248: (123,132,131), [247,239,242] #> 249: (135,134,128), [231,243,253] #> 250: (137,135,136), [241,244,0] #> 251: (137,122,131), [239,247,232] #> 252: (127,133,126), [0,240,245] #> 253: (133,134,135), [249,0,245] #> boundary nodes:  1 2 7 16 37 46 63 84 106 116 125 132 137 135 133 126 117 96 27  #>  #> $n_h #>   [1]  1 10  8  8  2  2 12 11  9  4 11 12  1  6 12 12  5 10 10 11  5 14 11  9  6 #>  [26]  6  1 10  5  8  8  1  9  5 11  7  9 11  5 10  8 10 12  2 13  1  9  3  2  6 #>  [51]  9 10  7  5 12  6  6  9  9  9  6  6  1 10  9  5  5  8  1 10  9  6 11  5  3 #>  [76]  5  3 11  3 12  6  5  8  9 12  9 10 11  9 12  7  8 11  5  7  4  8  5  8  8 #> [101]  4  9  7 10  7 15 12  6  5  5  7 14  3  3  8  7  4  9  9  5  8  8  7  5  4 #> [126]  4 13 14  6  7 10 10  3  1  2  1  1 #>"},{"path":"https://jayanilakshika.github.io/quollr/reference/triangulate_bin_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangulate Bin Centroids — triangulate_bin_centroids","title":"Triangulate Bin Centroids — triangulate_bin_centroids","text":"function triangulates bin centroids/ means using x y coordinates provided input data frame returns triangular object.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/triangulate_bin_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangulate Bin Centroids — triangulate_bin_centroids","text":"","code":"triangulate_bin_centroids(hex_bin_df, x = \"c_x\", y = \"c_y\")"},{"path":"https://jayanilakshika.github.io/quollr/reference/triangulate_bin_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangulate Bin Centroids — triangulate_bin_centroids","text":"hex_bin_df data frame containing bin centroids/ means. x name column contains x coordinates bin centroids/ means. y name column contains y coordinates bin centroids/ means.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/triangulate_bin_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangulate Bin Centroids — triangulate_bin_centroids","text":"triangular object representing triangulated bin centroids/ means.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/triangulate_bin_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangulate Bin Centroids — triangulate_bin_centroids","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,                                         x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,                                         y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled,                                              x = \"UMAP1\", y = \"UMAP2\",                                              num_bins_x = num_bins_x,                                              num_bins_y = num_bins_y,                                              x_start = NA, y_start = NA,                                              buffer_x = NA,                                              buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. all_centroids_df <- as.data.frame(do.call(cbind, centroid_list)) s_curve_noise_umap_scaled_rm_id <- s_curve_noise_umap_scaled |> dplyr::select(-ID) nldr_with_hb_id_list <- assign_data(nldr_df = s_curve_noise_umap_scaled_rm_id, centroid_df = all_centroids_df) umap_with_hb_id <- as.data.frame(do.call(cbind, nldr_with_hb_id_list)) std_counts_list <- compute_std_counts(nldr_df_with_hex_id = umap_with_hb_id) counts_df <- as.data.frame(do.call(cbind, std_counts_list)) df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df, counts_df = counts_df) triangulate_bin_centroids(hex_bin_df = df_bin_centroids, x = \"c_x\", y = \"c_y\") #> Warning: triangle collapsed! #> Warning: triangle collapsed! #> Warning: three points coincide or are collinear! #> Warning: three points coincide or are collinear! #> Delaunay triangulation, node and triangle indices: #> triangle: nodes (a,b,c), neighbour triangles [i,j,k]  #> 1: (1,3,2), [2,0,4] #> 2: (4,2,3), [1,3,9] #> 3: (5,4,3), [2,4,5] #> 4: (5,3,1), [1,8,3] #> 5: (6,4,5), [3,7,10] #> 6: (6,7,8), [11,10,7] #> 7: (7,6,5), [5,8,6] #> 8: (7,1,5), [4,7,0] #> 9: (8,4,2), [2,0,10] #> 10: (6,8,4), [9,5,6] #> 11: (9,8,7), [6,0,12] #> 12: (10,8,9), [11,0,0] #> boundary nodes:  2 1 7 9 10 8"},{"path":"https://jayanilakshika.github.io/quollr/reference/update_trimesh_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Update from and to values in trimesh data — update_trimesh_index","title":"Update from and to values in trimesh data — update_trimesh_index","text":"function update indexes.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/update_trimesh_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update from and to values in trimesh data — update_trimesh_index","text":"","code":"update_trimesh_index(trimesh_data)"},{"path":"https://jayanilakshika.github.io/quollr/reference/update_trimesh_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update from and to values in trimesh data — update_trimesh_index","text":"trimesh_data tibble contains wireframe data.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/update_trimesh_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update from and to values in trimesh data — update_trimesh_index","text":"tibble contains updated edge information.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/update_trimesh_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update from and to values in trimesh data — update_trimesh_index","text":"","code":"tr_from_to_df <- scurve_model_obj$trimesh_data update_trimesh_index(trimesh_data = tr_from_to_df) #> # A tibble: 346 × 10 #>     from    to x_from y_from  x_to   y_to from_count to_count from_reindexed #>    <int> <int>  <dbl>  <dbl> <dbl>  <dbl>      <dbl>    <dbl>          <int> #>  1    35    49  0.234 0.0288 0.192 0.101          10       11              2 #>  2    34    35  0.150 0.0288 0.234 0.0288          1       10              1 #>  3    49    65  0.192 0.101  0.234 0.173          11       10              8 #>  4    35    36  0.234 0.0288 0.317 0.0288         10        8              2 #>  5    64    65  0.150 0.173  0.234 0.173           5       10             17 #>  6    35    50  0.234 0.0288 0.275 0.101          10        9              2 #>  7    64    79  0.150 0.173  0.192 0.245           5       10             17 #>  8    36    50  0.317 0.0288 0.275 0.101           8        9              3 #>  9    78    94  0.109 0.245  0.150 0.318           1       11             27 #> 10    78    79  0.109 0.245  0.192 0.245           1       10             27 #> # ℹ 336 more rows #> # ℹ 1 more variable: to_reindexed <int>"},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_lg_mesh.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize triangular mesh with coloured long edges — vis_lg_mesh","title":"Visualize triangular mesh with coloured long edges — vis_lg_mesh","text":"function visualize triangular mesh coloured long edges.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_lg_mesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize triangular mesh with coloured long edges — vis_lg_mesh","text":"","code":"vis_lg_mesh(distance_edges, benchmark_value, tr_coord_df, distance_col)"},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_lg_mesh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize triangular mesh with coloured long edges — vis_lg_mesh","text":"distance_edges tibble contains edge information. benchmark_value threshold value determine long edges. tr_coord_df tibble contains x y coordinates start end points. distance_col column name `distance_edges` representing distances.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_lg_mesh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize triangular mesh with coloured long edges — vis_lg_mesh","text":"ggplot object triangular mesh plot long edges coloured differently.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_lg_mesh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize triangular mesh with coloured long edges — vis_lg_mesh","text":"","code":"tr_from_to_df <- s_curve_obj$s_curve_umap_model_tr_from_to_df distance_df <- s_curve_obj$distance_df vis_lg_mesh(distance_edges = distance_df, benchmark_value = 0.75, tr_coord_df = tr_from_to_df, distance_col = \"distance\") #> Error in UseMethod(\"mutate\"): no applicable method for 'mutate' applied to an object of class \"NULL\""},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_rmlg_mesh.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize triangular mesh after removing the long edges — vis_rmlg_mesh","title":"Visualize triangular mesh after removing the long edges — vis_rmlg_mesh","text":"function visualize triangular mesh removing long edges.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_rmlg_mesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize triangular mesh after removing the long edges — vis_rmlg_mesh","text":"","code":"vis_rmlg_mesh(tr_coord_df)"},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_rmlg_mesh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize triangular mesh after removing the long edges — vis_rmlg_mesh","text":"tr_coord_df tibble contains x y coordinates start end points.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_rmlg_mesh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize triangular mesh after removing the long edges — vis_rmlg_mesh","text":"ggplot object triangular mesh plot long edges removed.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/vis_rmlg_mesh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize triangular mesh after removing the long edges — vis_rmlg_mesh","text":"","code":"tr_from_to_df <- s_curve_obj$s_curve_umap_model_tr_from_to_df vis_rmlg_mesh(tr_coord_df = tr_from_to_df)"},{"path":"https://jayanilakshika.github.io/quollr/reference/weighted_highD_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weighted Mean for High-Dimensional Data — weighted_highD_data","title":"Compute Weighted Mean for High-Dimensional Data — weighted_highD_data","text":"function computes weighted mean specified columns training data based distances average points non-linear dimensionality reduction (NLDR) space.","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/weighted_highD_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weighted Mean for High-Dimensional Data — weighted_highD_data","text":"","code":"weighted_highD_data(   training_data,   nldr_df_with_hex_id,   column_start_text = \"x\" )"},{"path":"https://jayanilakshika.github.io/quollr/reference/weighted_highD_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weighted Mean for High-Dimensional Data — weighted_highD_data","text":"training_data data frame containing training data ID column. nldr_df_with_hex_id data frame 2D embeddings hexagonal bin IDs. column_start_text starting text column names training_data considered weighted mean. Default \"x\".","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/weighted_highD_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Weighted Mean for High-Dimensional Data — weighted_highD_data","text":"data frame computed weighted mean specified column. nldr_df_with_hex_id = UMAP_data_with_hb_id, column_start_text = \"x\")","code":""},{"path":"https://jayanilakshika.github.io/quollr/reference/weighted_highD_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Weighted Mean for High-Dimensional Data — weighted_highD_data","text":"","code":"num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", hex_size = NA, buffer_x = NA) #> Hex size is set to 0.2. #> Buffer along the x-axis is set to 0.519615242270663. num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,  y = \"UMAP2\", hex_size = NA, buffer_y = NA) #> Hex size is set to 0.2. #> Buffer along the y-axis is set to 0.45. hex_bin_obj <- generate_hex_binning_info(nldr_df = s_curve_noise_umap_scaled, x = \"UMAP1\", y = \"UMAP2\", num_bins_x = num_bins_x, num_bins_y = num_bins_y, x_start = NA, y_start = NA, buffer_x = NA, buffer_y = NA, hex_size = NA) #> Hex size is set to 0.2. #> x_start is set to -0.173205080756888. #> y_start is set to -0.15. #> Hex size is set to 0.2. UMAP_data_with_hb_id <- as.data.frame(do.call(cbind, hex_bin_obj$nldr_data_with_hex_id)) weighted_highD_data(training_data = s_curve_noise_training, nldr_df_with_hex_id = UMAP_data_with_hb_id, column_start_text = \"x\") #> # A tibble: 10 × 8 #>    hb_id      x1     x2     x3        x4        x5       x6        x7 #>    <dbl>   <dbl>  <dbl>  <dbl>     <dbl>     <dbl>    <dbl>     <dbl> #>  1     2 -0.630  1.74   -1.77   0.00910  -0.00246  -0.00854 -0.00158  #>  2     6 -0.456  0.443  -1.79  -0.000130  0.00210  -0.0341   0.000214 #>  3     7  0.320  1.47   -1.89   0.00914  -0.00849  -0.0201  -0.00109  #>  4    12  0.303  0.0545 -1.87   0.00553   0.0119   -0.00321 -0.00288  #>  5    13  0.883  0.701  -0.755  0.000532 -0.000361  0.0175   0.00205  #>  6    18  0.334  1.34   -0.148  0.00579   0.000540  0.0103   0.00299  #>  7    24 -0.802  1.24    0.502 -0.00103   0.00134   0.0157   0.000799 #>  8    28 -0.584  1.21    1.78   0.000158 -0.00400  -0.0145  -0.000303 #>  9    29 -0.0395 0.199   1.95  -0.00361  -0.00255  -0.00902 -0.00213  #> 10    34  0.643  1.22    1.63  -0.000436  0.00541  -0.00879 -0.00113"},{"path":"https://jayanilakshika.github.io/quollr/news/index.html","id":"quollr-0313","dir":"Changelog","previous_headings":"","what":"quollr 0.3.13","title":"quollr 0.3.13","text":"CRAN release: 2025-09-23","code":""},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/news/index.html","id":"quollr-037","dir":"Changelog","previous_headings":"","what":"quollr 0.3.7","title":"quollr 0.3.7","text":"CRAN release: 2025-07-22","code":""},{"path":[]},{"path":[]},{"path":"https://jayanilakshika.github.io/quollr/news/index.html","id":"quollr-011","dir":"Changelog","previous_headings":"","what":"quollr 0.1.1","title":"quollr 0.1.1","text":"CRAN release: 2024-03-05 Initial CRAN submission.","code":""}]
