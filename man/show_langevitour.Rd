% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/highd.R
\name{show_langevitour}
\alias{show_langevitour}
\title{Visualize the model overlaid on high-dimensional data}
\usage{
show_langevitour(
  df,
  df_b,
  df_b_with_center_data,
  benchmark_value,
  distance_df,
  distance_col,
  use_default_benchmark_val = FALSE,
  col_start
)
}
\arguments{
\item{df}{A tibble that contains the high-dimensional data.}

\item{df_b}{A tibble that contains the high-dimensional coordinates of bin centroids.}

\item{df_b_with_center_data}{The dataset with hexagonal bin centroids.}

\item{benchmark_value}{The benchmark value used to remove long edges (optional).}

\item{distance_df}{The tibble with distance.}

\item{distance_col}{The name of the distance column.}

\item{use_default_benchmark_val}{Logical, indicating whether to use default
benchmark value  to remove long edges (default is FALSE).}

\item{col_start}{The text that begin the column name of the high-dimensional data.}
}
\value{
A langevitour object with the model and the high-dimensional data.
}
\description{
This function generates a LangeviTour visualization based on different
conditions and input parameters.
}
\examples{
r2 <- diff(range(s_curve_noise_umap$UMAP2))/diff(range(s_curve_noise_umap$UMAP1))
num_bins_x <- 3
hb_obj <- hex_binning(data = s_curve_noise_umap_scaled, bin1 = num_bins_x,
s1 = -0.1, s2 = -0.1, r2 = r2)
all_centroids_df <- hb_obj$centroids
counts_df <- hb_obj$std_cts
df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df,
counts_df = counts_df)
tr1_object <- tri_bin_centroids(hex_df = df_bin_centroids, x = "c_x", y = "c_y")
tr_from_to_df <- gen_edges(tri_object = tr1_object)
distance_df <- cal_2d_dist(tr_coord_df = tr_from_to_df, start_x = "x_from",
start_y = "y_from", end_x = "x_to", end_y = "y_to",
select_vars = c("from", "to", "distance"))
umap_data_with_hb_id <- hb_obj$data_hb_id
df_all <- dplyr::bind_cols(s_curve_noise_training |> dplyr::select(-ID),
umap_data_with_hb_id)
df_bin <- avg_highd_data(data = df_all, col_start = "x")
show_langevitour(df = df_all, df_b = df_bin, df_b_with_center_data = df_bin_centroids,
benchmark_value = 0.75, distance = distance_df, distance_col = "distance",
use_default_benchmark_val = FALSE, col_start = "x")

}
