% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2D.R
\name{find_pts_in_hexbins}
\alias{find_pts_in_hexbins}
\title{Find Points in Hexagonal Bins}
\usage{
find_pts_in_hexbins(nldr_data_with_hb_id)
}
\arguments{
\item{nldr_data_with_hb_id}{A data frame with 2D embedding data, ID and hexagonal bin IDs.}
}
\value{
A data frame with hexagonal bin IDs and the corresponding points.
}
\description{
This function maps points to their corresponding hexagonal bins based on the provided data frames.
}
\examples{
num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,
                                        x = "UMAP1", hex_size = NA, buffer_x = NA)
num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,
                                        y = "UMAP2", hex_size = NA, buffer_y = NA)
centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled,
                                             x = "UMAP1", y = "UMAP2", num_bins_x = num_bins_x,
                                             num_bins_y = num_bins_y, x_start = NA,
                                             y_start = NA, buffer_x = NA,
                                             buffer_y = NA, hex_size = NA)
all_centroids_df <- as.data.frame(do.call(cbind, centroid_list))
s_curve_noise_umap_scaled_rm_id <- s_curve_noise_umap_scaled |> dplyr::select(-ID)
nldr_with_hb_id_list <- assign_data(nldr_df = s_curve_noise_umap_scaled_rm_id,
centroid_df = all_centroids_df)
umap_with_hb_id <- as.data.frame(do.call(cbind, nldr_with_hb_id_list))
umap_with_hb_id <- umap_with_hb_id |> dplyr::mutate(ID = s_curve_noise_umap_scaled$ID)
find_pts_in_hexbins(nldr_data_with_hb_id = umap_with_hb_id)

}
