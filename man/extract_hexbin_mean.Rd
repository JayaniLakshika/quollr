% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2d.R
\name{extract_hexbin_mean}
\alias{extract_hexbin_mean}
\title{Extract hexagonal bin mean coordinates and the corresponding standardize counts.}
\usage{
extract_hexbin_mean(nldr_df_with_hex_id, counts_df)
}
\arguments{
\item{nldr_df_with_hex_id}{A data frame with 2D embeddings and hexagonal bin IDs.}

\item{counts_df}{A data frame contains hexagon IDs with the standardize number of points within each hexagon.}
}
\value{
A data frame contains hexagon ID, bin mean coordinates, and standardize counts.
}
\description{
Extract hexagonal bin mean coordinates and the corresponding standardize counts.
}
\examples{
num_bins_x <- calculate_effective_x_bins(nldr_df = s_curve_noise_umap_scaled,
                                        x = "UMAP1", hex_size = NA, buffer_x = NA)
num_bins_y <- calculate_effective_y_bins(nldr_df = s_curve_noise_umap_scaled,
                                        y = "UMAP2", hex_size = NA, buffer_y = NA)
centroid_list <- generate_full_grid_centroids(nldr_df = s_curve_noise_umap_scaled,
                                             x = "UMAP1", y = "UMAP2",
                                             num_bins_x = num_bins_x,
                                             num_bins_y = num_bins_y,
                                             x_start = NA, y_start = NA,
                                             buffer_x = NA,
                                             buffer_y = NA, hex_size = NA)
all_centroids_df <- as.data.frame(do.call(cbind, centroid_list))
s_curve_noise_umap_scaled_rm_id <- s_curve_noise_umap_scaled |> dplyr::select(-ID)
nldr_with_hb_id_list <- assign_data(nldr_df = s_curve_noise_umap_scaled_rm_id,
centroid_df = all_centroids_df)
umap_with_hb_id <- as.data.frame(do.call(cbind, nldr_with_hb_id_list))
std_counts_list <- compute_std_counts(nldr_df_with_hex_id = umap_with_hb_id)
counts_df <- as.data.frame(do.call(cbind, std_counts_list))
extract_hexbin_mean(nldr_df_with_hex_id = umap_with_hb_id, counts_df = counts_df)

}
