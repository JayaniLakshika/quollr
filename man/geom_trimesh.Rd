% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_trimesh.R
\name{geom_trimesh}
\alias{geom_trimesh}
\title{Create a trimesh plot}
\usage{
geom_trimesh(
  mapping = NULL,
  data = NULL,
  stat = "trimesh",
  position = "identity",
  show.legend = NA,
  na.rm = FALSE,
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping}{Aesthetic mappings for the plot.}

\item{data}{The data to be plotted.}

\item{stat}{The statistical transformation to be applied.}

\item{position}{The position adjustment to be applied.}

\item{show.legend}{Whether to show the legend for this layer.}

\item{na.rm}{Whether to remove missing values.}

\item{inherit.aes}{Whether to inherit aesthetics from the plot or the layer.}

\item{...}{Additional arguments to be passed to the `layer` function.}
}
\value{
A `ggplot2` layer object.
}
\description{
Create a trimesh plot
}
\examples{
r2 <- diff(range(s_curve_noise_umap$UMAP2))/diff(range(s_curve_noise_umap$UMAP1))
num_bins_x <- 4
hb_obj <- hex_binning(data = s_curve_noise_umap_scaled, bin1 = num_bins_x,
r2 = r2)
all_centroids_df <- hb_obj$centroids
counts_df <- hb_obj$std_cts
df_bin_centroids <- extract_hexbin_centroids(centroids_df = all_centroids_df,
counts_df = counts_df) |>
dplyr::filter(drop_empty == FALSE)
ggplot2::ggplot() +
geom_trimesh(data = df_bin_centroids, mapping = ggplot2::aes(x = c_x, y = c_y))

}
