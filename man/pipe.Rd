% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quollr-2D.R, R/quollr-util.R
\name{\%>\%}
\alias{\%>\%}
\alias{create_hex_bin}
\alias{calculate_effective_number_of_bins}
\alias{calculate_effective_shape_value}
\title{Create hexbin object}
\usage{
create_hex_bin(.data, var1, var2, num_bins = NA, shape_val = NA)

calculate_effective_number_of_bins(.data, var1 = var1, var2 = var2)

calculate_effective_shape_value(.data, var1 = var1, var2 = var2)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a lazy data frame (e.g. from dbplyr or dtplyr).}

\item{var1}{A literal variable name which represents x-axis.}

\item{var2}{A literal variable name which represents y-axis.}

\item{num_bins}{The number of bins partitioning the range of horizontal limits of the binning region in x}

\item{shape_val}{The shape = yheight/xwidth of the plotting regions.}
}
\value{
an S4 object of class "hexbin".

A numeric value.

A numeric value.
}
\description{
Create hexbin object

Calculate the effective number of bins along x-axis

Calculate effective shape parameter value
}
\examples{
data <- tibble::tibble(x = rnorm(300), y = rnorm(300))
create_hex_bin(data, var1 = "x", var2 = "y")
data <- tibble::tibble(x = rnorm(300), y = rnorm(300))
calculate_effective_number_of_bins(data, x, y)
data <- tibble::tibble(x = rnorm(300), y = rnorm(300))
calculate_effective_shape_value(data, x, y)
}
